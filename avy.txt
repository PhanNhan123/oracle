CREATE OR REPLACE PACKAGE BODY "AVY"
/*
||  Package     : Avy (Anniversary Processing)
||  Author      : David Chan (DCB)
||  Date        : June 7, 1997
||  Copyright   : Copyright(c) 1997 Manulife Financial (Int.) Limited
||  Description : This package contain all the major modules for anniversary processing.
*/
is
  l_trxn_cd     constant TTRXN_HISTORIES.TRXN_CD%TYPE := 'AVYPRC';
  l_acum_div_amt   number;     -- SG-20001207-01
  l_terr_cd    tcontrol_parameters.parm_valu%TYPE;   --VN/SH-Align (2005-001)
  l_cc_prem_ded  varchar2(1);--PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP
  --<<VPD-109
        cursor c_prem_grp_cont_mappings(pi_pol_num varchar2, pi_prem_grp varchar2, pi_pol_mth number) is
          select pol.fran_num,gcm.prem_grp, gcm.prem_grp_map, gcm.fnd_acct_typ, ccl.cont_valu
          from tprem_grp_cont_mappings gcm
               ,tpolicys pol
               ,tpol_clas_mapping pcm
               ,tcont_classes ccl
          where gcm.fnd_acct_typ = ccl.fnd_acct_typ
                and pol.pol_num = pcm.pol_num
                and pcm.cont_clas = ccl.cont_clas
                and pol.fran_num = ccl.fran_num
                and pol.pol_num = pi_pol_num
                and gcm.prem_grp = pi_prem_grp
                and pi_pol_mth between ccl.fr_mth and ccl.to_mth
                ;
        l_pol_mth    number;
  -->>VPD-109
  --<<VPD-731_VPD-1030
    CURSOR is_calc_loyal_bns
          (pi_dur number, p_cvg_base_idx number)
    IS
      SELECT bonus_pct, period_dur
      FROM  tcampaign_bonuses
      WHERE plan_code   = wrk.curr_pol.plan_code_base
      AND   plan_vers   = wrk.curr_pol.vers_num_base
      AND   crcy_code   = wrk.curr_pol.crcy_code

      and (band_fr = -1 or  wrk.curr_cvg(p_cvg_base_idx).face_amt >= band_fr)
      and (band_to = -1 or  wrk.curr_cvg(p_cvg_base_idx).face_amt < band_to)

      AND   cmpn_code   = 'LBS_ORIGAP'
      AND   pi_dur BETWEEN dur_fr AND dur_to
      ;
  -->>VPD-731_VPD-1030
/* ------------------------------- Private Modules ------------------------------------------ */
  --
  -- Interest Capitalization
  --
  procedure int_cap(pi_asof_dt in DATE)
  is
    l_loan_int      TLOAN_DETAILS.LOAN_INT_ACRU%TYPE;
    l_div_int       TAVY_VALUE_DTLS.ACUM_INT_ACRU%TYPE;
    l_inc_int       TAVY_VALUE_DTLS.INC_INT_ACRU%TYPE;  --V03/0064 DatTran 28/04/2004 BANK COLLECTION
    l_endow_int     TAVY_VALUE_DTLS.ENDOW_INT_ACRU%TYPE;
    l_anty_int      TAVY_VALUE_DTLS.ANTY_INT_ACRU%TYPE;  --  WCB98040101
    l_lump_sum_int  TAVY_VALUE_DTLS.LUMP_SUM_INT_ACRU%TYPE;  --  HK-1998V2-CP02-C
  begin
    fcn.set_return(0);
--<< Cuong Nguyen - 26/09/2003
    --if wrk.curr_loan.loan_actv_dt <= pi_asof_dt then  --  WCB98062301
    if nvl(wrk.curr_loan.loan_actv_dt, pi_asof_dt ) <= pi_asof_dt then
-->> Cuong Nguyen - 26/09/2003
    if     WRK.CURR_LOAN.LOAN_BAL + WRK.CURR_LOAN.LOAN_INT_ACRU > 0
--26/09/2003       and WRK.CURR_LOAN.LOAN_ACTV_DT <= pi_asof_dt
       and nvl(WRK.CURR_LOAN.LOAN_ACTV_DT, pi_asof_dt) <= pi_asof_dt -- Cuong Nguyen - 26/09/2003
      then
       WRK.CURR_LOAN.LOAN_INT_ACRU := WRK.CURR_LOAN.LOAN_INT_ACRU
                                      + calc_int(cd.int_rt_loan_int
                                                ,WRK.CURR_LOAN.LOAN_BAL
                                                ,WRK.CURR_LOAN.LOAN_ACTV_DT
                                                ,pi_asof_dt
                                                ,NULL                         -- SG-DEV2000-21-A
                                                ,wrk.curr_pol.plan_code_base  -- SG-DEV2000-21-A
                                                );
       WRK.CURR_LOAN.LOAN_ACTV_DT := pi_asof_dt;
    end if;
    if WRK.CURR_LOAN.LOAN_INT_ACRU > 0 then
       WRK.CURR_LOAN.PREV_YR_LOAN_BAL := WRK.CURR_LOAN.LOAN_BAL;
       l_loan_int                     := WRK.CURR_LOAN.LOAN_INT_ACRU;
       WRK.gen_acct_ext(cd.debit, 'PLNCAP',WRK.CURR_LOAN.LOAN_INT_ACRU,l_trxn_cd,pi_asof_dt);
       WRK.gen_acct_ext(cd.credit,'PLNINT',WRK.CURR_LOAN.LOAN_INT_ACRU,l_trxn_cd,pi_asof_dt);
       WRK.CURR_LOAN.LOAN_INT_ACRU := 0;
       WRK.gen_trxn_hist(get_trxn_seq
                        ,S_MESSAGE.GET_MESSAGE(3012,to_char(WRK.CURR_LOAN.LOAN_BAL))
                        ,l_trxn_cd
                        ,l_loan_int
                        ,null
                        ,pi_asof_dt
                        ,NULL ,'N'                            --CAS001135
                        );
    end if;
    end if;  --  WCB98062301
    if     WRK.CURR_AVY.ACUM_BAL + WRK.CURR_AVY.ACUM_INT_ACRU > 0
--26/09/2003       and WRK.CURR_AVY.ACUM_ACTV_DT <= pi_asof_dt
       and nvl(WRK.CURR_AVY.ACUM_ACTV_DT, pi_asof_dt) <= pi_asof_dt -- Cuong Nguyen - 26/09/2003
      then
       WRK.CURR_AVY.ACUM_INT_ACRU := WRK.CURR_AVY.ACUM_INT_ACRU
                                     + calc_int(cd.int_rt_acum_div_int
                                               ,WRK.CURR_AVY.ACUM_BAL
                                               ,WRK.CURR_AVY.ACUM_ACTV_DT
                                               ,pi_asof_dt
                                               ,NULL                         -- SG-DEV2000-21-A
                                               ,wrk.curr_pol.plan_code_base  -- SG-DEV2000-21-A
                                               );
       WRK.CURR_AVY.ACUM_ACTV_DT := pi_asof_dt;
--  end if;  --  HK-1998V2-AY02-C
    if WRK.CURR_AVY.ACUM_INT_ACRU > 0 then
       WRK.CURR_AVY.PREV_YR_ACCUM_BAL := WRK.CURR_AVY.ACUM_BAL;
       l_div_int                      := WRK.CURR_AVY.ACUM_INT_ACRU;
       WRK.gen_acct_ext(cd.credit,'DVDPAYIC',WRK.CURR_AVY.ACUM_INT_ACRU,l_trxn_cd,pi_asof_dt);
       WRK.gen_acct_ext(cd.debit, 'DVDINT'  ,WRK.CURR_AVY.ACUM_INT_ACRU,l_trxn_cd,pi_asof_dt);
       WRK.CURR_AVY.ACUM_INT_ACRU := 0;
       WRK.gen_trxn_hist(get_trxn_seq
                        ,S_MESSAGE.GET_MESSAGE(3010,to_char(WRK.CURR_AVY.ACUM_BAL))
                        ,l_trxn_cd
                        ,l_div_int
                        ,null
                        ,pi_asof_dt
      ,NULL ,'N'                            --CAS001135
                        );
    end if;
    end if;  --  HK-1998V2-AY02-C

    --<< V03/0064 DatTran 28/04/2004 BANK COLLECTION
    if     NVL(WRK.CURR_AVY.INC_BAL,0) + NVL(WRK.CURR_AVY.INC_INT_ACRU,0) > 0
       and nvl(WRK.CURR_AVY.INC_ACTV_DT, pi_asof_dt) <= pi_asof_dt
       and WRK.CURR_POL.DIV_OPT = CD.DIV_OPT_ACUM_DIV
    then
      WRK.CURR_AVY.INC_INT_ACRU := NVL(WRK.CURR_AVY.INC_INT_ACRU,0)
                                     + calc_int(CD.INT_RT_INCENTIVE
                                               ,NVL(WRK.CURR_AVY.PREV_YR_INC_BAL,0)
                                               ,NVL(WRK.CURR_AVY.INC_ACTV_DT, pi_asof_dt)
                                               ,pi_asof_dt
                                               ,NULL                         -- VN/SH-Align (2005-001)
                                               ,wrk.curr_pol.plan_code_base  -- VN/SH-Align (2005-001)
                                               );
      if WRK.CURR_AVY.INC_INT_ACRU > 0 then
        l_inc_int                      := WRK.CURR_AVY.INC_INT_ACRU;
        WRK.gen_acct_ext(cd.credit,'INCPAYIC',WRK.CURR_AVY.INC_INT_ACRU,l_trxn_cd,pi_asof_dt);
        WRK.gen_acct_ext(cd.debit, 'INCINT'  ,WRK.CURR_AVY.INC_INT_ACRU,l_trxn_cd,pi_asof_dt);

        WRK.CURR_AVY.INC_INT_ACRU := 0;
        WRK.gen_trxn_hist(get_trxn_seq
                         ,S_MESSAGE.GET_MESSAGE(3020,to_char(WRK.CURR_AVY.INC_BAL))
                         ,l_trxn_cd
                         ,l_inc_int
                         ,null
                         ,pi_asof_dt
                         );
      end if;
      WRK.CURR_AVY.INC_ACTV_DT := pi_asof_dt;
      WRK.CURR_AVY.PREV_YR_INC_BAL := WRK.CURR_AVY.INC_BAL;
    end if;
    -->> V03/0064 DatTran 28/04/2004 BANK COLLECTION

    if     WRK.CURR_AVY.ENDOW_BAL + WRK.CURR_AVY.ENDOW_INT_ACRU > 0
--26/09/2003       and WRK.CURR_AVY.ENDOW_ACTV_DT <= pi_asof_dt
       and nvl(WRK.CURR_AVY.ENDOW_ACTV_DT, pi_asof_dt) <= pi_asof_dt    -- Cuong Nguyen - 26/09/2003
      then
       WRK.CURR_AVY.ENDOW_INT_ACRU := WRK.CURR_AVY.ENDOW_INT_ACRU
                                     + calc_int(cd.int_rt_csh_cpn
                                               ,WRK.CURR_AVY.ENDOW_BAL
                                               ,WRK.CURR_AVY.ENDOW_ACTV_DT
                                               ,pi_asof_dt
                                               ,NULL                         -- SG-DEV2000-21-A
                                               ,wrk.curr_pol.plan_code_base  -- SG-DEV2000-21-A
                                               );
       WRK.CURR_AVY.ENDOW_ACTV_DT := pi_asof_dt;
--  end if;  --  HK-1998V2-AY02-C
    if WRK.CURR_AVY.ENDOW_INT_ACRU > 0 then
       WRK.CURR_AVY.PREV_YR_ENDOW_BAL := WRK.CURR_AVY.ENDOW_BAL;
       l_endow_int                    := WRK.CURR_AVY.ENDOW_INT_ACRU;
       WRK.gen_acct_ext(cd.credit,'CCPPAYIC',WRK.CURR_AVY.ENDOW_INT_ACRU,l_trxn_cd,pi_asof_dt);
       WRK.gen_acct_ext(cd.debit, 'CCPINT',  WRK.CURR_AVY.ENDOW_INT_ACRU,l_trxn_cd,pi_asof_dt);
       WRK.CURR_AVY.ENDOW_INT_ACRU := 0;
       WRK.gen_trxn_hist(get_trxn_seq
                        ,S_MESSAGE.GET_MESSAGE(3011,to_char(WRK.CURR_AVY.ENDOW_BAL))
                        ,l_trxn_cd
                        ,l_endow_int
                        ,null
                        ,pi_asof_dt
                        ,NULL ,'N'                            --CAS001135
                        );
    end if;
    end if;  --  HK-1998V2-AY02-C
--  WCB98040101 Start
    if     WRK.CURR_AVY.ANTY_BAL + WRK.CURR_AVY.ANTY_INT_ACRU > 0
--26/09/2003       and WRK.CURR_AVY.ANTY_ACTV_DT <= pi_asof_dt
       and nvl(WRK.CURR_AVY.ANTY_ACTV_DT, pi_asof_dt) <= pi_asof_dt -- Cuong Nguyen - 26/09/2003
      then
       WRK.CURR_AVY.ANTY_INT_ACRU := WRK.CURR_AVY.ANTY_INT_ACRU
                                     + calc_int(cd.int_rt_annuity
                                               ,WRK.CURR_AVY.ANTY_BAL
                                               ,WRK.CURR_AVY.ANTY_ACTV_DT
                                               ,pi_asof_dt
                                               ,NULL                         -- SG-DEV2000-21-A
                                               ,wrk.curr_pol.plan_code_base  -- SG-DEV2000-21-A
                                               );
       WRK.CURR_AVY.ANTY_ACTV_DT := pi_asof_dt;
--  end if;  --  HK-1998V2-AY02-C
    if WRK.CURR_AVY.ANTY_INT_ACRU > 0 then
       l_anty_int                    := WRK.CURR_AVY.ANTY_INT_ACRU;
       WRK.gen_acct_ext(cd.credit,'ANTYPYIC',WRK.CURR_AVY.ANTY_INT_ACRU,l_trxn_cd,pi_asof_dt);
       WRK.gen_acct_ext(cd.debit, 'ANTYINT',  WRK.CURR_AVY.ANTY_INT_ACRU,l_trxn_cd,pi_asof_dt);
       WRK.CURR_AVY.ANTY_INT_ACRU := 0;
       WRK.gen_trxn_hist(get_trxn_seq
                        ,S_MESSAGE.GET_MESSAGE(3016,to_char(WRK.CURR_AVY.ANTY_BAL))
                        ,l_trxn_cd
                        ,l_anty_int
                        ,null
                        ,pi_asof_dt
                        ,NULL ,'N'                            --CAS001135
                        );
    end if;
    end if;  --  HK-1998V2-AY02-C
--  WCB98040101 End
--  <<  HK-1998V2-CP02-C
--  SH-P-1999029-01 lump sum int cap logic regroup to procedure lump_sum_int_cap
--  >>  HK-1998V2-CP02-C
  end;
-- << SH-P-1999029-01 regrouping
procedure lump_sum_int_cap(pi_asof_dt in DATE)
  is
    l_lump_sum_int  TAVY_VALUE_DTLS.LUMP_SUM_INT_ACRU%TYPE;  --  HK-1998V2-CP02-C
  begin
    if WRK.CURR_AVY.LUMP_SUM_BAL + WRK.CURR_AVY.LUMP_SUM_INT_ACRU > 0
--       and WRK.CURR_AVY.LUMP_SUM_ACTV_DT <= pi_asof_dt then   --LIL2000-217
       and nvl(WRK.CURR_AVY.LUMP_SUM_ACTV_DT,pi_asof_dt) <= pi_asof_dt then   --LIL2000-217
/*       WRK.CURR_AVY.LUMP_SUM_INT_ACRU := WRK.CURR_AVY.LUMP_SUM_INT_ACRU
                                         + calc_int(''
                                                   ,''
                                                   ,WRK.CURR_AVY.LUMP_SUM_ACTV_DT
                                                   ,pi_asof_dt
                                                   ,WRK.CURR_PLAN(1).LUMP_SUM_INT_RT
                                                   ) * WRK.CURR_AVY.LUMP_SUM_BAL;*/  --LIL2000-217
         WRK.CURR_AVY.LUMP_SUM_INT_ACRU := WRK.CURR_AVY.LUMP_SUM_INT_ACRU
                                         + calc_int(cd.INT_RT_LUMP_SUM
                                                   ,nvl(WRK.CURR_AVY.LUMP_SUM_BAL,0)
                                                   ,nvl(WRK.CURR_AVY.LUMP_SUM_ACTV_DT,pi_asof_dt)
                                                   ,pi_asof_dt
                                                   ,NULL                         -- SG-DEV2000-21-A
                                                   ,wrk.curr_pol.plan_code_base  -- SG-DEV2000-21-A
                                                   ); --LIL2000-217
       WRK.CURR_AVY.LUMP_SUM_ACTV_DT := pi_asof_dt;
       if WRK.CURR_AVY.LUMP_SUM_INT_ACRU > 0 then
          l_lump_sum_int                    := WRK.CURR_AVY.LUMP_SUM_INT_ACRU;
          WRK.gen_acct_ext(cd.credit,'LSPPAYIC',WRK.CURR_AVY.LUMP_SUM_INT_ACRU,l_trxn_cd,pi_asof_dt);
          WRK.gen_acct_ext(cd.debit, 'LSPINT',  WRK.CURR_AVY.LUMP_SUM_INT_ACRU,l_trxn_cd,pi_asof_dt);
          WRK.CURR_AVY.LUMP_SUM_INT_ACRU := 0;
          WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3017,to_char(WRK.CURR_AVY.LUMP_SUM_BAL))
                           ,l_trxn_cd
                           ,l_lump_sum_int
                           ,null
                           ,pi_asof_dt
                           ,NULL ,'N'                            --CAS001135
                           );
       end if;
  end if;
end;
-- >> SH-P-1999029-01 regrouping
  --
  -- Dividend Declaration
  --
  function div_declare(pi_idx     in integer
                      ,pi_asof_dt in date
                      )
    return TCOVERAGES.DIV_CRNT_AMT%TYPE
  is
    l_POLVAL             RT.tbl_POLVAL;
    l_POLVAL_ENDOW       RT.tbl_POLVAL; --PJ6/0086-20060420-DONGTRUONG
    l_NSPVAL             RT.tbl_NSPVAL;
    l_divval     RT.tbl_divval;--PJ6/0086-20060420-DONGTRUONG
    l_DIV_RT_FA          TDIVIDEND_VALUES.DIV_RT%TYPE;
    l_DIV_RT_PUA         TDIVIDEND_VALUES.DIV_RT%TYPE;
    l_unit_basis_POLVAL  TPOLICY_VALUES.UNIT_BASIS%TYPE;
    l_unit_basis_NSPVAL  TNSP_VALUES.UNIT_BASIS%TYPE;
    l_unit_basis_DIV_FA  TNSP_VALUES.UNIT_BASIS%TYPE;
    l_unit_basis_DIV_PUA TNSP_VALUES.UNIT_BASIS%TYPE;
    l_D1                 TCOVERAGES.DIV_CRNT_AMT%TYPE := 0;
    l_D2                 TCOVERAGES.DIV_CRNT_AMT%TYPE := 0;
    l_D3                 TCOVERAGES.DIV_CRNT_AMT%TYPE := 0;
    l_dur                integer;
    l_mand_div_rt        TINTEREST_RATES.INT_RT%TYPE;
    l_assum_int_rt       TPLANS.ASSUM_INT_RT%TYPE;
    l_assum_mort_rt      TMORTALITYS.QX%TYPE;
    l_indst_mort_rt      TMORTALITYS.QX%TYPE;
    l_Face_Amt           TCOVERAGES.FACE_AMT%TYPE;
    l_assum_unit_basis   TMORTALITYS.UNIT_BASIS%TYPE;
    l_indst_unit_basis   TMORTALITYS.UNIT_BASIS%TYPE;
    l_assum_mort         NUMBER;
    l_indst_mort         NUMBER;
    l_div_rnd            VARCHAR2(50);
--  WCB98040901 Start
    l_DBVAL              RT.tbl_DBVAL;
    l_PV_Rt              TMORTALITYS.QX%TYPE := 0;
    l_NSP_Rt             TMORTALITYS.QX%TYPE := 0;
    l_Dth_Bnft_Rt        TMORTALITYS.QX%TYPE;
    l_unit_basis_DBVAL   TDEATH_BENEFIT_VALUES.UNIT_BASIS%TYPE;
    l_Dth_Bnft_Amt       TCOVERAGES.DTH_BNFT_AMT%TYPE;
--  WCB98040901 End
--  <<  HK-1998V2-NF02-C
    l_yr                 integer;
    l_xpry_yr            integer;
    l_last_AVY_dt        date;
    l_endow_rt           TPOLICY_VALUES.ENDOW_RT%TYPE;
    l_Cx                 TMORTALITYS.QX%TYPE;
    l_Dx                 TMORTALITYS.QX%TYPE;
    l_mort               TMORTALITYS.QX%TYPE;
    l_PEVAL              RT.tbl_PEVAL;
    l_PE_Rt              TPAGE3_RATES.RATE%TYPE := 0;
    l_PE_Rt_Aftr         TPAGE3_RATES.RATE%TYPE := 0;
    l_PE_Rt_Before       TPAGE3_RATES.RATE%TYPE := 0;
    l_PV_Rt_Aftr         TMORTALITYS.QX%TYPE := 0;
    l_PV_Rt_Before       TMORTALITYS.QX%TYPE := 0;
    l_md_key             TMORTALITYS.MD_KEY%TYPE;
    l_unit_basis         TPOLICY_VALUES.UNIT_BASIS%TYPE;
    l_unit_basis_PEVAL   TPOLICY_VALUES.UNIT_BASIS%TYPE;
--  >> HK-1998V2-NF02-C
    l_div_calc_mthd          TCONTROL_PARAMETERS.PARM_VALU%TYPE;   -- SG-DEV2000-07-A
    l_CVG_EFF_AGE number; --APP_171215
    l_sex_code  varchar2(1) ; 	--APP_171215
  begin
    fcn.set_return(0);
    ctl_parm.get('DIV_CALC_MTHD',l_div_calc_mthd);                 -- SG-DEV2000-07-A
    ctl_parm.get('RNDDIV',l_div_rnd);
    if WRK.CURR_CVG(pi_idx).PAR_CODE = cd.par_code_noNpar
      or (wrk.curr_pol.div_opt = '0' )           -- SG-DEV2000-07-A
     then
       return 0;
    end if;
-- >> TW-UAT8802-03-012
    if WRK.CURR_CVG(pi_idx).xpry_dt < pi_asof_dt then
       return 0;
    end if;
-- << TW-UAT8802-03-012
    l_dur :=   prem_calc.calc_att_age(pi_idx, pi_asof_dt, 'N')
             - WRK.CURR_CVG(pi_idx).CVG_EFF_AGE;
    if l_dur <= 0 then
       return 0;
    end if;
    if is_stat_in_force(ByReftoByValue.convert(wrk.curr_cvg(pi_idx).cvg_stat_cd)) = 'N' then  -- DCB98031601 --PJ6/0086-20060420-DONGTRUONG
       return 0;
    end if;
    --<<APP_171215
    l_CVG_EFF_AGE := WRK.CURR_CVG(pi_idx).CVG_EFF_AGE;
    l_sex_code  := WRK.CURR_CVG(pi_idx).sex_code;
    if  get_plan_mthd_ovrid( ByReftoByValue.convert(wrk.curr_cvg(pi_idx).plan_code),
                             ByReftoByValue.convert(wrk.curr_cvg(pi_idx).vers_num),
                             'DIV_BASE_ON_PAYOR' ) = 'Y' and
         wrk.srch_cli_link(cd.link_payor) is not null
    then

       l_CVG_EFF_AGE := calc_age(ByReftoByValue.convert(wrk.curr_cli(wrk.cli(wrk.srch_cli_link(cd.link_payor))).birth_dt)
                                        ,ByReftoByValue.convert(wrk.curr_cvg(pi_idx).cvg_eff_dt)
                                        ,ByReftoByValue.convert(wrk.curr_plan(pi_idx).age_calc_rule)
                                         );
        l_sex_code  := 	     ByReftoByValue.convert(wrk.curr_cli(wrk.cli(wrk.srch_cli_link(cd.link_payor))).sex_code);
   end if;


    -->>APP_171215
    l_POLVAL := RT.get_POLVAL(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE)  --PJ6/0086-20060420-DONGTRUONG
                          ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)  --PJ6/0086-20060420-DONGTRUONG
                          ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)  --PJ6/0086-20060420-DONGTRUONG
                           ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE) --PJ6/0086-20060420-DONGTRUONG
                           ,l_dur - 1
                          ,l_unit_basis_POLVAL
                          ,l_dur
                          ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).FACE_AMT)     --PJ12/0445
                          ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).cvg_stat_cd)     --PJ12/0445
                          );
--  WCB98050801 Start
    if WRK.CURR_POL.JOINT_CLI_DTH_IND = 'Y'
       and WRK.CURR_CVG(pi_idx).INS_TYP = '8' then  --  Joint Life
       l_NSPVAL := RT.get_NSPVAL(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE)   --PJ6/0086-20060420-DONGTRUONG
                                ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)  --PJ6/0086-20060420-DONGTRUONG
                                ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)    --PJ6/0086-20060420-DONGTRUONG
                                ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE) --PJ6/0086-20060420-DONGTRUONG
                                ,l_dur - 1
                                ,cd.nsp_typ_juvenile
                                ,l_unit_basis_NSPVAL
                                ,l_dur
                                );
--    else    --LIL2000-060
    elsif WRK.CURR_PLAN(pi_idx).DIV_FCT_K1 > 0 or WRK.CURR_PLAN(pi_idx).DIV_FCT_K2 > 0 then --LIL2000-060
--  WCB98050801 End
       l_NSPVAL := RT.get_NSPVAL(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE)   --PJ6/0086-20060420-DONGTRUONG
                                ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)  --PJ6/0086-20060420-DONGTRUONG
                                ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)    --PJ6/0086-20060420-DONGTRUONG
                                ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE) --PJ6/0086-20060420-DONGTRUONG
                                ,l_dur - 1
                                ,cd.nsp_typ_pua
                                ,l_unit_basis_NSPVAL
                                ,l_dur
                                );
    end if;
--  WCB98042301 Start
/*
    if WRK.CURR_PLAN(pi_idx).DIV_FCT_K1 > 0 then
       l_mand_div_rt  := RT.get_int_rt(cd.int_rt_mand_int, pi_asof_dt);
       l_assum_int_rt := WRK.CURR_PLAN(pi_idx).ASSUM_INT_RT;
       l_D1 :=   WRK.CURR_PLAN(pi_idx).DIV_FCT_K1
               * (l_mand_div_rt - l_assum_int_rt)
               * 0.5
               * (    get_unit(l_unit_basis_POLVAL, WRK.CURR_CVG(pi_idx).FACE_AMT)
                    * (l_POLVAL(l_dur - 1).PV_RT_AFTR + l_POLVAL(l_dur).PV_RT_BEFORE)
                  +   get_unit(l_unit_basis_NSPVAL, WRK.CURR_CVG(pi_idx).PUA_TOT_AMT)
                    * (l_NSPVAL(l_dur - 1).NSP_RT_AFTR + l_NSPVAL(l_dur).NSP_RT_BEFORE)
                 );
       l_D1 := greatest(0,l_D1);
    end if;
*/
--  <<  HK-1998V2-NF02-C
    if WRK.CURR_POL.POL_STAT_CD = cd.stat_eti then
       l_md_key := RT.get_plan_mort_typ(cd.PLAN_MORT_ETI
                                       ,ByReftoByValue.convert(WRK.CURR_PLAN(pi_idx).PLAN_CODE) --PJ6/0086-20060420-DONGTRUONG
                                       ,ByReftoByValue.convert(WRK.CURR_PLAN(pi_idx).VERS_NUM )); -- HK-20001227/Retrofit --PJ6/0086-20060420-DONGTRUONG
-- HK-1998V2-NF02-C(1)       l_md_key := 'MORT';  --  WWW
       l_yr := YEAR(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).XPRY_DT)) - YEAR(pi_asof_dt); --PJ6/0086-20060420-DONGTRUONG
       --PR11/0836 l_last_AVY_dt := add_date(pi_asof_dt,'YEARS',l_yr);
       l_last_AVY_dt := advance_PTD(pi_asof_dt, wrk.curr_pol.pol_eff_dt, l_yr*12); --PR11/0836

       if WRK.CURR_CVG(pi_idx).XPRY_DT > l_last_AVY_dt then
          l_xpry_yr := l_yr;
       else
          l_xpry_yr := l_yr - 1;
       end if;
       l_xpry_yr := l_xpry_yr - 1;
/* TW-UAT8802-01-149 042699
       if l_xpry_yr < 1 then
          l_PV_Rt_Aftr := 0;
       else
*/
/*  HK-1998V2-NF02-C(1) 040199
          l_mort := RT.get_mort_rt(l_md_key
                                  ,'1'  --  cd.MD_Dx_MORT_RT
                                  ,WRK.CURR_CVG(pi_idx).SEX_CODE
                                  ,pi_asof_dt
                                  ,WRK.CURR_CVG(pi_idx).CVG_EFF_AGE + l_dur - 1
                                  ,l_unit_basis
                                  );
          l_Dx := get_unit(l_unit_basis,l_mort);
          for j in 1 .. l_xpry_yr loop
              l_mort := RT.get_mort_rt(l_md_key
                                      ,'0'  --  cd.MD_Cx_MORT_RT
                                      ,WRK.CURR_CVG(pi_idx).SEX_CODE
                                      ,pi_asof_dt
                                      ,WRK.CURR_CVG(pi_idx).CVG_EFF_AGE + l_dur - 1 + j
                                      ,l_unit_basis
                                      );
              l_Cx := get_unit(l_unit_basis,l_mort);
              l_PV_Rt_Aftr := l_PV_Rt_Aftr + NFO.get_DB_Rt(pi_idx,
                                                       add_date(WRK.CURR_POL.LAST_AVY_DT,
                                                                'YEARS',j))
                              * l_Cx;
          end loop;
          l_PV_Rt_Aftr   := l_PV_Rt_Aftr / l_Dx;
*/
-- << HK-1998V2-NF02-C(1) 040199
-- << SG-DEV2000-07-A
-- This part is obsoleted, new function will be designed to handle ETI policys
--          l_PV_Rt_Aftr := NFO.GET(adv_years(pi_asof_dt,-1))(pi_idx).eti_pv;
-- >> SG-DEV2000-07-A
-- >> HK-1998V2-NF02-C(1) 040199
/* TW-UAT8802-01-149 042699
       end if;
       if l_xpry_yr < 2 then
          l_PV_Rt_Before := 0;
       else
*/
/* HK-1998V2-NF02-C(1) 040199
          l_mort := RT.get_mort_rt(l_md_key
                                  ,'1'  --  cd.MD_Dx_MORT_RT
                                  ,WRK.CURR_CVG(pi_idx).SEX_CODE
                                  ,pi_asof_dt
                                  ,WRK.CURR_CVG(pi_idx).CVG_EFF_AGE + l_dur
                                  ,l_unit_basis
                                  );
          l_Dx := get_unit(l_unit_basis,l_mort);
          for j in 2 .. l_xpry_yr loop
              l_mort := RT.get_mort_rt(l_md_key
                                      ,'0'  --  cd.MD_Cx_MORT_RT
                                      ,WRK.CURR_CVG(pi_idx).SEX_CODE
                                      ,pi_asof_dt
                                      ,WRK.CURR_CVG(pi_idx).CVG_EFF_AGE + l_dur - 1 + j
                                      ,l_unit_basis
                                      );
              l_Cx := get_unit(l_unit_basis,l_mort);
              l_PV_Rt_Before := l_PV_Rt_Before + NFO.get_DB_Rt(pi_idx,
                                                           add_date(WRK.CURR_POL.LAST_AVY_DT,
                                                                    'YEARS',j))
                                * l_Cx;
          end loop;
          l_PV_Rt_Before := l_PV_Rt_Before / l_Dx;
*/

-- << HK-1998V2-NF02-C(1) 040199
-- << SG-DEV2000-07-A
-- This part is obsoleted, new function will be designed to handle ETI policys
--    l_PV_Rt_Before := NFO.GET(pi_asof_dt)(pi_idx).eti_pv;
-- >> SG-DEV2000-07-A
-- >> HK-1998V2-NF02-C(1) 040199
-- TW-UAT8802-01-149       end if;

       l_PV_Rt := l_PV_Rt_Aftr + l_PV_Rt_Before;
       l_NSP_Rt := l_PV_Rt;
--<<PJ6/0086-20060420-DONGTRUONG
      /* l_endow_rt := RT.get_POLVAL(WRK.CURR_CVG(pi_idx).PLAN_CODE
                                   ,WRK.CURR_CVG(pi_idx).POL_VAL_VERS
                                   ,WRK.CURR_CVG(pi_idx).SEX_CODE
                                   ,WRK.CURR_CVG(pi_idx).CVG_EFF_AGE
                                   ,l_dur
                                   ,l_unit_basis
                                   )(l_dur).ENDOW_RT;*/

       l_POLVAL_ENDOW := RT.get_POLVAL(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE) --PJ6/0086-20060420-DONGTRUONG
                                   ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS) --PJ6/0086-20060420-DONGTRUONG
                                   ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE) --PJ6/0086-20060420-DONGTRUONG
                                   ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE)  --PJ6/0086-20060420-DONGTRUONG
                                   ,l_dur
                                   ,l_unit_basis
                                   ,null                                                      --PJ12/0445
                                   ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).FACE_AMT)     --PJ12/0445
                                   ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).cvg_stat_cd ) --PJ12/0445
                                   );
  l_endow_rt :=l_POLVAL_ENDOW(l_dur).ENDOW_RT;
-->>PJ6/0086-20060420-DONGTRUONG
-- << HK-1998V2-NF02-C(1)
       if nvl(WRK.CURR_CVG(pi_idx).ETI_ENDOW,0) = 0 then
   l_PE_Rt_Before := 0;
   l_PE_Rt_Aftr   := 0;
         l_PE_Rt        := 0;
       else
-- >> HK-1998V2-NF02-C(1)
       l_PEVAL := RT.get_PEVAL(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE)   --PJ6/0086-20060420-DONGTRUONG
                              ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)  --PJ6/0086-20060420-DONGTRUONG
                              ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)    --PJ6/0086-20060420-DONGTRUONG
                              ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE)   --PJ6/0086-20060420-DONGTRUONG
                              ,l_dur - 1
                              ,'PE'
                              ,l_unit_basis_PEVAL
                              ,l_dur
                              );

       l_PE_Rt_Aftr   := l_PEVAL(l_dur - 1).RATE * WRK.CURR_PLAN(pi_idx).ETI_FACTOR;
/* HK-1998V2-NF02-C(1)
       l_PE_Rt_Before := l_PEVAL(l_dur).RATE * WRK.CURR_PLAN(pi_idx).ETI_FACTOR
                         + calc_RT_value(l_endow_rt,l_unit_basis);
*/
-- << HK-1998V2-NF02-C(1)
         l_PE_Rt_Before := l_PEVAL(l_dur).RATE * WRK.CURR_PLAN(pi_idx).ETI_FACTOR
                         + get_unit(l_unit_basis,l_endow_rt)/get_unit(l_unit_basis_PEVAL,1);
-- >> HK-1998V2-NF02-C(1)
       l_PE_Rt := l_PE_Rt_Aftr + l_PE_Rt_Before;
      end if;       -- HK-1998V2-NF02-C(1)
  --  else    --LIL2000-060
    elsif WRK.CURR_PLAN(pi_idx).DIV_FCT_K1 > 0 then   --LIL2000-060
--  >>  HK-1998V2-NF02-C
    l_NSP_Rt := (l_NSPVAL(l_dur - 1).NSP_RT_AFTR + l_NSPVAL(l_dur).NSP_RT_BEFORE);
    if WRK.CURR_POL.POL_STAT_CD = cd.stat_rpu
       or WRK.CURR_POL.POL_STAT_CD = cd.stat_fpu
--  << HK-1998V2-PD02-C
       or (WRK.CURR_POL.JOINT_CLI_DTH_IND = 'Y'
       and WRK.CURR_CVG(pi_idx).INS_TYP = '8') then
--  >> HK-1998V2-PD02-C
       l_PV_Rt := l_NSP_Rt;
    else
       l_PV_Rt := (l_POLVAL(l_dur - 1).PV_RT_AFTR + l_POLVAL(l_dur).PV_RT_BEFORE);
    end if;
    end if; --  HK-1998V2-NF02-C
    if WRK.CURR_PLAN(pi_idx).DIV_FCT_K1 > 0 then
       l_mand_div_rt  := RT.get_int_rt(cd.int_rt_mand_int, pi_asof_dt);
       l_assum_int_rt := WRK.CURR_PLAN(pi_idx).ASSUM_INT_RT;

-- <<<== 042699 TW-UAT8802-01-139
--       l_D1 :=   WRK.CURR_PLAN(pi_idx).DIV_FCT_K1
--               * (l_mand_div_rt - l_assum_int_rt)
--               * 0.5
/* HK-1998V2-NF02-C(1)
               * (    get_unit(l_unit_basis_POLVAL, WRK.CURR_CVG(pi_idx).FACE_AMT)
                    * l_PV_Rt
*/
--         * (    l_PV_Rt   -- HK-1998V2-NF02-C(1)
--  <<  HK-1998V2-NF02-C
--                  +   get_unit(l_unit_basis_PEVAL, WRK.CURR_CVG(pi_idx).ETI_ENDOW)
--                    * l_PE_Rt
--  >>  HK-1998V2-NF02-C
--                  +   get_unit(l_unit_basis_NSPVAL, WRK.CURR_CVG(pi_idx).PUA_TOT_AMT)
--                    * l_NSP_Rt
--                 );
-- ==>>> 042699 TW-UAT8802-01-139

-- check if ETI status, l_PV_Rt not need to multiple by face amt
-- << TW-UAT8802-01-139
       if WRK.CURR_POL.POL_STAT_CD = cd.stat_eti then
         l_D1 :=   WRK.CURR_PLAN(pi_idx).DIV_FCT_K1
                 * (l_mand_div_rt - l_assum_int_rt)
                 * 0.5
           * (    l_PV_Rt
                    +   get_unit(l_unit_basis_PEVAL, ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).ETI_ENDOW)) --PJ6/0086-20060420-DONGTRUONG
                    *   l_PE_Rt
                    +   get_unit(l_unit_basis_NSPVAL, ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PUA_TOT_AMT)) --PJ6/0086-20060420-DONGTRUONG
                    *   l_NSP_Rt
                   );
       else
         l_D1 :=   WRK.CURR_PLAN(pi_idx).DIV_FCT_K1
               * (l_mand_div_rt - l_assum_int_rt)
               * 0.5
               * (    get_unit(l_unit_basis_POLVAL, ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).FACE_AMT))  --PJ6/0086-20060420-DONGTRUONG
                    * l_PV_Rt
                  +   get_unit(l_unit_basis_PEVAL, ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).ETI_ENDOW))  --PJ6/0086-20060420-DONGTRUONG
                    * l_PE_Rt
                  +   get_unit(l_unit_basis_NSPVAL, ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PUA_TOT_AMT)) --PJ6/0086-20060420-DONGTRUONG
                    * l_NSP_Rt
                 );
       end if;
-- >> TW-UAT8802-01-139

       l_D1 := greatest(0,l_D1);
    end if;
--  WCB98042301 End
    if WRK.CURR_POL.JOINT_CLI_DTH_IND = 'Y'
       and WRK.CURR_CVG(pi_idx).INS_TYP = '8' then  --  WCB98050801
       l_D2 := 0;
    elsif
       WRK.CURR_PLAN(pi_idx).DIV_FCT_K2 > 0 then
       l_assum_mort_rt := RT.get_mort_rt(ByReftoByValue.convert(WRK.CURR_PLAN(pi_idx).MD_KEY)   --PJ6/0086-20060420-DONGTRUONG
                                        ,cd.assum_mort_rt
                                        ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)    --PJ6/0086-20060420-DONGTRUONG
                                        ,pi_asof_dt
                                        ,WRK.CURR_CVG(pi_idx).CVG_EFF_AGE + l_dur - 1
                                        ,l_assum_unit_basis
                                        );
       l_assum_mort    := get_unit(l_assum_unit_basis,l_assum_mort_rt);
       l_indst_mort_rt := RT.get_mort_rt(ByReftoByValue.convert(WRK.CURR_PLAN(pi_idx).MD_KEY) --PJ6/0086-20060420-DONGTRUONG
                                        ,cd.indst_mort_rt
                                        ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)  --PJ6/0086-20060420-DONGTRUONG
                                        ,pi_asof_dt
                                        ,WRK.CURR_CVG(pi_idx).CVG_EFF_AGE + l_dur - 1
                                        ,l_assum_unit_basis
                                        );
       l_indst_mort    := get_unit(l_assum_unit_basis,l_indst_mort_rt);
--  WCB98040901 Start
/*
       if WRK.CURR_PLAN(pi_idx).DTH_BNFT_ind = cd.dth_bnft_non_lvl_calc then
          l_Face_Amt := WRK.CURR_CVG(pi_idx).DTH_BNFT_AMT;
       else
          l_Face_Amt := WRK.CURR_CVG(pi_idx).FACE_AMT;
       end if;
       l_D2 :=   WRK.CURR_PLAN(pi_idx).DIV_FCT_K2
               * l_assum_mort
               * (1 - l_indst_mort)
               * (  l_face_amt
                    * (1 - get_unit(l_unit_basis_POLVAL, l_POLVAL(l_dur).PV_RT_BEFORE ))
                  + WRK.CURR_CVG(pi_idx).PUA_TOT_AMT
                    * (1 - get_unit(l_unit_basis_NSPVAL, l_NSPVAL(l_dur).NSP_RT_BEFORE))
                 );

       l_D2 := greatest(0,l_D2);
       end if;
*/
       if WRK.CURR_PLAN(pi_idx).DTH_BNFT_ind = cd.dth_bnft_non_lvl_calc then
          l_Dth_Bnft_Amt := WRK.CURR_CVG(pi_idx).DTH_BNFT_AMT;
          l_Face_Amt     := WRK.CURR_CVG(pi_idx).FACE_AMT;
          l_DBVAL := RT.get_DBVAL(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE)  --PJ6/0086-20060420-DONGTRUONG
                                 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS) --PJ6/0086-20060420-DONGTRUONG
                                 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)   --PJ6/0086-20060420-DONGTRUONG
                                 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE)  --PJ6/0086-20060420-DONGTRUONG
                                 ,l_dur - 1
                                 ,l_unit_basis_DBVAL
                                 ,l_dur
                                 );
          l_Dth_Bnft_Rt  := get_unit(l_unit_basis_DBVAL, l_DBVAL(l_dur).DTH_BNFT_RT);
       else
          l_Dth_Bnft_Amt := WRK.CURR_CVG(pi_idx).FACE_AMT;
          l_Face_Amt     := l_Dth_Bnft_Amt;
          l_Dth_Bnft_Rt  := 1;
       end if;
--  <<  HK-1998V2-NF02-C
       if WRK.CURR_POL.POL_STAT_CD = cd.stat_eti then
          l_PV_Rt := l_PV_Rt_Before;
          l_NSP_Rt := l_PV_Rt;
          l_PE_Rt_Aftr := get_unit(l_unit_basis_PEVAL, l_PE_Rt_aftr);
          l_PE_Rt_Before := get_unit(l_unit_basis_PEVAL, l_PE_Rt_Before);  -- HK-1998V2-NF02-C(1)
       else
--  >>  HK-1998V2-NF02-C
       l_NSP_Rt := get_unit(l_unit_basis_NSPVAL, l_NSPVAL(l_dur).NSP_RT_BEFORE);
       if WRK.CURR_POL.POL_STAT_CD = cd.stat_rpu
          or WRK.CURR_POL.POL_STAT_CD = cd.stat_fpu then
          l_PV_Rt := l_NSP_Rt;
       else
          l_PV_Rt := get_unit(l_unit_basis_POLVAL, l_POLVAL(l_dur).PV_RT_BEFORE);
       end if;
       end if;  --  HK-1998V2-NF02-C

-- <<<== 042699 TW-UAT8802-01-139
--       l_D2 :=   WRK.CURR_PLAN(pi_idx).DIV_FCT_K2
--               * l_assum_mort
--               * (1 - l_indst_mort)
/* HK-1998V2-NF02-C(1) 040199
               * (( l_dth_bnft_amt
                    - l_face_amt * l_PV_Rt
                  )
--  <<  HK-1998V2-NF02-C
                  - WRK.CURR_CVG(pi_idx).ETI_ENDOW * l_PE_Rt_Aftr
--  >>  HK-1998V2-NF02-C
*/
--    * (( l_dth_bnft_amt - l_PV_Rt )          -- HK-1998V2-NF02-C(1)
--                  - WRK.CURR_CVG(pi_idx).ETI_ENDOW * l_PE_Rt_Before  -- HK-1998V2-NF02-C(1)
--                  + WRK.CURR_CVG(pi_idx).PUA_TOT_AMT
--                    * (l_dth_bnft_rt - l_NSP_Rt)
--                 );
-- ==>>> 042699 TW-UAT8802-01-139

-- check if ETI status, l_PV_RT not need to mulitple by face amount
-- << 042699 TW-UAT8802-01-139
       if WRK.CURR_POL.POL_STAT_CD = cd.stat_eti then
         l_D2 :=   WRK.CURR_PLAN(pi_idx).DIV_FCT_K2
                 * l_assum_mort
                 * (1 - l_indst_mort)
             * (   (l_dth_bnft_amt - l_PV_Rt)
                     - WRK.CURR_CVG(pi_idx).ETI_ENDOW * l_PE_Rt_Before
                     + WRK.CURR_CVG(pi_idx).PUA_TOT_AMT
                     * (l_dth_bnft_rt - l_NSP_Rt)
                   );
       else
         l_D2 :=   WRK.CURR_PLAN(pi_idx).DIV_FCT_K2
                 * l_assum_mort
                 * (1 - l_indst_mort)
                 * (  (l_dth_bnft_amt - l_face_amt * l_PV_Rt)
                    - WRK.CURR_CVG(pi_idx).ETI_ENDOW * l_PE_Rt_Before
                    + WRK.CURR_CVG(pi_idx).PUA_TOT_AMT
                    * (l_dth_bnft_rt - l_NSP_Rt)
                   );
       end if;
-- >> 042699 TW-UAT8802-01-139

       l_D2 := greatest(0,l_D2);
    end if;
--  WCB98040901 End
    if WRK.CURR_PLAN(pi_idx).DIV_FCT_K3 > 0 then
-- <<SG-DEV2000-07-A
            if l_div_calc_mthd = 'ARR' then
                    l_DIV_RT_FA  := RT.get_divval(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE)  --PJ6/0086-20060420-DONGTRUONG
                                            ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)    --PJ6/0086-20060420-DONGTRUONG
                                           --APP_171215 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)    --PJ6/0086-20060420-DONGTRUONG
                                           --APP_171215 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE)   --PJ6/0086-20060420-DONGTRUONG
                                             ,l_sex_code   --APP_171215
                                             ,l_CVG_EFF_AGE --APP_171215
                                            ,l_dur
                                            ,cd.div_typ_par_plan
                                            ,pi_asof_dt
                                            ,l_unit_basis_DIV_FA
                                            );
                    l_DIV_RT_PUA := RT.get_divval(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE)  --PJ6/0086-20060420-DONGTRUONG
                                            ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)    --PJ6/0086-20060420-DONGTRUONG
                                            --APP_171215 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)    --PJ6/0086-20060420-DONGTRUONG
                                           --APP_171215 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE)   --PJ6/0086-20060420-DONGTRUONG
                                             ,l_sex_code   --APP_171215
                                             ,l_CVG_EFF_AGE --APP_171215
                                            ,l_dur
                                            ,cd.div_typ_pua
                                            ,pi_asof_dt
                                            ,l_unit_basis_DIV_PUA
                                            );
            else
-->>SG-DEV2000-07-A
     --<<PJ6/0086-20060420-DONGTRUONG
  /*
  l_DIV_RT_FA     := RT.get_divval(WRK.CURR_CVG(pi_idx).PLAN_CODE
                                    ,WRK.CURR_CVG(pi_idx).POL_VAL_VERS
                                    ,WRK.CURR_CVG(pi_idx).SEX_CODE
                                    ,WRK.CURR_CVG(pi_idx).CVG_EFF_AGE
                                    ,l_dur
                                    ,cd.div_typ_par_plan
                                    ,l_unit_basis_DIV_FA
            ,NULL       --LIL2000-158
            ,pi_asof_dt     --LIL2000-158
                                    )(l_dur).DIV_RT;
          */

       l_divval     := RT.get_divval(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE) --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)  --PJ6/0086-20060420-DONGTRUONG
                                  --APP_171215  ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)  --PJ6/0086-20060420-DONGTRUONG
                                   --APP_171215 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE) --PJ6/0086-20060420-DONGTRUONG
                                     ,l_sex_code   --APP_171215
                                    ,l_CVG_EFF_AGE --APP_171215
                                    ,l_dur
                                    ,cd.div_typ_par_plan
                                    ,l_unit_basis_DIV_FA
            ,NULL       --LIL2000-158
            ,pi_asof_dt     --LIL2000-158
            ,nvl(WRK.CURR_POL.frst_iss_dt,WRK.CURR_POL.pol_iss_dt));--VPD-2069

  l_DIV_RT_FA :=l_divval(l_dur).DIV_RT;
     -->>PJ6/0086-20060420-DONGTRUONG
       if WRK.CURR_POL.DIV_OPT = CD.DIV_OPT_PUA then     --LIL2000-060
        -->>PJ6/0086-20060420-DONGTRUONG
        l_divval := RT.get_divval(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE)  --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)  --PJ6/0086-20060420-DONGTRUONG
                                      --APP_171215 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)  --PJ6/0086-20060420-DONGTRUONG
                                    --APP_171215,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE) --PJ6/0086-20060420-DONGTRUONG
                                     ,l_sex_code   --APP_171215
                                    ,l_CVG_EFF_AGE --APP_171215
                                    ,l_dur
                                    ,cd.div_typ_pua
                                    ,l_unit_basis_DIV_PUA
            ,NULL       --LIL2000-158
              ,pi_asof_dt     --LIL2000-158
              ,nvl(WRK.CURR_POL.frst_iss_dt,WRK.CURR_POL.pol_iss_dt));--VPD-2069
  l_DIV_RT_PUA :=  l_divval(l_dur).DIV_RT ;
     -->>PJ6/0086-20060420-DONGTRUONG
--<<LIL2000-060
       else
       l_DIV_RT_PUA := 0;
     end if;
-->>LIL2000-060
      end if; --SG-DEV2000-07-A  /* end of l_div_calc_mthd = 'ARR' */
       l_D3 :=   WRK.CURR_PLAN(pi_idx).DIV_FCT_K3
               * (  get_unit(l_unit_basis_DIV_FA,  ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).FACE_AMT))    * l_DIV_RT_FA  --PJ6/0086-20060420-DONGTRUONG
                  + get_unit(l_unit_basis_DIV_PUA, ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PUA_TOT_AMT)) * l_DIV_RT_PUA --PJ6/0086-20060420-DONGTRUONG
                 );
       l_D3 := greatest(0,l_D3);
    end if;
    return round_to(l_D1 + l_D2 + l_D3,l_div_rnd);
  end;
-- << SG-DEV2000-07-B
  --
  -- RB Declaration
  --
  function rb_declare(pi_idx     in integer
                      ,pi_asof_dt in date
                      )
    return TCOVERAGES.DIV_CRNT_AMT%TYPE
  is
    l_DIV_RT_RB          TDIVIDEND_VALUES.DIV_RT%TYPE;
    l_DIV_RT_RPU         TDIVIDEND_VALUES.DIV_RT%TYPE;
    l_div_rnd            VARCHAR2(50);
    l_dur                integer;
    l_unit_basis_DIV_RB  TDIVIDEND_VALUES.UNIT_BASIS%TYPE;
    l_unit_basis_DIV_RPU TDIVIDEND_VALUES.UNIT_BASIS%TYPE;
    l_D3                 TCOVERAGES.DIV_CRNT_AMT%TYPE := 0;
    l_CVG_EFF_AGE number; --APP_171215
    l_sex_code varchar2(1); --APP_171215
  begin
    fcn.set_return(0);
    ctl_parm.get('RNDDIV',l_div_rnd);
    if WRK.CURR_CVG(pi_idx).PAR_CODE = cd.par_code_noNpar then
       return 0;
    end if;
    if WRK.CURR_CVG(pi_idx).xpry_dt < pi_asof_dt then
       return 0;
    end if;
    l_dur :=   prem_calc.calc_att_age(pi_idx, pi_asof_dt, 'N')
             - WRK.CURR_CVG(pi_idx).CVG_EFF_AGE;
    if l_dur <= 0 then
       return 0;
    end if;
    if is_stat_in_force(ByReftoByValue.convert(wrk.curr_cvg(pi_idx).cvg_stat_cd)) = 'N' then  --PJ6/0086-20060420-DONGTRUONG
       return 0;
    end if;

     --<<APP_171215
    l_CVG_EFF_AGE := WRK.CURR_CVG(pi_idx).CVG_EFF_AGE;
    l_sex_code := WRK.CURR_CVG(pi_idx).sex_code;

    if  get_plan_mthd_ovrid( ByReftoByValue.convert(wrk.curr_cvg(pi_idx).plan_code),
                             ByReftoByValue.convert(wrk.curr_cvg(pi_idx).vers_num),
                             'DIV_BASE_ON_PAYOR' ) = 'Y' and
         wrk.srch_cli_link(cd.link_payor) is not null
    then

       l_CVG_EFF_AGE := calc_age(ByReftoByValue.convert(wrk.curr_cli(wrk.cli(wrk.srch_cli_link(cd.link_payor))).birth_dt)
                                        ,ByReftoByValue.convert(wrk.curr_cvg(pi_idx).cvg_eff_dt)
                                        ,ByReftoByValue.convert(wrk.curr_plan(pi_idx).age_calc_rule)
                                         );
       l_sex_code := ByReftoByValue.convert(wrk.curr_cli(wrk.cli(wrk.srch_cli_link(cd.link_payor))).sex_code);
     end if;


    -->>APP_171215

    l_DIV_RT_RB  := RT.get_divval(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE)  --PJ6/0086-20060420-DONGTRUONG
                                 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS) --PJ6/0086-20060420-DONGTRUONG
                                 --APP_171215 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)   --PJ6/0086-20060420-DONGTRUONG
                                 --APP_171215 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE)  --PJ6/0086-20060420-DONGTRUONG
                                 ,l_sex_code --APP_171215
                                 ,l_CVG_EFF_AGE --APP_171215
                                 ,l_dur
                                 ,cd.div_typ_RB
                                 ,pi_asof_dt
                                 ,l_unit_basis_DIV_RB
                                 );
     l_D3 :=  NVL(get_unit(l_unit_basis_DIV_RB,  WRK.CURR_CVG(pi_idx).FACE_AMT)    * l_DIV_RT_RB , 0);
     if get_plan_mthd_ovrid( ByReftoByValue.convert(wrk.curr_cvg(pi_idx).plan_code),  --PJ6/0086-20060420-DONGTRUONG
                             ByReftoByValue.convert(wrk.curr_cvg(pi_idx).vers_num), --PJ6/0086-20060420-DONGTRUONG
                             'NO_RB_ON_PUA' ) = 'Y' Then
        NULL;
     ELSE
        l_D3 := l_D3 + NVL(get_unit(l_unit_basis_DIV_RB, ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PUA_TOT_AMT)) * l_DIV_RT_RB, 0); --PJ6/0086-20060420-DONGTRUONG
     END IF;

     l_D3 := greatest(0,l_D3);
    return round_to(l_D3,l_div_rnd);
end;
-- >> SG-DEV2000-07-B
  --
  -- PUA Value Calculation
  --
  Function Calc_PUA(pi_idx     in integer
                   ,pi_div_amt in TCOVERAGES.DIV_CRNT_AMT%TYPE
                   ,pi_asof_dt in DATE
                   )
    return TCOVERAGES.PUA_CRNT_AMT%TYPE
  is
    l_dur        integer;
    l_NSPVAL   RT.tbl_nspval ; --PJ6/0086-20060420-DONGTRUONG
    l_unit_basis TNSP_VALUES.UNIT_BASIS%TYPE;
    l_NSP_VALU   TNSP_VALUES.NSP_RT_BEFORE%TYPE;
    l_pua_rnd    VARCHAR2(50);
  begin
    fcn.set_return(0);
    ctl_parm.get('RNDPUA',l_pua_rnd);
    l_dur      :=   prem_calc.calc_att_age(pi_idx, pi_asof_dt, 'N')
                  - WRK.CURR_CVG(pi_idx).CVG_EFF_AGE;

    -- << 051999 TW-UAT8802-02-027
    if WRK.CURR_POL.JOINT_CLI_DTH_IND = 'Y' and
       WRK.CURR_CVG(pi_idx).INS_TYP = '8'
    then  --  Joint Life
       --<<PJ6/0086-20060420-DONGTRUONG
      /*
      l_NSP_VALU := RT.get_NSPVAL(WRK.CURR_CVG(pi_idx).PLAN_CODE
                              ,WRK.CURR_CVG(pi_idx).POL_VAL_VERS
                              ,WRK.CURR_CVG(pi_idx).SEX_CODE
                              ,WRK.CURR_CVG(pi_idx).CVG_EFF_AGE
                                ,l_dur
                                    ,cd.nsp_typ_juvenile
                                    ,l_unit_basis
                                   )(l_dur).NSP_RT_BEFORE;
  */
      l_NSPVAL := RT.get_NSPVAL( ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE) --PJ6/0086-20060420-DONGTRUONG
                              ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)  --PJ6/0086-20060420-DONGTRUONG
                              ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)  --PJ6/0086-20060420-DONGTRUONG
                              ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE) --PJ6/0086-20060420-DONGTRUONG
                                ,l_dur
                                    ,cd.nsp_typ_juvenile
                                    ,l_unit_basis
                                   );
  l_NSP_VALU :=l_NSPVAL(l_dur).NSP_RT_BEFORE;
    else
    -- >> 051999 TW-UAT8802-02-027
    /*
    l_NSP_VALU := RT.get_NSPVAL(WRK.CURR_CVG(pi_idx).PLAN_CODE
                            ,WRK.CURR_CVG(pi_idx).POL_VAL_VERS
                            ,WRK.CURR_CVG(pi_idx).SEX_CODE
                            ,WRK.CURR_CVG(pi_idx).CVG_EFF_AGE
                            ,l_dur
                            ,cd.nsp_typ_pua
                            ,l_unit_basis
                            )(l_dur).NSP_RT_BEFORE;
    */
    l_NSPVAL := RT.get_NSPVAL(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE)  --PJ6/0086-20060420-DONGTRUONG
                            ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)  --PJ6/0086-20060420-DONGTRUONG
                            ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)  --PJ6/0086-20060420-DONGTRUONG
                            ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE) --PJ6/0086-20060420-DONGTRUONG
                            ,l_dur
                            ,cd.nsp_typ_pua
                            ,l_unit_basis
                            );
     l_NSP_VALU :=l_NSPVAL(l_dur).NSP_RT_BEFORE;
    -->>PJ6/0086-20060420-DONGTRUONG
    end if; -- 051999 TW-UAT8802-02-027
    return round_to(pi_div_amt / get_unit(l_unit_basis,l_NSP_VALU),l_pua_rnd);
  end;
  --
  -- Dividend Calculation and Applying
  --
--SG-DEV2000-32-A  procedure Div_Apply(pi_asof_dt in DATE)
  procedure Div_Apply(pi_asof_dt in DATE, pi_row_idx in NUMBER default null) --SG-DEV2000-32-A
  is
    l_tot_div_amt TCOVERAGES.DIV_CRNT_AMT%TYPE := 0;
    l_tot_rb_amt TCOVERAGES.PUA_CRNT_AMT%TYPE := 0; -- SG-DEV2000-07-B
    l_row  NUMBER default null; -- SG-DEV2000-32-A
    l_cvg_count NUMBER;         -- SG-DEV2000-32-A
    l_cas_dt    date ;  --2000-382
    l_avy_voucher TCONTROL_PARAMETERS.PARM_VALU%TYPE;   -- VN-990708 Retrofit

    -- << wjac20021030
    cursor c_avy_voucher(p_terr_cd varchar2) is
    select parm_valu
    from   tcontrol_parameters
    where  parm_typ = 'AVY_VOUCHER'
    and    terr_cd  = p_terr_cd;
    -- >> wjac20021030

    -- << 2003-289
    cursor c_avy_ddp (p_terr_cd varchar2) is
    select parm_valu
    from   tcontrol_parameters
    where  parm_typ = 'AVY_DDP'
    and   (terr_cd  = p_terr_cd or terr_cd = '1');
    l_avy_ddp        tcontrol_parameters.parm_valu%type;
    -- >> 2003-289

  BEGIN
    CTL_PARM.get('CAS_DT',l_CAS_DT);  --2000-382
    fcn.set_return(0);

    /* --<<EDM20010521 undo
    --<<2000-436 begin
    Insert_Tdividend_withholds (
                 WRK.CURR_POL.POL_NUM,
                 pi_asof_dt,
                 l_cas_dt
               ) ;
    -->>2000-436 end
    */ -->>EDM20010521 undo

    --<<EDM20010521 undo /*--<<2000-436 temporarily commented by Edmund Ma, begin
-->> SG-DEV2000-32-A
    IF pi_row_idx IS NOT NULL THEN
       l_row := pi_row_idx;
       l_cvg_count := pi_row_idx;
    ELSE
       l_row := 1;
       l_cvg_count := WRK.CURR_CVG.COUNT;
    END IF;
       for row in l_row .. l_cvg_count loop
--<< SG-DEV2000-32-A
--SG-DEV2000-32-A    for row in 1 .. WRK.CURR_CVG.COUNT loop
    -- << SG-DEV2000-07-A
        -- WRK.CURR_CVG(row).DIV_CRNT_AMT := Div_Declare(row,pi_asof_dt);
        if WRK.CURR_POL.DIV_OPT = cd.div_opt_rb then
                WRK.CURR_CVG(row).PUA_CRNT_AMT := RB_Declare(row,pi_asof_dt);
                wrk.gen_cov_avy_hist(l_trxn_cd
                                    ,CD.AVY_TYP_DIV
                                    ,ByReftoByValue.convert(WRK.CURR_CVG(row).PUA_CRNT_AMT) --PJ6/0086-20060420-DONGTRUONG
                                    ,'Dividend Declare'
                                    ,pi_asof_dt
                                    ,ByReftoByValue.convert(wrk.curr_cvg(row).plan_code)  --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(wrk.curr_cvg(row).vers_num)   --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(wrk.curr_cvg(row).cvg_eff_dt) --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(wrk.curr_cvg(row).cvg_eff_dt) --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(wrk.curr_cvg(row).cli_num)    --PJ6/0086-20060420-DONGTRUONG
                                    );    --2003-322(2)
        else
                WRK.CURR_CVG(row).DIV_CRNT_AMT := Div_Declare(row,pi_asof_dt);
                wrk.gen_cov_avy_hist(l_trxn_cd
                                    ,CD.AVY_TYP_DIV
                                    ,ByReftoByValue.convert(WRK.CURR_CVG(row).DIV_CRNT_AMT) --PJ6/0086-20060420-DONGTRUONG
                                    ,'Dividend Declare'
                                    ,pi_asof_dt
                                    ,ByReftoByValue.convert(wrk.curr_cvg(row).plan_code)  --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(wrk.curr_cvg(row).vers_num)   --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(wrk.curr_cvg(row).cvg_eff_dt) --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(wrk.curr_cvg(row).cvg_eff_dt) --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(wrk.curr_cvg(row).cli_num)    --PJ6/0086-20060420-DONGTRUONG
                                    );    --2003-322(2)
        end if;
    -- >> SG-DEV2000-07-A
       l_tot_div_amt                  := l_tot_div_amt + WRK.CURR_CVG(row).DIV_CRNT_AMT;
       if wrk.curr_cvg(row).div_crnt_amt > 0 then      -- (DCB98012201)
          if WRK.CURR_POL.DIV_OPT = cd.div_opt_pua then
             WRK.CURR_CVG(row).PUA_CRNT_AMT := Calc_PUA(row
                                                       ,ByReftoByValue.convert(WRK.CURR_CVG(row).DIV_CRNT_AMT) --PJ6/0086-20060420-DONGTRUONG
                                                       ,pi_asof_dt
                                                       );
             WRK.CURR_CVG(row).PUA_TOT_AMT  :=   WRK.CURR_CVG(row).PUA_TOT_AMT
                                               + WRK.CURR_CVG(row).PUA_CRNT_AMT;
             WRK.gen_acct_ext(cd.credit
                             ,'DVDPAYPU'
                             ,ByReftoByValue.convert(WRK.CURR_CVG(row).div_crnt_amt)  --PJ6/0086-20060420-DONGTRUONG
                             ,l_trxn_cd
                             ,pi_asof_dt
                             ,ByReftoByValue.convert(WRK.CURR_CVG(row).PLAN_CODE) --PJ6/0086-20060420-DONGTRUONG
                             ,ByReftoByValue.convert(WRK.CURR_CVG(row).VERS_NUM)  --PJ6/0086-20060420-DONGTRUONG
                             ,ByReftoByValue.convert(WRK.CURR_CVG(row).CLI_NUM)   --  TW-P-19981110-03  --PJ6/0086-20060420-DONGTRUONG
                             );
          end if;
       end if;
       -- << SG-DEV2000-07-B
       if WRK.CURR_POL.DIV_OPT = cd.div_opt_rb then
             if WRK.CURR_CVG(row).PUA_CRNT_AMT > 0 then
                     l_tot_rb_amt := l_tot_rb_amt + WRK.CURR_CVG(row).PUA_CRNT_AMT;
                     WRK.CURR_CVG(row).PUA_TOT_AMT  :=   WRK.CURR_CVG(row).PUA_TOT_AMT + WRK.CURR_CVG(row).PUA_CRNT_AMT;
            end if;
       end if;
       -- >> SG-DEV2000-07-B
    end loop;
    if l_tot_div_amt > 0 then  -- (DCB98012201)
       if    WRK.CURR_POL.DIV_OPT = cd.div_opt_pua then
          WRK.gen_acct_ext(cd.debit, 'DVDERNPU',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
          WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3006)
                           ,l_trxn_cd
                           ,l_tot_div_amt
                           ,null
                           ,pi_asof_dt
                           ,NULL ,'N'                            --CAS001135
                           );
       elsif WRK.CURR_POL.DIV_OPT = cd.div_opt_acum_div then
          WRK.gen_acct_ext(cd.debit, 'DVDERNAC',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
          WRK.gen_acct_ext(cd.credit,'DVDPAYND',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
          WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3005,to_char(WRK.CURR_AVY.ACUM_BAL))
                           ,l_trxn_cd
                           ,l_tot_div_amt
                           ,null
                           ,pi_asof_dt
                           ,NULL ,'N'                            --CAS001135
                           );
          --EN9/0497 WRK.CURR_AVY.ACUM_ACTV_DT := pi_asof_dt;    -- TW-P890427-01
          --<<EN9/0497
          --IT10/0428 if WRK.CURR_AVY.ACUM_ACTV_DT <= pi_asof_dt then
          if NVL(WRK.CURR_AVY.ACUM_ACTV_DT, pi_asof_dt) <= pi_asof_dt then --IT10/0428
            WRK.CURR_AVY.ACUM_ACTV_DT := pi_asof_dt;
          else
            WRK.CURR_AVY.ACUM_INT_ACRU := WRK.CURR_AVY.ACUM_INT_ACRU +
                                          calc_int(cd.int_rt_acum_div_int,
                                                   l_tot_div_amt,
                                                   pi_asof_dt,
                                                   WRK.CURR_AVY.ACUM_ACTV_DT,
                                                   NULL,
                                                   wrk.curr_pol.plan_code_base
                                                   );
          end if;
          -->>EN9/0497
          l_acum_div_amt := l_tot_div_amt;   -- SG-20001207-01
       elsif WRK.CURR_POL.DIV_OPT = cd.div_opt_prem_ded then
          WRK.gen_acct_ext(cd.debit, 'DVDERNPR',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
          WRK.gen_acct_ext(cd.credit,'DVDPAYPR',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
          WRK.gen_acct_ext(cd.debit, 'DVDPAYPR',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
          WRK.gen_acct_ext(cd.credit,'SUPPAY'  ,l_tot_div_amt,l_trxn_cd,pi_asof_dt);
      --2000-382 wrk.gen_prem_hist(pi_asof_dt,l_tot_div_amt);   --2000-279
      wrk.gen_prem_hist(l_cas_dt,l_tot_div_amt,0,'N',l_tot_div_amt);    --2000-382
          WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3007)
                           ,l_trxn_cd
                           ,l_tot_div_amt
                           ,null
                           ,pi_asof_dt
                           ,NULL ,'N'                            --CAS001135
                           );
          if is_within_tolerance(WRK.CURR_POL.PMT_SUSP
                                ,WRK.CURR_POL.NYR_DSCNT_PREM
                                ,WRK.CURR_POL.CRCY_CODE
                                ,1
                                ,'GREATER') then
             Apply_Premium.put('SUPPAY'
                              ,'NORMAL'
                              ,'FULLPAY'
                              ,WRK.CURR_POL.PMT_SUSP
                              );
          end if;
       elsif WRK.CURR_POL.DIV_OPT = cd.div_opt_cash     then
          WRK.gen_acct_ext(cd.debit, 'DVDERNCS',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
          WRK.gen_acct_ext(cd.credit,'DVDPAYCS',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
          WRK.gen_acct_ext(cd.debit, 'DVDPAYCS',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
          WRK.gen_acct_ext(cd.credit,'SUPPOL',  l_tot_div_amt,l_trxn_cd,pi_asof_dt);
          --WRK.gen_DNR_dtls('DVDPAYCS',l_tot_div_amt, pi_asof_dt);                   --  WCB98052901
          --xuchen2000-197 WRK.gen_DNR_dtls('DVDPAYCS',l_tot_div_amt, pi_asof_dt, null, 'CC', 'M');  --  WCB98052901

          --<< VN-990708 Retrofit: Add a control parameter "AVY_VOUCHER", If Y, follow SH (xuchen2000-197) else existing logic
          -- WJAC20021030 CTL_PARM.get('AVY_VOUCHER',l_avy_voucher);

          -- << 2003-289
          l_avy_ddp := null;
          open  c_avy_ddp (wrk.curr_pol.terr_cd);
          fetch c_avy_ddp into l_avy_ddp;
          close c_avy_ddp;
          if nvl(l_avy_ddp, 'N') = 'Y' and
             wrk.curr_pol.payo_mthd = cd.PAYO_MTHD_PAC_BILL then
             -- Bank Transfer out
             WRK.gen_DNR_dtls('DVDPAYCS',l_tot_div_amt, pi_asof_dt, null, 'AP', 'T');
             WRK.gen_acct_ext(cd.debit, 'SUPPOL',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
             WRK.gen_acct_ext(cd.credit,'DISBUR',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
             WRK.gen_DNR_dtls('DVDPAYCS',-l_tot_div_amt, pi_asof_dt, null, 'AP', 'T');
          else
          -- >> 2003-289
             -- << WJAC20021030
             l_avy_voucher := null;
             open  c_avy_voucher(wrk.curr_pol.terr_cd);
             fetch c_avy_voucher into l_avy_voucher;
             close c_avy_voucher;
             -- >> WJAC20021030

             IF nvl(l_avy_voucher,'N') = 'Y' THEN
                -->> VN-990708 Retrofit
                --<<xuchen2000-197
                WRK.gen_DNR_dtls('DVDPAYCS',l_tot_div_amt, pi_asof_dt, null, 'VC', 'M');
                WRK.gen_acct_ext(cd.debit, 'SUPPOL',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
                WRK.gen_acct_ext(cd.credit,'DISBUR',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
                -- 2003-289 WRK.gen_DNR_dtls('DVDPAYCS',-l_tot_div_amt, pi_asof_dt);
                WRK.gen_DNR_dtls('DVDPAYCS',-l_tot_div_amt, pi_asof_dt, null, 'VC', 'M'); -- 2003-289
                -->>xuchen2000-197
                --<< VN-990708 Retrofit
             ELSE
                if pi_asof_dt < wrk.curr_cvg(wrk.Srch_base_cvg).xpry_dt then -- MAT20060327-2
                WRK.gen_DNR_dtls('DVDPAYCS',l_tot_div_amt, pi_asof_dt);                   --  WCB98052901
                end if;-- MAT20060327-2
             END IF;
                -->> VN-990708 Retrofit
                WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3004)
                           ,l_trxn_cd
                           ,l_tot_div_amt
                           ,null
                           ,pi_asof_dt
                           ,NULL ,'N'                            --CAS001135
                           );
          end if;          -- 2003-289
--<< VN-ENH-20060710
       elsif WRK.CURR_POL.DIV_OPT = cd.div_opt_reinv    then
          WRK.gen_acct_ext(cd.debit, 'DVDERNRI',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
          WRK.gen_acct_ext(cd.credit,'DVDPAYRI',l_tot_div_amt,l_trxn_cd,pi_asof_dt);
          WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3086)
                           ,l_trxn_cd
                           ,l_tot_div_amt
                           ,null
                           ,pi_asof_dt
                           ,NULL ,'N'
                           );
          WRK.CURR_AVY.ACUM_ACTV_DT := pi_asof_dt;
-->> VN-ENH-20060710
       end if;
    end if;
-- << SG-DEV2000-07-A
    if WRK.CURR_POL.DIV_OPT = cd.div_opt_rb then
          if l_tot_rb_amt > 0 then
                WRK.gen_trxn_hist(get_trxn_seq
                                   ,S_MESSAGE.GET_MESSAGE(3019)
                                   ,l_trxn_cd
                                   ,l_tot_rb_amt
                                   ,null
                                   ,pi_asof_dt
                                   ,NULL ,'N'                            --CAS001135
                                   );
          end if;
    end  if;
-- >> SG-DEV2000-07-A
-->> SG-DEV2000-32-A
    IF pi_row_idx IS NULL THEN
       --WRK.CURR_POL.DIV_UPTO_DT := WRK.CURR_POL.LAST_AVY_DT;  -- SG-DEV2000-07-A
       WRK.CURR_POL.DIV_UPTO_DT := pi_asof_dt;
    END IF;
--<< SG-DEV2000-32-A
    --<<EDM20010521 undo */-->>2000-436 temporarily commented by Edmund Ma, end
  END;

  --<< V03/0064 DatTran 28/04/2004 BANK COLLECTION
  --
  -- Incentive Calculation and Applying
  --
  procedure Inc_Apply(pi_asof_dt in DATE)
  is
  l_tot_inc_amt TAVY_VALUE_DTLS.INC_BAL%TYPE := 0;
  BEGIN
    fcn.set_return(0);
    l_tot_inc_amt:=NVL(WRK.CURR_AVY.INC_BAL,0);
    if l_tot_inc_amt > 0 then

      if WRK.CURR_POL.DIV_OPT = cd.div_opt_prem_ded then
        WRK.gen_acct_ext(cd.debit, 'INCPAYPR',l_tot_inc_amt,l_trxn_cd,pi_asof_dt);
        WRK.gen_acct_ext(cd.credit,'SUPPAY',l_tot_inc_amt,l_trxn_cd,pi_asof_dt);

        WRK.gen_trxn_hist(get_trxn_seq
                         ,S_MESSAGE.GET_MESSAGE(3021)
                         ,l_trxn_cd
                         ,l_tot_inc_amt
                         ,null
                         ,pi_asof_dt
                         );
        if is_within_tolerance(WRK.CURR_POL.PMT_SUSP
                              ,WRK.CURR_POL.NYR_DSCNT_PREM
                              ,WRK.CURR_POL.CRCY_CODE
                              ,1
                              ,'GREATER') then
          Apply_Premium.put('SUPPAY'
                           ,'NORMAL'
                           ,'FULLPAY'
                           ,WRK.CURR_POL.PMT_SUSP
                           );
        end if;
        WRK.CURR_AVY.PREV_YR_INC_BAL := 0; -- VNUVL-NGHIANT20061025
      elsif WRK.CURR_POL.DIV_OPT = cd.div_opt_cash
        or WRK.CURR_POL.DIV_OPT = cd.div_opt_reinv -- VNUVL-NGHIANT20061025
      then
        WRK.gen_acct_ext(cd.debit, 'INCPAYCS',l_tot_inc_amt,l_trxn_cd,pi_asof_dt);
        WRK.gen_acct_ext(cd.credit,'SUPPOL',  l_tot_inc_amt,l_trxn_cd,pi_asof_dt);
        if pi_asof_dt < wrk.curr_cvg(wrk.Srch_base_cvg).xpry_dt then --MD7/0444
        WRK.gen_DNR_dtls('INCPAYCS',l_tot_inc_amt, pi_asof_dt);
        end if; --MD7/0444

        WRK.gen_trxn_hist(get_trxn_seq
                         ,S_MESSAGE.GET_MESSAGE(3022)
                         ,l_trxn_cd
                         ,l_tot_inc_amt
                         ,null
                         ,pi_asof_dt
                         );
        WRK.CURR_AVY.PREV_YR_INC_BAL := 0; -- VNUVL-NGHIANT20061025
      end if;
    end if;
  END;
  -->> v03/0064 DatTran 28/04/2004 BANK COLLECTION

  --
  -- Endowment Declaration
  --
  FUNCTION endow_declare(pi_idx     in integer
                        ,pi_asof_dt in DATE
                        )
    return TAVY_VALUE_DTLS.ENDOW_BAL%TYPE
  is
    l_dur        INTEGER;
    l_endow_rt   TPOLICY_VALUES.ENDOW_RT%TYPE;
    l_unit_basis TPOLICY_VALUES.UNIT_BASIS%TYPE;
    l_endow_rnd  VARCHAR2(50);  --  WCB98050101
    l_endow_on_pua  tcontrol_parameters.parm_valu%type; --  SG-2000-CH30-J(3)
    l_endow_pua_factor   number := 1;     --  SG-2000-CH30-J(3)
    l_POLVAL  RT.tbl_polval ; --PJ6/0086-20060420-DONGTRUONG
  begin
    fcn.set_return(0);
    ctl_parm.get('RNDENDOW',l_endow_rnd);  --  WCB98050101
 -- >>   SG-2000-CH30-J(3)
         ctl_parm.get('ENDOW_ON_PUA',l_endow_on_pua);  --  SG-2000-CH30-J(3)
         if l_endow_on_pua = 'N' then
            l_endow_pua_factor := 0;
         end if;
 -- <<   SG-2000-CH30-J(3)

   -- << TW-UAT8901-10
    if is_stat_in_force(ByReftoByValue.convert(wrk.curr_cvg(pi_idx).cvg_stat_cd)) = 'N' then  --PJ6/0086-20060420-DONGTRUONG
       return 0;
    end if;
    -- >> TW-UAT8901-10
--2003-486    if WRK.CURR_PLAN(pi_idx).endow_ctl = '0' then
--<<2003-486
    if (WRK.CURR_PLAN(pi_idx).endow_ctl = '0'
        and wrk.curr_cvg(pi_idx).cvg_stat_cd != cd.STAT_RPU)
     or (wrk.curr_cvg(pi_idx).cvg_stat_cd = cd.STAT_RPU and
         wrk.curr_plan(pi_idx).rpu_endow_ctl = '0')
    then
-->>2003-486
       return 0;

    end if;
    l_dur := prem_calc.calc_att_age(pi_idx, pi_asof_dt, 'N') - WRK.CURR_CVG(pi_idx).CVG_EFF_AGE;
    if l_dur = 0 then
       return 0;
    end if;
   --<<PJ6/0086-20060420-DONGTRUONG
    /*
   l_endow_rt    := RT.get_POLVAL(WRK.CURR_CVG(pi_idx).PLAN_CODE
                                ,WRK.CURR_CVG(pi_idx).POL_VAL_VERS
                                ,WRK.CURR_CVG(pi_idx).SEX_CODE
                                ,WRK.CURR_CVG(pi_idx).CVG_EFF_AGE
                                ,l_dur
                                ,l_unit_basis
                                )(l_dur).ENDOW_RT;
    */
    l_POLVAL    := RT.get_POLVAL(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE)   --PJ6/0086-20060420-DONGTRUONG
                                ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)  --PJ6/0086-20060420-DONGTRUONG
                                ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)    --PJ6/0086-20060420-DONGTRUONG
                                ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE) --PJ6/0086-20060420-DONGTRUONG
                                ,l_dur
                                ,l_unit_basis
                                ,null                                                     --PJ12/0445
                                ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).FACE_AMT )    --PJ12/0445
                                ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).cvg_stat_cd ) --PJ12/0445
                                );
    l_endow_rt :=l_POLVAL(l_dur).ENDOW_RT;
   -->>PJ6/0086-20060420-DONGTRUONG
/* TW-P-19990324-03
    return round_to(calc_RT_value(l_endow_rt
                                 ,get_unit(l_unit_basis, WRK.CURR_CVG(pi_idx).FACE_AMT
                                          + nvl(WRK.CURR_CVG(pi_idx).PUA_TOT_AMT,0)
                                          )
                                 )
--  <<  HK-1998V2-NF01-C
                   + calc_RT_value(l_endow_rt
                                  ,get_unit(l_unit_basis, WRK.CURR_CVG(pi_idx).ETI_ENDOW)
                                  )
--  >>  HK-1998V2-NF01-C
                   ,l_endow_rnd);  --  WCB98050101
*/

-- << TW-P-19990324-03
    if WRK.CURR_POL.POL_STAT_CD = cd.stat_eti then
         return round_to(calc_RT_value(l_endow_rt
                                  ,get_unit(l_unit_basis, ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).ETI_ENDOW)) --PJ6/0086-20060420-DONGTRUONG
                        )
                ,l_endow_rnd);
    else
         return round_to(calc_RT_value(l_endow_rt
                                 ,get_unit(l_unit_basis, ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).FACE_AMT)  --PJ6/0086-20060420-DONGTRUONG
                                          + nvl(WRK.CURR_CVG(pi_idx).PUA_TOT_AMT,0)
                                          * l_endow_pua_factor          -- SG-2000-CH30-J(3)
                                          )
                                       )
      ,l_endow_rnd);
    end if;
-- >> TW-P-19990324-03
  end;

-->> 2003-NP01(NLD)
--<<VPD-23
  function get_EICC_rate(p_avy_dt date) return number is
     cursor c_EICC_rate is
        select *
        from
        (
               select * from tinterest_rates where int_rt_typ = 'E' and eff_dt <= p_avy_dt order by eff_dt desc
        )
        where rownum <= 5
        ;
   l_to_dt date;
   l_fr_dt date;
   l_last_avy_dt date;
   l_num_of_day number;
   l_EICC_rate number := 0;
   l_tmp_rate number := 1;
  begin
    l_to_dt := p_avy_dt -1 ;
    l_last_avy_dt := wrk.curr_pol.last_avy_dt;
    for c in c_EICC_rate
      loop
        l_fr_dt := greatest(c.eff_dt,l_last_avy_dt);
        l_num_of_day := 0;
        l_num_of_day := l_to_dt - l_fr_dt+1;
        --do.pl(l_fr_dt||' - '||l_to_dt);
        --do.pl(l_num_of_day);
        l_tmp_rate := l_tmp_rate * power(1 + c.int_rt/100,l_num_of_day/365);
        l_to_dt := c.eff_dt -1;
      end loop;
      l_EICC_rate := l_tmp_rate - 1;
      return l_EICC_rate;
  end get_EICC_rate;
  -->>VPD-23

  --<<VPD-23
  function get_cash_value(
    pi_idx       in integer
    ,pi_calc_amt  in TCOVERAGES.FACE_AMT%TYPE
    ,pi_calc_dur  in integer
    ,pi_typ in varchar  default 'B'
    ) return number is
    l_cash_value   number :=0;
     l_cv_aftr_conv RT.tbl_polval;
     l_cv_before_conv RT.tbl_polval;
    -- l_cv_before_conv RT.tbl_polval;
     l_cv_aftr    TPOLICY_VALUES.CV_RT_AFTR%TYPE;
      l_unit_basis TPOLICY_VALUES.UNIT_BASIS%TYPE;
     -- l_cv_before_conv RT.tbl_polval;
      l_cv_before  TPOLICY_VALUES.CV_RT_BEFORE%TYPE;
	  l_cas_dt     date := get_cas_sys_dt;--VPD-232--VPD-244--VPD-259
      l_base_cvg   number := 0;--VPD-232--VPD-244--VPD-259
  begin

  IF pi_typ ='A' THEN

      l_cv_aftr_conv := RT.get_POLVAL(ByRefToByValue.convert(WRK.CURR_CVG(pi_idx).plan_code)
                                          ,ByRefToByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)
                                          ,ByRefToByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)
                                          ,ByRefToByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE)
                                          ,pi_calc_dur
                                          ,l_unit_basis
                                          ,null
                                          ,ByRefToByValue.convert(WRK.CURR_CVG(pi_idx).FACE_AMT)
                                          ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).cvg_stat_cd )
                                          );
      --<<VPD-232--VPD-244--VPD-259
      if nvl(l_cv_aftr_conv(pi_calc_dur).clm_code,'*') <> '*' then
        l_base_cvg := wrk.Srch_base_cvg;
        if pkg_claim.chk_clm_code_used(wrk.curr_pol.pol_num, wrk.curr_cvg(l_base_cvg).cli_num,l_cv_aftr_conv(pi_calc_dur).clm_code,wrk.curr_pol.pol_eff_dt,l_cas_dt) = 'Y' then
           l_cv_aftr := l_cv_aftr_conv(pi_calc_dur).CV_RT_AFTR_AFTR_CLM;
        else
           l_cv_aftr := l_cv_aftr_conv(pi_calc_dur).CV_RT_AFTR;
        end if;
      else
      -->>VPD-232--VPD-244--VPD-259
         l_cv_aftr := l_cv_aftr_conv(pi_calc_dur).CV_RT_AFTR;
      end if;--VPD-232--VPD-244--VPD-259
       if fcn.return_code != 0 then
             return 0;
        end if;
      l_cash_value := calc_RT_value(l_cv_aftr
                                     ,get_unit(l_unit_basis, pi_calc_amt));
  ELSE
    l_cv_before_conv := RT.get_POLVAL(ByRefToByValue.convert(WRK.CURR_CVG(pi_idx).plan_code)
                                      	 ,ByRefToByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS)
                                      	 ,ByRefToByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)
                                      	 ,ByRefToByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE)
                                      	 ,pi_calc_dur + 1
                                      	 ,l_unit_basis
                                         ,null
                                         ,ByRefToByValue.convert(WRK.CURR_CVG(pi_idx).FACE_AMT )
                                         ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).cvg_stat_cd )
                                      	 );
    --<<VPD-232--VPD-244--VPD-259
    if nvl(l_cv_before_conv(pi_calc_dur + 1).clm_code,'*') <> '*' then
      l_base_cvg := wrk.Srch_base_cvg;
      if pkg_claim.chk_clm_code_used(wrk.curr_pol.pol_num, wrk.curr_cvg(pi_idx).cli_num,l_cv_before_conv(pi_calc_dur + 1).clm_code, wrk.curr_pol.pol_eff_dt, l_cas_dt) = 'Y' then
         l_cash_value := l_cv_before_conv(pi_calc_dur + 1).CV_RT_BEFORE_AFTR_CLM;
      else
         l_cash_value := l_cv_before_conv(pi_calc_dur + 1).CV_RT_BEFORE;
      end if;
    else
    -->>VPD-232--VPD-244--VPD-259
       l_cash_value := l_cv_before_conv(pi_calc_dur + 1).CV_RT_BEFORE;
    end if;--VPD-232--VPD-244--VPD-259
    if fcn.return_code != 0 then
               return 0;
    end if;

    l_cash_value := calc_RT_value(l_cv_before
                                     ,get_unit(l_unit_basis, pi_calc_amt)
                                     );

  END IF ;

      return l_cash_value;
  end get_cash_value;

-->>VPD-23

--<<VPD-23
-- EICC Declaration
  --
  FUNCTION eicc_declare(pi_idx     in integer)
    return TAVY_VALUE_DTLS.ENDOW_BAL%TYPE
  is
    l_eicc_rt  TPOLICY_VALUES.ENDOW_RT%TYPE;
    l_eicc_factor tplan_parameters.parm_valu%type;
    l_cash_valu number;
    l_endow_rnd  VARCHAR2(50);
    l_endow_on_pua  tcontrol_parameters.parm_valu%type;
    l_endow_pua_factor   number := 1;
    l_POLVAL  RT.tbl_polval ;
    l_avy_dt date;
    l_nfo_cvg      nfo.tbl_cvg;
    l_cvg_dur       integer;
  begin
    --do.pl('PROD PHASE2 eicc declare');
    fcn.set_return(0);
    ctl_parm.get('RNDENDOW',l_endow_rnd);
    ctl_parm.get('ENDOW_ON_PUA',l_endow_on_pua);
    ctl_parm.get('EICC_FACTOR'
                  ,wrk.curr_pol.crcy_code
                  ,wrk.curr_pol.plan_code_base
                  ,wrk.curr_pol.pol_eff_dt
                  ,l_eicc_factor
                 );
    if l_endow_on_pua = 'N' then
       l_endow_pua_factor := 0;
    end if;
    if is_stat_in_force(ByReftoByValue.convert(wrk.curr_pol.pol_stat_cd)) = 'N' then
       return 0;
    end if;
    if (WRK.CURR_PLAN(pi_idx).endow_ctl = '0'
        and wrk.curr_pol.pol_stat_cd != cd.STAT_RPU)
     or (wrk.curr_pol.pol_stat_cd = cd.STAT_RPU and
         wrk.curr_plan(pi_idx).rpu_endow_ctl = '0')
     or  wrk.curr_pol.pol_stat_cd = cd.STAT_RPU
    then
       return 0;

    end if;
    l_avy_dt := advance_ptd(wrk.curr_pol.last_avy_dt,wrk.curr_pol.pol_eff_dt,12);
    l_eicc_rt := get_EICC_rate(l_avy_dt);


    --l_cash_valu :=  nfo_calc_value(wrk.curr_pol.last_avy_dt,'CV_POL');
    l_cash_valu := 0;
    ---*****************
    l_nfo_cvg :=nfo.get(wrk.curr_pol.last_avy_dt);

    for i in 1 .. WRK.CURR_CVG.COUNT loop

          IF ByReftoByValue.convert(wrk.curr_cvg(i).cvg_typ) = 'B' THEN

                 l_cvg_dur := prem_calc.calc_att_age(i,WRK.CURR_POL.LAST_AVY_DT,'N')
                         - prem_calc.calc_att_age(i,ByRefToByValue.convert(WRK.CURR_CVG(i).CVG_EFF_DT),'N');

                 l_cash_valu := l_cash_valu + get_cash_value(i,ByRefToByValue.convert(WRK.CURR_CVG(i).FACE_AMT),l_cvg_dur,'A');
                 --l_nfo_cvg(i).CV_CVG ;
           END IF;
     END LOOP;
    ---****************

    --do.pl('PROD PHASE2 l_avy_dt='||l_avy_dt||'-l_eicc_rt='||l_eicc_rt||'-l_cash_valu='||l_cash_valu);
    --do.pl('wrk.curr_pol.last_avy_dt '||wrk.curr_pol.last_avy_dt);
    -- do.pl('l_eicc_factor='||l_eicc_factor);
    -- do.pl((nvl(l_cash_valu,0) * nvl(l_eicc_factor,0) * nvl(l_eicc_rt,0))/100);
    return round_to((nvl(l_cash_valu,0) * nvl(l_eicc_factor,0) * nvl(l_eicc_rt,0))/100,l_endow_rnd);

  end eicc_declare;
-->>VPD-23
  --
  -- No claim benefit amount calculation
  --
  FUNCTION get_endow_no_claim(pi_asof_dt IN DATE)
  RETURN TAVY_VALUE_DTLS.ENDOW_BAL%TYPE IS
    CURSOR c_no_clm_bnft_set is
        select fld_valu             plan_code_abbr,
               fld_valu_desc_eng    app_age,
               fld_lkup_valu        fa_pct
          from tfield_values
         where fld_nm       = 'NO_CLAIM_ENDOW'
           and rec_status   = 'A';

    cursor c_claim(pi_pol_num in varchar2, pi_end_dt in date) is
        select clm_stat_code
          from tclaim_details
         where pol_num    = pi_pol_num
           and clm_app_dt <= pi_end_dt
           and clm_stat_code in (cd.CLM_STAT_APROV, cd.CLM_STAT_PEND);

    l_no_clm_bnft_set   c_no_clm_bnft_set%rowtype;
    l_end_dt            date;
    l_claim_rec         c_claim%rowtype;
    l_endow_no_claim    tavy_value_dtls.endow_bal%type  := 0;
  BEGIN
    open c_no_clm_bnft_set;
    fetch c_no_clm_bnft_set into l_no_clm_bnft_set;
    if c_no_clm_bnft_set%notfound then
        close c_no_clm_bnft_set;
        return 0;
    end if;
    close c_no_clm_bnft_set;

    for i in 1..wrk.curr_cvg.count loop
        if wrk.curr_cvg(i).plan_code like l_no_clm_bnft_set.plan_code_abbr || '%' and
           is_stat_grp_in_force(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd)) = 'Y' and  --PJ6/0086-20060420-DONGTRUONG
           prem_calc.calc_att_age(i, pi_asof_dt, 'N') = to_number(l_no_clm_bnft_set.app_age)
        then
            l_end_dt    := add_months(wrk.curr_cli(wrk.cli(ByReftoByValue.convert(wrk.curr_cvg(i).cli_num))).birth_dt,  --PJ6/0086-20060420-DONGTRUONG
                                      to_number(l_no_clm_bnft_set.app_age - wrk.curr_cvg(i).cvg_eff_age) * 12);
            open c_claim(wrk.curr_pol.pol_num, l_end_dt);
            fetch c_claim into l_claim_rec;
            if c_claim%notfound then
                l_endow_no_claim    := nvl(l_endow_no_claim, 0) + wrk.curr_cvg(i).face_amt * to_number(l_no_clm_bnft_set.fa_pct) / 100;
                wrk.gen_cov_avy_hist(l_trxn_cd
                                    ,CD.AVY_TYP_ENDOW
                                    ,wrk.curr_cvg(i).face_amt * to_number(l_no_clm_bnft_set.fa_pct) / 100
                                    ,'No Claim Bonus'
                                    ,pi_asof_dt
                                    ,ByReftoByValue.convert(wrk.curr_cvg(i).plan_code)    --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(wrk.curr_cvg(i).vers_num)   --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(wrk.curr_cvg(i).cvg_eff_dt)   --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(wrk.curr_cvg(i).cvg_eff_dt)   --PJ6/0086-20060420-DONGTRUONG
                                    ,ByReftoByValue.convert(wrk.curr_cvg(i).cli_num)    --PJ6/0086-20060420-DONGTRUONG
                                    );    --2003-322(2)
            end if;
            close c_claim;
        end if;
    end loop;

    return nvl(l_endow_no_claim, 0);

  END get_endow_no_claim;
--<< 2003-NP01(NLD)
  --
  -- Endowment Calculation and Payout
  --
  PROCEDURE ENDOW_APPLY(pi_asof_dt in DATE
                       ,pi_pre_avy_ind  in varchar2  default 'N'     --EN9/0497
                        )
  is
    -- << 2003-289
    cursor c_avy_ddp (p_terr_cd varchar2) is
    select parm_valu
    from   tcontrol_parameters
    where  parm_typ = 'AVY_DDP'
    and   (terr_cd  = p_terr_cd or terr_cd = '1');
    l_avy_ddp        tcontrol_parameters.parm_valu%type;
    -- >> 2003-289
--<< VN/SH-Align (2005-HNAM002)
    cursor c_auto_dnr(p_terr_cd varchar2) is
    select parm_valu
    from   tcontrol_parameters
    where  parm_typ = 'AUTO_DNR'
    and   (terr_cd  = p_terr_cd or terr_cd = '1');
    l_auto_dnr        tcontrol_parameters.parm_valu%type;
--<< VN/SH-Align (2005-HNAM002)
    l_endow_amt TAVY_VALUE_DTLS.ENDOW_BAL%TYPE := 0;
    l_endow_adv tavy_value_dtls.endow_adv%type := 0;    --LIL2000-071
    l_endow_no_claim    tavy_value_dtls.endow_bal%type  := 0;   --2003-NP01(NLD)
    l_endow_dcl tcov_avy_value_histories.trxn_amt%type; --2003-322(2)
    l_eicc_dcl tcov_avy_value_histories.trxn_amt%type; --VPD-23
    l_fcc_dcl tcov_avy_value_histories.trxn_amt%type := 0; --VPD-23
    --<<PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP
    l_repay_amt number;
    l_acc_amt number;
    l_ccp_threshold number;
    -->>PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP
  begin
    fcn.set_return(0);
    --do.pl('PROD PHASE2 ENDOW_APPLY');
    for i in 1 .. WRK.CURR_CVG.COUNT loop
       l_endow_dcl := endow_declare(i, pi_asof_dt);     --2003-322(2)
       --<<VPD-23
       if months_between(pi_asof_dt,wrk.curr_pol.pol_eff_dt) >= 3 then
          if wrk.curr_cvg(i).cvg_typ = 'B' and wrk.curr_cvg(i).cvg_reasn = 'O' then
            --do.pl('PROD PHASE2 before eicc declare='||WRK.CURR_CVG.COUNT);
             l_eicc_dcl := eicc_declare(i);

          end if;
       end if;
       -->>VPD-23
--2003-322(2)       l_endow_amt := l_endow_amt + endow_declare(i, pi_asof_dt);
       --VPD-23 l_endow_amt := l_endow_amt + l_endow_dcl;        --2003-322(2)
       l_fcc_dcl := l_fcc_dcl + NVL(l_endow_dcl,0);--VPD-23
       --do.pl('wrk.curr_cvg(i).cvg_typ= '||wrk.curr_cvg(i).cvg_typ);
       --do.pl('wrk.curr_cvg(i).cvg_reasn= '||wrk.curr_cvg(i).cvg_reasn);
       if wrk.curr_cvg(i).cvg_typ = 'B' and wrk.curr_cvg(i).cvg_reasn = 'O' then --VPD-23
         --do.pl('****************l_endow_dcl = '||l_endow_dcl);

         wrk.gen_cov_avy_hist(l_trxn_cd
                             ,CD.AVY_TYP_ENDOW
                             ,l_endow_dcl
                             ,'Endowment Declare'
                             ,pi_asof_dt
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).plan_code) --PJ6/0086-20060420-DONGTRUONG
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).vers_num)  --PJ6/0086-20060420-DONGTRUONG
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).cvg_eff_dt)  --PJ6/0086-20060420-DONGTRUONG
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).cvg_eff_dt)  --PJ6/0086-20060420-DONGTRUONG
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).cli_num) --PJ6/0086-20060420-DONGTRUONG
                             );    --2003-322(2)

         --<<VPD-23
         --do.pl('***************l_eicc_dcl = '||l_eicc_dcl);
          wrk.gen_cov_avy_hist(l_trxn_cd
                             ,CD.AVY_TYP_ENDOW
                             , l_eicc_dcl
                             ,'Cash Coupon Declare'
                             ,pi_asof_dt
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).plan_code)
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).vers_num)
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).cvg_eff_dt)
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).cvg_eff_dt)
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).cli_num)
                             );
         -->>VPD-23

       --<<VPD-23
       else
          --do.pl('Endowment Declare = '||l_endow_dcl);
         wrk.gen_cov_avy_hist(l_trxn_cd
                             ,CD.AVY_TYP_ENDOW
                             ,l_endow_dcl
                             ,'Endowment Declare'
                             ,pi_asof_dt
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).plan_code) --PJ6/0086-20060420-DONGTRUONG
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).vers_num)  --PJ6/0086-20060420-DONGTRUONG
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).cvg_eff_dt)  --PJ6/0086-20060420-DONGTRUONG
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).cvg_eff_dt)  --PJ6/0086-20060420-DONGTRUONG
                             ,ByReftoByValue.convert(wrk.curr_cvg(i).cli_num) --PJ6/0086-20060420-DONGTRUONG
                             );    --2003-322(2)
       end if;
       -->>VPD-23
    end loop;
    l_endow_amt := l_endow_amt + NVL(l_fcc_dcl,0) + NVL(l_eicc_dcl,0);        --VPD-23
-- << LIL2000-071
--do.pl('**************l_endow_amt: '||l_endow_amt);
    if l_endow_amt > 0 then
     if l_terr_cd='SH' then -- VN/SH-Align (2005-HNAM002)
      l_endow_adv := WRK.CURR_AVY.ENDOW_ADV;
      if l_endow_adv >0 then
        if l_endow_amt >= l_endow_adv then
          WRK.gen_acct_ext(cd.credit,'BCCPERN',l_endow_adv,l_trxn_cd,pi_asof_dt);
          WRK.gen_acct_ext(cd.debit,'CCPERN',l_endow_adv,l_trxn_cd,pi_asof_dt);
                l_endow_amt := l_endow_amt - l_endow_adv;
                wrk.gen_cov_avy_hist(l_trxn_cd
                                 ,CD.AVY_TYP_ENDOW
                                 ,-l_endow_adv
                                 ,'Deduct Baby Cash Coupon Withdrawal'
                                 ,pi_asof_dt
                                 );    --2003-322(2)
              else
           WRK.gen_acct_ext(cd.credit,'BCCPERN',l_endow_amt,l_trxn_cd,pi_asof_dt);
           WRK.gen_acct_ext(cd.debit,'CCPERN',l_endow_amt,l_trxn_cd,pi_asof_dt);
           wrk.gen_cov_avy_hist(l_trxn_cd
                                 ,CD.AVY_TYP_ENDOW
                                 ,-l_endow_amt
                                 ,'Deduct Baby Cash Coupon Withdrawal'
                                 ,pi_asof_dt
                                 );    --2003-322(2)
                 l_endow_amt := 0;
           WRK.gen_query_reg(S_MESSAGE.GET_MESSAGE(6504),l_trxn_cd,
            get_dsp_ind(6504,'AVY'));
        end if;
        WRK.gen_trxn_hist(get_trxn_seq
                       ,S_MESSAGE.GET_MESSAGE(6505)
                       ,l_trxn_cd
                       ,l_endow_adv
                       ,null
                       ,pi_asof_dt
                       ,NULL ,'N'                            --CAS001135
                        );

      end if;
    end if; -- VN/SH-Align (2005-HNAM002)
-- >> LIL2000-071
      --do.pl('PROD PHASE2 l_endow_amt='||l_endow_amt||'-l_fcc_dcl='||l_fcc_dcl||'-l_eicc_dcl='||l_eicc_dcl);
      if l_endow_amt > 0 then
        --VPD-23 WRK.gen_acct_ext(cd.debit, 'CCPERN',l_endow_amt,l_trxn_cd,pi_asof_dt);
        --<<VPD-23
        if l_fcc_dcl > 0 then
           WRK.gen_acct_ext(cd.debit, 'CCPERN',l_fcc_dcl,l_trxn_cd,pi_asof_dt);
        end if;
        if l_eicc_dcl > 0 then
          --do.pl('PROD PHASE2 l_eicc_dcl='||l_eicc_dcl);
           WRK.gen_acct_ext(cd.debit, 'CCPERNEX',l_eicc_dcl,l_trxn_cd,pi_asof_dt);
          -- do.pl('PROD PHASE2 wrk.CURR_ACCT_EXT.count='||wrk.CURR_ACCT_EXT.count||'-return code='||fcn.return_code);
        end if;
        -->>VPD-23
--24/03/2003  Q2CE05        if     WRK.CURR_PLAN(WRK.srch_base_cvg).ENDOW_CTL = '1' then
         --<<MD10/0197_phase2
        if pi_asof_dt >= wrk.curr_cvg(wrk.Srch_base_cvg).xpry_dt and pi_pre_avy_ind = 'Y' then
          WRK.gen_acct_ext(cd.credit,'CCPPAYND',l_endow_amt,l_trxn_cd,pi_asof_dt);
        elsif nvl(wrk.curr_pol.endow_ctl, '2') in ('1', '3') then
         -->>MD10/0197_phase2
         --MD10/0197_phase2  if nvl(wrk.curr_pol.endow_ctl, '2') in ('1', '3') then       --24/03/2003  Q2CE05
          WRK.gen_acct_ext(cd.credit,'SUPPOL',l_endow_amt,l_trxn_cd,pi_asof_dt);
          --<<PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP
          --EN9/0497 if l_terr_cd='VN' and WRK.CURR_LOAN.LOAN_BAL > 0 then
          if l_terr_cd='VN' and WRK.CURR_LOAN.LOAN_BAL > 0 and pi_pre_avy_ind = 'N' then  --EN9/0497
              WRK.gen_trxn_hist(get_trxn_seq
                               ,S_MESSAGE.GET_MESSAGE(3000,to_char(WRK.CURR_AVY.ENDOW_BAL))
                               ,l_trxn_cd
                               ,l_endow_amt
                               ,null
                               ,pi_asof_dt
                               ,NULL
                               ,'N'
                               );
              --PR7/0184 l_endow_amt:=repay_loan_by_ccp(l_endow_amt,l_trxn_cd,pi_asof_dt);
              l_endow_amt:=repay_loan_by_ccp(l_endow_amt,l_trxn_cd,greatest(pi_asof_dt,WRK.CURR_LOAN.loan_actv_dt)); --PR7/0184
          end if;
          -->>PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP
          --EN9/0497 IF l_endow_amt > 0 THEN --PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP
          IF l_endow_amt > 0  and pi_pre_avy_ind = 'N' THEN  --EN9/0497
          if WRK.CURR_LOAN.LOAN_BAL > 0 then
-- << HK-1998V2-MS01-C  1998/09/24
--            WRK.gen_query_reg(S_MESSAGE.GET_MESSAGE(3013),l_trxn_cd);
            WRK.gen_query_reg(S_MESSAGE.GET_MESSAGE(3013),l_trxn_cd,
           get_dsp_ind(3013,'AVY'));
-- >> HK-1998V2-MS01-C  1998/09/24
          else

-- << 2003-289
--<< VN/SH-Align (2005-HNAM002)
            l_avy_ddp := null;
            open  c_avy_ddp (wrk.curr_pol.terr_cd);
            fetch c_avy_ddp into l_avy_ddp;
            close c_avy_ddp;
            --<<PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP
            CTL_PARM.GET('CCP_THRESHOLD',l_ccp_threshold);
            if l_endow_amt < l_ccp_threshold then
                WRK.gen_acct_ext(cd.debit, 'SUPPOL',l_endow_amt,l_trxn_cd,pi_asof_dt);
                WRK.gen_acct_ext(cd.credit, 'SUPPAY',l_endow_amt,l_trxn_cd,pi_asof_dt);

            --if nvl(l_avy_ddp, 'N') = 'Y' and wrk.curr_pol.payo_mthd = CD.PAYO_MTHD_PAC_BILL then
            elsif nvl(l_avy_ddp, 'N') = 'Y' and wrk.curr_pol.payo_mthd = CD.PAYO_MTHD_PAC_BILL then
            -->>PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP

-->> VN/SH-Align (2005-HNAM002)
--VN/SH-Align (2005-HNAM002)            if wrk.curr_pol.payo_mthd = CD.PAYO_MTHD_PAC_BILL then
                -- Bank Transfer out
              WRK.gen_DNR_dtls('CCPPAYND',l_endow_amt, pi_asof_dt, null, 'AP', 'T');
              WRK.gen_acct_ext(cd.debit, 'SUPPOL',l_endow_amt,l_trxn_cd,pi_asof_dt);
              WRK.gen_acct_ext(cd.credit,'DISBUR',l_endow_amt,l_trxn_cd,pi_asof_dt);
              WRK.gen_DNR_dtls('CCPPAYND',-l_endow_amt, pi_asof_dt, null, 'AP', 'T');
            else
-- >> 2003-289

--xuchen2000-197              WRK.gen_DNR_dtls('CCPPAYND', l_endow_amt, pi_asof_dt);
--<<xuchen2000-197
              -- 2003-350 WRK.gen_DNR_dtls('CCPPAYND',l_endow_amt, pi_asof_dt, null, 'VC', 'M');
--<< VN/SH-Align (2005-HNAM002)
                l_auto_dnr := null;
                open  c_auto_dnr (wrk.curr_pol.terr_cd);
                fetch c_auto_dnr into l_auto_dnr;
                close c_auto_dnr;
      if nvl(l_auto_dnr,'N')='Y' then -- VN/SH-Align (2005-HNAM002)
              WRK.gen_DNR_dtls('CCPPAYND',l_endow_amt, pi_asof_dt);  -- 2003-350
              WRK.gen_acct_ext(cd.debit, 'SUPPOL',l_endow_amt,l_trxn_cd,pi_asof_dt);
              WRK.gen_acct_ext(cd.credit,'DISBUR',l_endow_amt,l_trxn_cd,pi_asof_dt);
              -- 2003-289 WRK.gen_DNR_dtls('CCPPAYND',-l_endow_amt, pi_asof_dt);
              -- 2003-350 WRK.gen_DNR_dtls('CCPPAYND',-l_endow_amt, pi_asof_dt, null, 'VC', 'M'); -- 2003-289
              WRK.gen_DNR_dtls('CCPPAYND',-l_endow_amt, pi_asof_dt);  -- 2003-350
            else -- VN/SH-Align (2005-HNAM002)
             if pi_asof_dt < wrk.curr_cvg(wrk.Srch_base_cvg).xpry_dt then --MD9/0048
              WRK.gen_DNR_dtls('CCPPAYND',l_endow_amt, pi_asof_dt);
             end if;--MD9/0048
            end if;  -- VN/SH-Align (2005-HNAM002)
-->>xuchen2000-197
            end if;          -- 2003-289
          end if;
          WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3000,to_char(WRK.CURR_AVY.ENDOW_BAL))
                           ,l_trxn_cd
                           ,l_endow_amt
                           ,null
                           ,pi_asof_dt
                           ,NULL ,'N'                            --CAS001135
                           );
--24/03/2003  Q2CE05        elsif WRK.CURR_PLAN(WRK.srch_base_cvg).ENDOW_CTL = '2' then
          END IF;--PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP
          elsif nvl(wrk.curr_pol.endow_ctl, '2') = '2' then      --24/03/2003  Q2CE05
            WRK.gen_acct_ext(cd.credit,'CCPPAYND',l_endow_amt,l_trxn_cd,pi_asof_dt);
            WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3001)
                           ,l_trxn_cd
                           ,l_endow_amt
                           ,null
                           ,pi_asof_dt
                           ,NULL ,'N'                            --CAS001135
                           );
            --EN9/0497 WRK.CURR_AVY.ENDOW_ACTV_DT := pi_asof_dt;   --LIL2000-158
            --<<EN9/0497
            --IT10/0428 if WRK.CURR_AVY.ENDOW_ACTV_DT <= pi_asof_dt then
            if NVL(WRK.CURR_AVY.ENDOW_ACTV_DT, pi_asof_dt) <= pi_asof_dt then --IT10/0428
              WRK.CURR_AVY.ENDOW_ACTV_DT := pi_asof_dt;
            else
              WRK.CURR_AVY.ENDOW_INT_ACRU := WRK.CURR_AVY.ENDOW_INT_ACRU +
                                              calc_int(cd.int_rt_csh_cpn,
                                                      l_endow_amt,
                                                      pi_asof_dt,
                                                      WRK.CURR_AVY.ENDOW_ACTV_DT,
                                                      NULL,
                                                      wrk.curr_pol.plan_code_base
                                                      );
            end if;
            -->>EN9/0497
            --<<PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP
            --EN9/0497 if l_terr_cd='VN' and WRK.CURR_LOAN.LOAN_BAL > 0 then
            if l_terr_cd='VN' and WRK.CURR_LOAN.LOAN_BAL > 0 and pi_pre_avy_ind = 'N' then  --EN9/0497
                --PR7/0184 l_endow_amt:=repay_loan_by_ccp(WRK.CURR_AVY.ENDOW_BAL,l_trxn_cd,pi_asof_dt);
                l_endow_amt:=repay_loan_by_ccp(WRK.CURR_AVY.ENDOW_BAL,l_trxn_cd,greatest(pi_asof_dt,WRK.CURR_LOAN.loan_actv_dt)); --PR7/0184
                WRK.gen_trxn_hist(get_trxn_seq
                               ,S_MESSAGE.GET_MESSAGE(3001)
                               ,l_trxn_cd
                               ,l_endow_amt
                               ,null
                               ,pi_asof_dt
                               ,NULL
                               ,'N'
                               );
            end if;
            --<<PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP
        end if;
      end if;
    end if;
-->> 2003-NP01(NLD)
   if l_terr_cd='SH' then -- VN/SH-Align (2005-HNAM002)
    l_endow_no_claim    := get_endow_no_claim(pi_asof_dt);
    if l_endow_no_claim > 0 then
       WRK.gen_acct_ext(cd.debit, 'CCPERN', l_endow_no_claim, l_trxn_cd, pi_asof_dt);
       if WRK.CURR_PLAN(WRK.srch_base_cvg).ENDOW_CTL = '1' then
          WRK.gen_acct_ext(cd.credit, 'SUPPOL', l_endow_no_claim, l_trxn_cd, pi_asof_dt);
          if WRK.CURR_LOAN.LOAN_BAL > 0 then
                WRK.gen_query_reg(S_MESSAGE.GET_MESSAGE(3024),l_trxn_cd,
                            get_dsp_ind(3024,'AVY'));
          else
-- << 2003-289
            if wrk.curr_pol.payo_mthd = CD.PAYO_MTHD_PAC_BILL then
               WRK.gen_DNR_dtls('CCPPAYND',l_endow_no_claim, pi_asof_dt, null, 'AP', 'T');
               WRK.gen_acct_ext(cd.debit, 'SUPPOL',l_endow_no_claim,l_trxn_cd,pi_asof_dt);
               WRK.gen_acct_ext(cd.credit,'DISBUR',l_endow_no_claim,l_trxn_cd,pi_asof_dt);
               WRK.gen_DNR_dtls('CCPPAYND',-l_endow_no_claim, pi_asof_dt, null, 'AP', 'T');
            else
-- >> 2003-289

               -- 2003-350 WRK.gen_DNR_dtls('CCPPAYND',l_endow_no_claim, pi_asof_dt, null, 'VC', 'M');
               WRK.gen_DNR_dtls('CCPPAYND',l_endow_no_claim, pi_asof_dt);  -- 2003-350
               WRK.gen_acct_ext(cd.debit, 'SUPPOL',l_endow_no_claim,l_trxn_cd,pi_asof_dt);
               WRK.gen_acct_ext(cd.credit,'DISBUR',l_endow_no_claim,l_trxn_cd,pi_asof_dt);
               -- 2003-289 WRK.gen_DNR_dtls('CCPPAYND',-l_endow_no_claim, pi_asof_dt);
               -- 2003-350 WRK.gen_DNR_dtls('CCPPAYND',-l_endow_no_claim, pi_asof_dt, null, 'VC', 'M');   -- 2003-289
               WRK.gen_DNR_dtls('CCPPAYND',-l_endow_no_claim, pi_asof_dt);   -- 2003-350
            end if;        -- 2003-289
          end if;
          WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3025,to_char(l_endow_no_claim))
                           ,l_trxn_cd
                           ,l_endow_no_claim
                           ,null
                           ,pi_asof_dt
                           );
       elsif WRK.CURR_PLAN(WRK.srch_base_cvg).ENDOW_CTL = '2' then

          WRK.gen_acct_ext(cd.credit,'CCPPAYND',l_endow_no_claim,l_trxn_cd,pi_asof_dt);
          WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3026)
                           ,l_trxn_cd
                           ,l_endow_no_claim
                           ,null
                           ,pi_asof_dt
                           );
       end if;
    end if;
   end if; -- VN/SH-Align (2005-HNAM002)
--<< 2003-NP01(NLD)
  end;
--  WCB98040101 Start
  --
  -- Annuity Declaration
  --
  FUNCTION Annuity_Declare(pi_idx     in integer
                          ,pi_asof_dt in DATE
                          )
    return TAVY_VALUE_DTLS.ANTY_PAYO_AMT%TYPE
  is
    l_dur          INTEGER;
    l_annuity_rt   TPOLICY_VALUES.ENDOW_RT%TYPE;
    l_unit_basis   TPOLICY_VALUES.UNIT_BASIS%TYPE;
    l_anty_dcl      TAVY_VALUE_DTLS.ANTY_PAYO_AMT%TYPE; --2003-322(2)
    l_POLVAL      RT.tbl_polval; --PJ6/0086-20060420-DONGTRUONG
  begin
    fcn.set_return(0);
    if WRK.CURR_PLAN(pi_idx).anty_ctl = '0' then
       return 0;
    end if;
    if pi_idx = 1
       and WRK.CURR_AVY.POL_NUM is null then
       WRK.init_avy('ANTY',pi_asof_dt);
    end if;
    l_dur := prem_calc.calc_att_age(pi_idx, pi_asof_dt, 'N') - WRK.CURR_CVG(pi_idx).CVG_EFF_AGE;
--    if l_dur = 0 then
--       return 0;
--  end if;
  --<<PJ6/0086-20060420-DONGTRUONG
    /*
    l_annuity_rt := RT.get_POLVAL(WRK.CURR_CVG(pi_idx).PLAN_CODE
                                 ,WRK.CURR_CVG(pi_idx).POL_VAL_VERS
                                 ,WRK.CURR_CVG(pi_idx).SEX_CODE
                                 ,WRK.CURR_CVG(pi_idx).CVG_EFF_AGE
                                 ,l_dur
                                 ,l_unit_basis
                                 )(l_dur).ENDOW_RT;
    */
    l_POLVAL := RT.get_POLVAL(ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).PLAN_CODE)  --PJ6/0086-20060420-DONGTRUONG
                                 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).POL_VAL_VERS) --PJ6/0086-20060420-DONGTRUONG
                                 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).SEX_CODE)   --PJ6/0086-20060420-DONGTRUONG
                                 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).CVG_EFF_AGE)  --PJ6/0086-20060420-DONGTRUONG
                                 ,l_dur
                                 ,l_unit_basis
                                 ,null                                                     --PJ12/0445
                                 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).FACE_AMT )    --PJ12/0445
                                 ,ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).cvg_stat_cd ) --PJ12/0445
                                 );
     l_annuity_rt := l_POLVAL(l_dur).ENDOW_RT;
  -->>PJ6/0086-20060420-DONGTRUONG
--<<2003-322(2)
    l_anty_dcl :=  calc_RT_value(l_annuity_rt
                        ,get_unit(l_unit_basis, ByReftoByValue.convert(WRK.CURR_CVG(pi_idx).FACE_AMT)) --PJ6/0086-20060420-DONGTRUONG
                        );
    wrk.gen_cov_avy_hist(l_trxn_cd
                        ,CD.AVY_TYP_ANTY
                        ,l_anty_dcl
                        ,'Annuity Declare'
                        ,pi_asof_dt
                        ,ByReftoByValue.convert(wrk.curr_cvg(pi_idx).plan_code)  --PJ6/0086-20060420-DONGTRUONG
                        ,ByReftoByValue.convert(wrk.curr_cvg(pi_idx).vers_num)   --PJ6/0086-20060420-DONGTRUONG
                        ,ByReftoByValue.convert(wrk.curr_cvg(pi_idx).cvg_eff_dt) --PJ6/0086-20060420-DONGTRUONG
                        ,ByReftoByValue.convert(wrk.curr_cvg(pi_idx).cvg_eff_dt) --PJ6/0086-20060420-DONGTRUONG
                        ,ByReftoByValue.convert(wrk.curr_cvg(pi_idx).cli_num)    --PJ6/0086-20060420-DONGTRUONG
                        );
    return nvl(l_anty_dcl,0);
--    return calc_RT_value(l_annuity_rt
--                        ,get_unit(l_unit_basis, WRK.CURR_CVG(pi_idx).FACE_AMT)
--                        );
-->>2003-322(2)
  end;
  --
  -- Annuity Calculation and Payout
  --
  PROCEDURE Annuity_Apply(pi_asof_dt in DATE)
  is
    l_annuity_amt  TAVY_VALUE_DTLS.ANTY_BAL%TYPE := 0;
  begin
    fcn.set_return(0);
    for i in 1 .. WRK.CURR_CVG.COUNT loop
        if WRK.CURR_PLAN(i).anty_freq is not null then
           l_annuity_amt := l_annuity_amt +
                            WRK.CURR_AVY.ANTY_PAYO_AMT / (12 / WRK.CURR_PLAN(i).anty_freq);
           exit;  --  HK-P-19981123-01
        end if;
    end loop;
    if l_annuity_amt > 0 then
       WRK.gen_acct_ext(cd.debit, 'ANTYERN',l_annuity_amt,l_trxn_cd,pi_asof_dt);
       if WRK.CURR_PLAN(WRK.srch_base_cvg).ANTY_CTL = '1' then        -- Annuity Payout
          WRK.gen_acct_ext(cd.credit,'SUPPOL',l_annuity_amt,l_trxn_cd,pi_asof_dt);
--  <<  HK-P-19981123-01
--        WRK.gen_DNR_dtls('ANTYPYND', l_annuity_amt, pi_asof_dt);
          if WRK.CURR_POL.PAYO_MTHD = cd.payo_mthd_pac_bill then
             -- 2003-350 WRK.gen_DNR_dtls('ANTYPYND', l_annuity_amt, pi_asof_dt, null, cd.payo_typ_autopay);
             WRK.gen_DNR_dtls('ANTYPYND', l_annuity_amt, pi_asof_dt, null, cd.payo_typ_autopay, 'T');  -- 2003-350
          else
             WRK.gen_DNR_dtls('ANTYPYND', l_annuity_amt, pi_asof_dt);
          end if;
--  >>  HK-P-19981123-01
          WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3014,to_char(WRK.CURR_AVY.ANTY_BAL))
                           ,l_trxn_cd
                           ,l_annuity_amt
                           ,null
                           ,pi_asof_dt
                           ,NULL ,'N'                            --CAS001135
                           );
       elsif WRK.CURR_PLAN(WRK.srch_base_cvg).ANTY_CTL = '2' then     -- Annuity Accumulated
          WRK.CURR_AVY.ANTY_INT_ACRU := WRK.CURR_AVY.ANTY_INT_ACRU
                                        + calc_int(cd.int_rt_annuity
                                                  ,WRK.CURR_AVY.ANTY_BAL
                                                  ,WRK.CURR_AVY.ANTY_ACTV_DT
                                                  ,pi_asof_dt
                                                  ,NULL                         -- SG-DEV2000-21-A
                                                  ,wrk.curr_pol.plan_code_base  -- SG-DEV2000-21-A
                                                  );
          WRK.CURR_AVY.ANTY_ACTV_DT := pi_asof_dt;
          WRK.gen_acct_ext(cd.credit,'ANTYPYND',l_annuity_amt,l_trxn_cd,pi_asof_dt);
          WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3015)
                           ,l_trxn_cd
                           ,l_annuity_amt
                           ,null
                           ,pi_asof_dt
                           ,NULL ,'N'                            --CAS001135
                           );
       end if;
    end if;
  end;
--  WCB98040101 End
--  <<  HK-1998V2-CP02-C
  --
  -- Lump Sum Payment
  --
  --PROCEDURE Lump_Sum_Payment(pi_asof_dt in DATE)      --LIL2000-217
  PROCEDURE Lump_Sum_Payment(pi_asof_dt in DATE,pi_pol_stat_cd in varchar2)  --LIL2000-217
  is
    l_lump_sum_bal  TAVY_VALUE_DTLS.LUMP_SUM_BAL%TYPE;     -- LIL2000-217
    l_frez_lump_sum      tcontrol_parameters.parm_valu%type;   -- (SG-DEV2000-06-B)
    l_lump_sum_mthd      tcontrol_parameters.parm_valu%type;   -- (SG-DEV2000-06-B) Retrofit
    l_prem               tpolicys.dscnt_prem%type;             -- SG-DEV2000-06-B(1) Retrofit
  begin
    fcn.set_return(0);
    ctl_parm.get('LUMP_SUM_MTHD',l_lump_sum_mthd);    -- (SG-DEV2000-06-B) Retrofit

--<< SG-DEV2000-06-B(1) Retrofit
    IF NVL(l_lump_sum_mthd,'ORIG') = 'SING' THEN    -- For SING
      -- >> SG-DEV2000-06-B(1)
      if wrk.curr_pol.bill_to_dt > advance_ptd(wrk.curr_pol.last_avy_dt, wrk.curr_pol.pol_eff_dt,12) then
        l_prem := wrk.curr_pol.nyr_dscnt_prem - wrk.curr_pol.pmt_susp;
      else
        l_prem := wrk.curr_pol.dscnt_prem - wrk.curr_pol.pmt_susp;
      end if;
      -- << SG-DEV2000-06-B(1)
      if WRK.CURR_POL.POL_STAT_CD <> cd.stat_waiver and
         WRK.CURR_POL.BILL_TO_DT > WRK.CURR_POL.PD_TO_DT then

        if is_within_tolerance(WRK.CURR_AVY.LUMP_SUM_BAL
                     -- SG-DEV2000-06-B(1)                 ,WRK.CURR_POL.DSCNT_PREM
                              ,l_prem                       -- SG-DEV2000-06-B(1)
                              ,WRK.CURR_POL.CRCY_CODE
                              ,1
                              ,'GREATER') then
  -- SG-DEV2000-06-B(1)          WRK.gen_acct_ext(cd.credit,'SUPPAY',WRK.CURR_POL.DSCNT_PREM,l_trxn_cd,pi_asof_dt);
  -- SG-DEV2000-06-B(1)          WRK.gen_acct_ext(cd.debit,'LSPPAYWD',WRK.CURR_POL.DSCNT_PREM,l_trxn_cd,pi_asof_dt);
          WRK.gen_acct_ext(cd.credit,'SUPPAY',least(l_PREM, wrk.curr_avy.lump_sum_bal)  ,l_trxn_cd,pi_asof_dt);     -- SG-DEV2000-06-B(1)
          WRK.gen_acct_ext(cd.debit,'LSPPAYWD',least(l_PREM,wrk.curr_avy.lump_sum_bal) ,l_trxn_cd,pi_asof_dt);     -- SG-DEV2000-06-B(1)
  -- >> SG-DEV2000-06-B(1)
          WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3024,to_char(WRK.CURR_AVY.LUMP_SUM_BAL))
                           ,l_trxn_cd
                           ,l_prem
                           ,null
                           ,pi_asof_dt
                           ,NULL ,'N'                            --CAS001135
                           );
  -- << SG-DEV2000-06-B(1)
          apply_premium.put('SUPPAY','NORMAL','FULLPAY',0);
        else
        --<< (SG-DEV2000-06-B) Retrofit
          --  Modified by Richard on 29 jun 2000  (SG-DEV2000-06-B)
          ctl_parm.get('FREZ_LUMP_SUM',l_frez_lump_sum);
    IF l_frez_lump_sum = 'N' then
            WRK.gen_acct_ext(cd.credit,'SUPPAY',WRK.CURR_AVY.LUMP_SUM_BAL,l_trxn_cd,pi_asof_dt);
            WRK.gen_acct_ext(cd.debit,'LSPPAYWD',WRK.CURR_AVY.LUMP_SUM_BAL,l_trxn_cd,pi_asof_dt);
    ELSE
            WRK.CURR_POL.FREZ_CODE := cd.frez_code_lump_sum;
    END IF;
           --  (SG-DEV2000-06-B)
        -->> (SG-DEV2000-06-B) Retrofit
        end if;
      end if;
    ELSE  -- Following are for SH
-->> SG-DEV2000-06-B(1) Retrofit

--<<LIL2000-217
    l_lump_sum_bal := wrk.curr_avy.lump_sum_bal;
    if pi_pol_stat_cd = cd.STAT_FPU then
    if l_lump_sum_bal > 0 then
          WRK.gen_acct_ext(cd.credit,'SUPPOL',wrk.curr_avy.lump_sum_bal,l_trxn_cd,pi_asof_dt);
         WRK.gen_acct_ext(cd.debit,'LSPPAYWD',wrk.curr_avy.lump_sum_bal,l_trxn_cd,pi_asof_dt);
            WRK.gen_trxn_hist(get_trxn_seq
                               ,S_MESSAGE.GET_MESSAGE(6521)
                               ,l_trxn_cd
                               ,l_lump_sum_bal
                               ,null
                               ,pi_asof_dt
                               ,NULL ,'N'                            --CAS001135
                               );

-- << 2003-289
            if wrk.curr_pol.payo_mthd = CD.PAYO_MTHD_PAC_BILL then
               WRK.gen_DNR_dtls('LSPPAYWD',l_lump_sum_bal, pi_asof_dt, null, 'AP', 'T');
               WRK.gen_acct_ext(cd.debit, 'SUPPOL',l_lump_sum_bal,l_trxn_cd,pi_asof_dt);
               WRK.gen_acct_ext(cd.credit,'DISBUR',l_lump_sum_bal,l_trxn_cd,pi_asof_dt);
               WRK.gen_DNR_dtls('LSPPAYWD',-l_lump_sum_bal, pi_asof_dt, null, 'AP', 'T');
            else
-- >> 2003-289
               -- 2003-350 WRK.gen_DNR_dtls('LSPPAYWD',l_lump_sum_bal, pi_asof_dt, null, 'VC', 'M');
               WRK.gen_DNR_dtls('LSPPAYWD',l_lump_sum_bal, pi_asof_dt);  -- 2003-350
          /*--<< Dong truong PJ8/0333    08/08/2008
               WRK.gen_acct_ext(cd.debit, 'SUPPOL',l_lump_sum_bal,l_trxn_cd,pi_asof_dt);
               WRK.gen_acct_ext(cd.credit,'DISBUR',l_lump_sum_bal,l_trxn_cd,pi_asof_dt);
               -- 2003-289 WRK.gen_DNR_dtls('LSPPAYWD',-l_lump_sum_bal, pi_asof_dt);
               -- 2003-350 WRK.gen_DNR_dtls('LSPPAYWD',-l_lump_sum_bal, pi_asof_dt, null, 'VC', 'M');    -- 2003-289
               WRK.gen_DNR_dtls('LSPPAYWD',-l_lump_sum_bal, pi_asof_dt);    -- 2003-350
           */--<< Dong truong PJ8/0333    08/08/2008
            end if;           -- 2003-289
    end if;
      wrk.curr_pol.lump_sum_ind := 'N';
    end if;
-->>LIL2000-217
    if WRK.CURR_POL.POL_STAT_CD <> cd.stat_waiver and
       WRK.CURR_POL.BILL_TO_DT > WRK.CURR_POL.PD_TO_DT then
       if is_within_tolerance(WRK.CURR_AVY.LUMP_SUM_BAL
--                     ,WRK.CURR_POL.DSCNT_PREM   --LIL2000-217
                     ,WRK.CURR_POL.NYR_DSCNT_PREM   --LIL2000-217
           ,WRK.CURR_POL.CRCY_CODE
           ,1
           ,'GREATER') then
--          WRK.gen_acct_ext(cd.credit,'SUPPAY',WRK.CURR_POL.DSCNT_PREM,l_trxn_cd,pi_asof_dt);  --LIL2000-217
--          WRK.gen_acct_ext(cd.debit,'LSPPAYWD',WRK.CURR_POL.DSCNT_PREM,l_trxn_cd,pi_asof_dt); --LIL2000-217
          WRK.gen_acct_ext(cd.credit,'SUPPAY',WRK.CURR_POL.NYR_DSCNT_PREM,l_trxn_cd,pi_asof_dt);  --LIL2000-217
          WRK.gen_acct_ext(cd.debit,'LSPPAYWD',WRK.CURR_POL.NYR_DSCNT_PREM,l_trxn_cd,pi_asof_dt); --LIL2000-217
          apply_premium.put('SUPPAY','NORMAL','FULLPAY',0);
       else
--<<LIL2000-217
--          WRK.CURR_POL.FREZ_CODE := cd.frez_code_lump_sum;
     l_lump_sum_bal := wrk.curr_pol.NYR_DSCNT_PREM-wrk.curr_avy.lump_sum_bal;
       if nvl(wrk.curr_pol.xcpt_bill_cd, cd.WILDCARD_CHAR) = 'L' and l_lump_sum_bal > 0 then
       WRK.gen_acct_ext(cd.credit,'SUPPAY',wrk.curr_pol.NYR_DSCNT_PREM,l_trxn_cd,pi_asof_dt);
       WRK.gen_acct_ext(cd.debit,'LSPPAYWD',wrk.curr_avy.lump_sum_bal,l_trxn_cd,pi_asof_dt);
       WRK.gen_acct_ext(cd.debit,'LSPINT',l_lump_sum_bal,l_trxn_cd,pi_asof_dt);
       apply_premium.put('SUPPAY','NORMAL','FULLPAY',0);
           WRK.gen_trxn_hist(get_trxn_seq
                               ,S_MESSAGE.GET_MESSAGE(6522)
                               ,l_trxn_cd
                               ,l_lump_sum_bal
                               ,null
                               ,pi_asof_dt
                               ,NULL ,'N'                            --CAS001135
                               );
     elsif nvl(wrk.curr_pol.xcpt_bill_cd, cd.WILDCARD_CHAR) <> 'L' and l_lump_sum_bal > 0 then
       WRK.gen_acct_ext(cd.credit,'SUPPAY',wrk.curr_avy.lump_sum_bal,l_trxn_cd,pi_asof_dt);
       WRK.gen_acct_ext(cd.debit,'LSPPAYWD',wrk.curr_avy.lump_sum_bal,l_trxn_cd,pi_asof_dt);
           WRK.gen_trxn_hist(get_trxn_seq
                               ,S_MESSAGE.GET_MESSAGE(6523)
                               ,l_trxn_cd
                               ,l_lump_sum_bal
                               ,null
                               ,pi_asof_dt
                               ,NULL ,'N'                            --CAS001135
                               );
       wrk.curr_pol.lump_sum_ind := 'N';
     end if;
-->>LIL2000-217
       end if;
    end if;
    END IF; --SG-DEV2000-06-B(1) Retrofit
  end;
--  >>  HK-1998v2-CP02-C
--  >>  SG-DEV2000-32-A
  --
  -- Maturity Value Calculation
  --
  PROCEDURE MAT_PROCESS(pi_asof_dt in DATE)
  is
  l_curr_avy_dt            TPOLICYS.LAST_AVY_DT%TYPE;
  l_pol_mat_amt            NUMBER := 0;
  l_cvg_mat_amt            NUMBER := 0;
  l_pol_expire             VARCHAR2(1) := 'Y';
  l_cvg_expire             VARCHAR2(1) := 'Y';
  l_payo_amt               NUMBER;
  --<< MAT20060327
  l_os_prem                NUMBER := 0;
  -->> MAT20060327
  l_nfo_cvg      nfo.tbl_cvg; --PJ6/0086-20060420-DONGTRUONG



  begin
    fcn.set_return(0);
    --PR11/0836 l_curr_avy_dt := add_date(WRK.CURR_POL.LAST_AVY_DT,'YEARS',1);
    l_curr_avy_dt := advance_PTD(WRK.CURR_POL.LAST_AVY_DT, WRK.CURR_POL.POL_EFF_DT, 12); --PR11/0836
    for i in 1 .. WRK.CURR_CVG.COUNT loop
---------------------
-- For expired policy
---------------------
       IF (is_stat_grp_prem_pay(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd)) = 'Y'  OR    --PJ6/0086-20060420-DONGTRUONG
           is_stat_grp_pending(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd)) = 'Y' OR    --PJ6/0086-20060420-DONGTRUONG
           is_stat_grp_paid_up(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd)) = 'Y')    --PJ6/0086-20060420-DONGTRUONG
           AND wrk.curr_cvg(i).xpry_dt > l_curr_avy_dt THEN
              l_pol_expire := 'N';
              EXIT;
       END IF;
    end loop;

    IF l_pol_expire = 'Y' THEN  -- all coverages are expired
       IF WRK.CURR_POL.DIV_UPTO_DT < l_curr_avy_dt THEN
          div_apply (l_curr_avy_dt);
          inc_apply (l_curr_avy_dt);-- MAT20060327
          nfo.recalc(pi_asof_dt);
       END IF;
       --<< MAT20060327
       if wrk.curr_pol.pol_stat_cd = '1' then
        l_os_prem := wrk.curr_pol.dscnt_prem*months_between(l_curr_avy_dt,wrk.curr_pol.pd_to_dt)/to_number(wrk.curr_pol.pmt_mode);
       end if;
       -->> MAT20060327

       l_cvg_expire := 'N';
       l_pol_mat_amt := nfo.calc_value(pi_asof_dt).cv_pol
                 --     + nfo.calc_value(pi_asof_dt).cv_pua  -- SG-20001009-01
                      + nfo.calc_value(pi_asof_dt).matr_tb_pol
                      + nfo.calc_value(pi_asof_dt).endow_valu
                      --<< MAT20060327
                      + nfo.calc_value(pi_asof_dt).div_valu
                      + nfo.calc_value(pi_asof_dt).inc_valu
                      + nfo.calc_value(pi_asof_dt).lump_sum_valu
                      - l_os_prem
                      --<< MAT20060327
                      + WRK.CURR_POL.PMT_SUSP
                      + WRK.CURR_POL.POL_SUSP
                      - WRK.CURR_POL.RESV_DNR_AMT
                      - nfo.calc_value(pi_asof_dt).loan_valu;
    --<< MAT20060327
       if l_pol_mat_amt<=0 then
         l_pol_expire := 'N';
       end if;
    END IF;
    IF l_pol_expire = 'Y'
      and FCN.reasn_code = '901' -- AVY process
    THEN
    -->> MAT20060327
-- >> SG-UAT-20001214
          s_trmn_details(WRK.CURR_POL.POL_NUM
                        ,nfo.calc_value(pi_asof_dt).cv_pol - nfo.calc_value(pi_asof_dt).cv_pua
                        ,nfo.calc_value(pi_asof_dt).cv_pua
                        ,WRK.CURR_POL.POL_SUSP
                        ,WRK.CURR_POL.PMT_SUSP
                        ,WRK.CURR_AVY.ACUM_BAL
                        ,NFO.calc_value(pi_asof_dt).div_valu   - WRK.CURR_AVY.ACUM_BAL
                        ,WRK.CURR_LOAN.LOAN_BAL
                        ,NFO.calc_value(pi_asof_dt).loan_valu   - WRK.CURR_LOAN.LOAN_BAL
                        ,wrk.curr_avy.ENDOW_BAL
                        ,NFO.calc_value(pi_asof_dt).endow_valu   - WRK.CURR_AVY.ENDOW_BAL
                        ,WRK.CURR_AVY.LUMP_SUM_BAL
                        ,NFO.calc_value(pi_asof_dt).lump_sum_valu - WRK.CURR_AVY.LUMP_SUM_BAL
                        ,l_pol_mat_amt
                        --MD10/0197,0
                        ,NFO.calc_value(pi_asof_dt).rfnd_prem--MD10/0197
                        ,'Y'
                        ,nfo.calc_value(pi_asof_dt).matr_tb_pol
                        --<< MAT20060327
                        ,WRK.CURR_AVY.INC_BAL
                        ,NFO.calc_value(pi_asof_dt).inc_valu   - WRK.CURR_AVY.INC_BAL
                        -->> MAT20060327
                        );

-- << SG-UAT-20001214

       IF WRK.CURR_POL.POL_SUSP - WRK.CURR_POL.RESV_DNR_AMT > 0 OR WRK.CURR_POL.PMT_SUSP > 0 THEN  -- check suspense balance
          -- MAT20060327 WRK.gen_query_reg(S_MESSAGE.GET_MESSAGE(3020),l_trxn_cd,
          -- MAT20060327 get_dsp_ind(3020,'AVY'));
          --<< MAT20060327
          WRK.gen_query_reg(S_MESSAGE.GET_MESSAGE(36523),l_trxn_cd,
          get_dsp_ind(36523,'AVY'));
          -->> MAT20060327
       END IF;

       IF nfo.calc_value(pi_asof_dt).cv_pol - nfo.calc_value(pi_asof_dt).cv_pua > 0 THEN
          WRK.gen_acct_ext(cd.debit, 'MATCV', nfo.calc_value(pi_asof_dt).cv_pol - nfo.calc_value(pi_asof_dt).cv_pua, l_trxn_cd);
          WRK.gen_acct_ext(cd.credit,'SUPPOL', nfo.calc_value(pi_asof_dt).cv_pol - nfo.calc_value(pi_asof_dt).cv_pua, l_trxn_cd);
       END IF;
       IF nfo.calc_value(pi_asof_dt).cv_pua > 0 THEN
          WRK.gen_acct_ext(cd.debit, 'MATPUA', nfo.calc_value(pi_asof_dt).cv_pua , l_trxn_cd);
          WRK.gen_acct_ext(cd.credit,'SUPPOL', nfo.calc_value(pi_asof_dt).cv_pua, l_trxn_cd);
       END IF;
       IF nfo.calc_value(pi_asof_dt).matr_tb_pol > 0 THEN
          WRK.gen_acct_ext(cd.debit, 'MATEXPTB',nfo.calc_value(pi_asof_dt).matr_tb_pol, l_trxn_cd);
          WRK.gen_acct_ext(cd.credit,'SUPPOL',nfo.calc_value(pi_asof_dt).matr_tb_pol, l_trxn_cd);
       END IF;
       IF WRK.CURR_POL.PMT_SUSP > 0 THEN
          WRK.gen_acct_ext(cd.debit, 'SUPPAY',WRK.CURR_POL.PMT_SUSP, l_trxn_cd);
          WRK.gen_acct_ext(cd.credit,'SUPPOL',WRK.CURR_POL.PMT_SUSP, l_trxn_cd);
       END IF;
       IF nfo.calc_value(pi_asof_dt).endow_valu > 0 THEN
          WRK.gen_acct_ext(cd.debit, 'CCPPAYWD',nfo.calc_value(pi_asof_dt).endow_valu, l_trxn_cd);
          WRK.gen_acct_ext(cd.credit,'SUPPOL',nfo.calc_value(pi_asof_dt).endow_valu, l_trxn_cd);
       END IF;
       --<< MAT20060327
       IF WRK.CURR_AVY.ACUM_BAL > 0 THEN
          WRK.gen_acct_ext(cd.debit, 'DVDPAYWD',WRK.CURR_AVY.ACUM_BAL, l_trxn_cd);
          WRK.gen_acct_ext(cd.credit,'SUPPOL',WRK.CURR_AVY.ACUM_BAL, l_trxn_cd);
       END IF;

       IF nfo.calc_value(pi_asof_dt).inc_valu > 0 THEN
          WRK.gen_acct_ext(cd.debit, 'INCPAYWD',nfo.calc_value(pi_asof_dt).inc_valu, l_trxn_cd);
          WRK.gen_acct_ext(cd.credit,'SUPPOL',nfo.calc_value(pi_asof_dt).inc_valu, l_trxn_cd);
       END IF;

       IF nfo.calc_value(pi_asof_dt).lump_sum_valu > 0 THEN
          WRK.gen_acct_ext(cd.debit, 'LSPPAYWD',nfo.calc_value(pi_asof_dt).lump_sum_valu, l_trxn_cd);
          WRK.gen_acct_ext(cd.credit,'SUPPOL',nfo.calc_value(pi_asof_dt).lump_sum_valu, l_trxn_cd);
       END IF;

       IF l_os_prem > 0 THEN
          WRK.gen_acct_ext(cd.debit,'SUPPOL',l_os_prem, l_trxn_cd);
          WRK.gen_acct_ext(cd.credit,'SUPPAY',l_os_prem, l_trxn_cd);
          WRK.gen_acct_ext(cd.debit,'SUPPAY',l_os_prem, l_trxn_cd);
          WRK.gen_acct_ext(cd.credit,'PREMRY',l_os_prem, l_trxn_cd);
       END IF;

       -->> MAT20060327
       if NFO.calc_value(pi_asof_dt).loan_valu > 0 then
          loan_repay.put(NFO.calc_value(pi_asof_dt).loan_valu
                        ,'SUPPOL'
                        ,pi_asof_dt
                        );
       end if;
       if (WRK.CURR_POL.POL_SUSP - nvl(wrk.curr_pol.resv_dnr_amt,0)) > 0 then
           l_payo_amt := WRK.CURR_POL.POL_SUSP - nvl(wrk.curr_pol.resv_dnr_amt,0);
           WRK.Gen_DNR_Dtls(FCN.reasn_code
                           ,WRK.CURR_POL.POL_SUSP - nvl(WRK.CURR_POL.RESV_DNR_AMT,0)
                           ,pi_asof_dt);
       else
           l_payo_amt := 0;
       end if;
       WRK.gen_trxn_hist(get_trxn_seq
                        -- MAT20060327 ,S_MESSAGE.GET_MESSAGE(3021)
                        ,S_MESSAGE.GET_MESSAGE(36524) -- MAT20060327
                        ,l_trxn_cd
                        ,l_pol_mat_amt
                        ,null
                        ,pi_asof_dt
                        ,NULL ,'N'                            --CAS001135
                        );
       --END IF;
    END IF;
-----------------------
-- For expired coverage
-----------------------
--<<PJ6/0086-20060420-DONGTRUONG
    l_nfo_cvg :=nfo.get(pi_asof_dt); --PJ6/0086-20060420-DONGTRUONG

    for i in 1 .. WRK.CURR_CVG.COUNT loop
        IF wrk.curr_plan(i).maturity_ind = cd.ind_yes
           AND (is_stat_grp_prem_pay(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd)) = 'Y'  OR --PJ6/0086-20060420-DONGTRUONG
           is_stat_grp_pending(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd)) = 'Y' OR    --PJ6/0086-20060420-DONGTRUONG
           is_stat_grp_paid_up(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd)) = 'Y')    --PJ6/0086-20060420-DONGTRUONG
           AND l_cvg_expire = 'Y'                                     -- no policy is expired, check coverages
           AND wrk.curr_cvg(i).xpry_dt <= l_curr_avy_dt THEN
           IF WRK.CURR_POL.DIV_UPTO_DT < l_curr_avy_dt THEN
              div_apply (l_curr_avy_dt, i);
           END IF;
  /*
   l_cvg_mat_amt := nfo.get(pi_asof_dt)(i).cv_cvg
                          + nfo.get(pi_asof_dt)(i).matr_tb_cvg
                          - nfo.calc_value(pi_asof_dt).loan_valu;
  */
           l_cvg_mat_amt := l_nfo_cvg(i).cv_cvg
                          + l_nfo_cvg(i).matr_tb_cvg
                          - nfo.calc_value(pi_asof_dt).loan_valu;

              --IF nfo.get(pi_asof_dt)(i).cv_face_amt > 0 THEN
              IF l_nfo_cvg(i).cv_face_amt > 0 THEN
            --     WRK.gen_acct_ext(cd.debit, 'MATCV',nfo.get(pi_asof_dt)(i).cv_face_amt, l_trxn_cd);
            --     WRK.gen_acct_ext(cd.credit,'SUPPOL',nfo.get(pi_asof_dt)(i).cv_face_amt, l_trxn_cd);
                 WRK.gen_acct_ext(cd.debit, 'MATCV',l_nfo_cvg(i).cv_face_amt, l_trxn_cd);
                 WRK.gen_acct_ext(cd.credit,'SUPPOL',l_nfo_cvg(i).cv_face_amt, l_trxn_cd);

              END IF;
             -- IF nfo.get(pi_asof_dt)(i).cv_pua > 0 THEN
              IF l_nfo_cvg(i).cv_pua > 0 THEN
              --   WRK.gen_acct_ext(cd.debit, 'MATPUA',nfo.get(pi_asof_dt)(i).cv_pua, l_trxn_cd);
              --   WRK.gen_acct_ext(cd.credit,'SUPPOL', nfo.get(pi_asof_dt)(i).cv_pua, l_trxn_cd);
                 WRK.gen_acct_ext(cd.debit, 'MATPUA',l_nfo_cvg(i).cv_pua, l_trxn_cd);
                 WRK.gen_acct_ext(cd.credit,'SUPPOL', l_nfo_cvg(i).cv_pua, l_trxn_cd);

              END IF;
              --IF nfo.get(pi_asof_dt)(i).matr_tb_cvg > 0 THEN
              --   WRK.gen_acct_ext(cd.debit, 'MATEXPTB',nfo.get(pi_asof_dt)(i).matr_tb_cvg, l_trxn_cd, NULL, ByReftoByValue.convert(wrk.curr_cvg(i).plan_code), ByReftoByValue.convert(wrk.curr_cvg(i).vers_num)); --PJ6/0086-20060420-DONGTRUONG
              --   WRK.gen_acct_ext(cd.credit,'SUPPOL', nfo.get(pi_asof_dt)(i).matr_tb_cvg, l_trxn_cd, NULL, ByReftoByValue.convert(wrk.curr_cvg(i).plan_code), ByReftoByValue.convert(wrk.curr_cvg(i).vers_num));        --PJ6/0086-20060420-DONGTRUONG
              IF l_nfo_cvg(i).matr_tb_cvg > 0 THEN
                 WRK.gen_acct_ext(cd.debit, 'MATEXPTB',l_nfo_cvg(i).matr_tb_cvg, l_trxn_cd, NULL, ByReftoByValue.convert(wrk.curr_cvg(i).plan_code), ByReftoByValue.convert(wrk.curr_cvg(i).vers_num)); --PJ6/0086-20060420-DONGTRUONG
                 WRK.gen_acct_ext(cd.credit,'SUPPOL', l_nfo_cvg(i).matr_tb_cvg, l_trxn_cd, NULL, ByReftoByValue.convert(wrk.curr_cvg(i).plan_code), ByReftoByValue.convert(wrk.curr_cvg(i).vers_num));        --PJ6/0086-20060420-DONGTRUONG
              END IF;
              IF l_cvg_mat_amt >= 0 THEN
                 if NFO.calc_value(pi_asof_dt).loan_valu > 0 then
                    loan_repay.put(NFO.calc_value(pi_asof_dt).loan_valu
                           ,'SUPPOL'
                           ,pi_asof_dt
                           );
                 end if;
              ELSE
                 if NFO.calc_value(pi_asof_dt).loan_valu > 0 then
                    loan_repay.put(l_nfo_cvg(i).matr_tb_cvg
                           ,'SUPPOL'
                           ,pi_asof_dt
                           );
                 end if;
              END IF;
              if (WRK.CURR_POL.POL_SUSP - nvl(wrk.curr_pol.resv_dnr_amt,0)) > 0 then
                 l_payo_amt := WRK.CURR_POL.POL_SUSP - nvl(wrk.curr_pol.resv_dnr_amt,0);
                 WRK.Gen_DNR_Dtls(FCN.reasn_code
                            ,WRK.CURR_POL.POL_SUSP - nvl(WRK.CURR_POL.RESV_DNR_AMT,0)
                            ,pi_asof_dt);
              else
                 l_payo_amt := 0;
              end if;
              WRK.gen_trxn_hist(get_trxn_seq
                           ,S_MESSAGE.GET_MESSAGE(3023, ByReftoByValue.convert(wrk.curr_cvg(i).plan_code), ByReftoByValue.convert(wrk.curr_cvg(i).vers_num))  --PJ6/0086-20060420-DONGTRUONG
                           ,l_trxn_cd
                           ,l_payo_amt
                           ,null
                           ,pi_asof_dt
                           ,NULL ,'N'                            --CAS001135
                           );

--           END IF;
        END IF;
     END LOOP;
    -->>PJ6/0086-20060420-DONGTRUONG
  end;
--<<  SG-DEV2000-32-A
-- << FIP-CH22-03
--
-- Fund Reallocation
--
--<<MAT20060327
  PROCEDURE MAT_PROCESS_VN(pi_asof_dt in DATE
                          ,pi_pre_avy_ind  in varchar2  default 'N'  --EN9/0497
                          ) IS
    l_curr_avy_dt            TPOLICYS.LAST_AVY_DT%TYPE;
    l_pol_mat_amt            NUMBER := 0;
    l_cvg_mat_amt            NUMBER := 0;
    l_pol_expire             VARCHAR2(1) := 'Y';
    l_cvg_expire             VARCHAR2(1) := 'Y';
    l_payo_amt               NUMBER;
    l_mat_itm_valu           NUMBER;
    l_dr_acct_mne_cd         tmat_process_rules.dr_acct_mne_cd%type;
    l_cr_acct_mne_cd         tmat_process_rules.cr_acct_mne_cd%type;
    l_acct_mne_cd            tmat_process_rules.cr_acct_mne_cd%type;
    l_pd_up_to_dt            date;
   --<<MD10/0197
    l_pd_to_dt_old           date;
    l_last_pd_to_dt_old      date;
    l_os_prem                NUMBER := 0;
    l_r_trmn_dtl             ttermination_details%rowtype;
   -->>MD10/0197
   l_payo_typ TDNR_DETAILS.PAYO_TYPE%TYPE; --APP_160344
    type r_mat_rules is record ( dr_acct_mne_cd tmat_process_rules.dr_acct_mne_cd%type
                                ,cr_acct_mne_cd tmat_process_rules.cr_acct_mne_cd%type
                                ,xtra_prces tmat_process_rules.xtra_prces%type
                                ,mat_itm_valu TCOVERAGES.FACE_AMT%TYPE
                               );
    type t_mat_rules is TABLE OF r_mat_rules index by binary_integer ;
    l_mat_rules              t_mat_rules;
    l_cnt                    integer := 0;
    l_gen_acct               boolean; --PA005-080325

    cursor c_mat_rule(pi_plan_code varchar2, pi_vers_num varchar2) is
      select * from tmat_process_rules
      where pi_plan_code like replace(plan_code,'*','%')
        and pi_vers_num like replace(vers_num,'*','%')
      order by seq_num;

    FUNCTION eval(pi_value_expr varchar2) return number is
      l_exe_str varchar2(1000) := '';
      l_eval_rslt number := 0;
      l_cursor_hld integer ;
      l_execute_rslt integer ;
    BEGIN
      l_eval_rslt := 0 ;
      l_exe_str := 'declare l_num_rslt number := 0 ; begin l_num_rslt := ' || pi_value_expr;
      l_exe_str := l_exe_str ||'; :l_rslt := l_num_rslt; end;';
      l_cursor_hld := dbms_sql.open_cursor ;
      dbms_sql.parse(l_cursor_hld, l_exe_str, 2) ;
      dbms_sql.bind_variable(l_cursor_hld, ':l_rslt', l_eval_rslt) ;
      l_execute_rslt := dbms_sql.execute(l_cursor_hld) ;
      dbms_sql.variable_value(l_cursor_hld, ':l_rslt', l_eval_rslt) ;
      dbms_sql.close_cursor(l_cursor_hld) ;

      return l_eval_rslt;
    EXCEPTION
      when others then return l_eval_rslt;
    END;

    PROCEDURE run_proc(pi_proc varchar2) is
      l_exe_str varchar2(1000) := '';
      l_cursor_hld integer ;
      l_execute_rslt integer ;
    BEGIN
      l_exe_str := 'begin ' || pi_proc || '; end;';
      l_cursor_hld := dbms_sql.open_cursor ;
      dbms_sql.parse(l_cursor_hld, l_exe_str, DBMS_SQL.V7) ;
      l_execute_rslt := dbms_sql.execute(l_cursor_hld) ;
      dbms_sql.close_cursor(l_cursor_hld) ;
    END;

    FUNCTION get_face_amt(pi_pol_num varchar2,pi_type varchar2) RETURN number IS
      l_face_amt number := 0;
    BEGIN
      for i in wrk.curr_cvg.first..wrk.curr_cvg.last loop
        if wrk.curr_cvg(i).pol_num = pi_pol_num then
          if is_stat_in_force(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd))='Y' then --PJ6/0086-20060420-DONGTRUONG
            if pi_type='BASE' and wrk.curr_cvg(i).cvg_typ='B' and wrk.curr_cvg(i).cvg_reasn='O' then
              l_face_amt := l_face_amt + wrk.curr_cvg(i).face_amt;
            elsif pi_type='IPO' and is_cvg_ipo(wrk.curr_cvg(i).cvg_typ,wrk.curr_cvg(i).cvg_reasn)='Y' then
              l_face_amt := l_face_amt + wrk.curr_cvg(i).face_amt;
            end if;
          end if;
        end if;
      end loop;
      return l_face_amt;
    END;

    FUNCTION get_dscnt_prem(pi_pol_num varchar2,pi_type varchar2) RETURN number IS
      l_dscnt_prem number := 0;
    BEGIN
      if pi_type = 'POL' then
        l_dscnt_prem := wrk.curr_pol.dscnt_prem;
      else
        for i in wrk.curr_cvg.first..wrk.curr_cvg.last loop
          if wrk.curr_cvg(i).pol_num = pi_pol_num then
            if is_stat_in_force(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd))='Y' then --PJ6/0086-20060420-DONGTRUONG
              if pi_type='BASE' and wrk.curr_cvg(i).cvg_typ='B' and wrk.curr_cvg(i).cvg_reasn='O' then
                l_dscnt_prem := l_dscnt_prem + wrk.curr_cvg(i).dscnt_prem;
              elsif pi_type='IPO' and is_cvg_ipo(wrk.curr_cvg(i).cvg_typ,wrk.curr_cvg(i).cvg_reasn)='Y' then
                l_dscnt_prem := l_dscnt_prem + wrk.curr_cvg(i).dscnt_prem;
              end if;
            end if;
          end if;
        end loop;
      end if;
      return l_dscnt_prem;
    END;

    FUNCTION get_mode_prem(pi_pol_num varchar2,pi_type varchar2) RETURN number IS
      l_mode_prem number := 0;
    BEGIN
      if pi_type = 'POL' then
        l_mode_prem := wrk.curr_pol.mode_prem;
      else
        for i in wrk.curr_cvg.first..wrk.curr_cvg.last loop
          if wrk.curr_cvg(i).pol_num = pi_pol_num then
            if is_stat_in_force(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd))='Y' then --PJ6/0086-20060420-DONGTRUONG
              if pi_type='BASE' and wrk.curr_cvg(i).cvg_typ='B' and wrk.curr_cvg(i).cvg_reasn='O' then
                l_mode_prem := l_mode_prem + wrk.curr_cvg(i).cvg_prem;
              elsif pi_type='IPO' and is_cvg_ipo(wrk.curr_cvg(i).cvg_typ,wrk.curr_cvg(i).cvg_reasn)='Y' then
                l_mode_prem := l_mode_prem + wrk.curr_cvg(i).cvg_prem;
              end if;
            end if;
          end if;
        end loop;
      end if;
      return l_mode_prem;
    END;

  BEGIN
    fcn.set_return(0);
    --PR11/0836 l_curr_avy_dt := add_date(WRK.CURR_POL.LAST_AVY_DT,'YEARS',1);
    l_curr_avy_dt := advance_PTD(WRK.CURR_POL.LAST_AVY_DT, WRK.CURR_POL.POL_EFF_DT, 12); --PR11/0836
    for i in 1 .. WRK.CURR_CVG.COUNT loop
---------------------
-- For expired policy
---------------------
       IF (is_stat_grp_prem_pay(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd)) = 'Y'  OR  --PJ6/0086-20060420-DONGTRUONG
           is_stat_grp_pending(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd)) = 'Y' OR  --PJ6/0086-20060420-DONGTRUONG
           is_stat_grp_paid_up(ByReftoByValue.convert(wrk.curr_cvg(i).cvg_stat_cd)) = 'Y')  --PJ6/0086-20060420-DONGTRUONG
           AND wrk.curr_cvg(i).xpry_dt > l_curr_avy_dt THEN
              l_pol_expire := 'N';
              EXIT;
       END IF;
    end loop;
    IF l_pol_expire = 'Y' THEN  -- all coverages are expired
      IF WRK.CURR_POL.DIV_UPTO_DT < l_curr_avy_dt THEN
        if WRK.CURR_POL.POL_STAT_CD <> CD.stat_rpu then --TUYTHOI080215
        div_apply (l_curr_avy_dt);
        end if; --TUYTHOI080215
        inc_apply (l_curr_avy_dt);
        --MD10/0197 nfo.recalc(pi_asof_dt);
      END IF;
      l_cvg_expire := 'N';
	    l_pol_mat_amt := 0;
      --EN9/0497 IF FCN.reasn_code = '901' THEN -- AVY Process
      IF pi_pre_avy_ind = 'N' THEN  --EN9/0497
        --<<MD10/0197
        l_pd_up_to_dt := adv_years(ByReftoByValue.convert(wrk.curr_cvg(wrk.Srch_Base_Cvg).cvg_eff_dt),ByReftoByValue.convert(wrk.curr_cvg(wrk.Srch_Base_Cvg).prem_dur));
        l_pd_to_dt_old := wrk.CURR_POL.PD_TO_DT;
        l_last_pd_to_dt_old := wrk.CURR_POL.LAST_PD_TO_DT;
        if wrk.curr_pol.pd_to_dt = wrk.curr_pol.last_pd_to_dt then
          wrk.curr_pol.last_pd_to_dt := l_pd_up_to_dt;
        end if;
        wrk.curr_pol.pd_to_dt := l_pd_up_to_dt;
        nfo.recalc(pi_asof_dt);
        wrk.CURR_POL.PD_TO_DT := l_pd_to_dt_old;
        wrk.CURR_POL.LAST_PD_TO_DT := l_last_pd_to_dt_old;

        l_r_trmn_dtl.pol_num        := WRK.CURR_POL.POL_NUM;
        l_r_trmn_dtl.trmn_bnft_cvg  := nfo.calc_value(pi_asof_dt).cv_pol - nfo.calc_value(pi_asof_dt).cv_pua;
        l_r_trmn_dtl.trmn_bnft_pua  := nfo.calc_value(pi_asof_dt).cv_pua;
        l_r_trmn_dtl.trmn_pol_susp  := WRK.CURR_POL.POL_SUSP;
        l_r_trmn_dtl.trmn_pmt_susp  := WRK.CURR_POL.PMT_SUSP;
        l_r_trmn_dtl.trmn_acum_bal  := WRK.CURR_AVY.ACUM_BAL;
        l_r_trmn_dtl.trmn_acum_int  := NFO.calc_value(pi_asof_dt).div_valu - WRK.CURR_AVY.ACUM_BAL;
        l_r_trmn_dtl.trmn_loan_bal  := WRK.CURR_LOAN.LOAN_BAL;
        l_r_trmn_dtl.trmn_loan_int  := NFO.calc_value(pi_asof_dt).loan_valu - WRK.CURR_LOAN.LOAN_BAL;
        l_r_trmn_dtl.trmn_endow_bal := wrk.curr_avy.ENDOW_BAL;
        l_r_trmn_dtl.trmn_endow_int := NFO.calc_value(pi_asof_dt).endow_valu - WRK.CURR_AVY.ENDOW_BAL;
        l_r_trmn_dtl.trmn_lsp_bal   := WRK.CURR_AVY.LUMP_SUM_BAL;
        l_r_trmn_dtl.trmn_lsp_int   := NFO.calc_value(pi_asof_dt).lump_sum_valu - WRK.CURR_AVY.LUMP_SUM_BAL;
        l_r_trmn_dtl.trmn_rfnd_amt  := NFO.calc_value(pi_asof_dt).rfnd_prem;
        l_r_trmn_dtl.payo_ind       := 'Y';
        l_r_trmn_dtl.tb_amt         := nfo.calc_value(pi_asof_dt).matr_tb_pol;
        l_r_trmn_dtl.trmn_inc_bal   := WRK.CURR_AVY.INC_BAL;
        l_r_trmn_dtl.trmn_inc_int   := NFO.calc_value(pi_asof_dt).inc_valu - WRK.CURR_AVY.INC_BAL;
        l_r_trmn_dtl.trmn_gv        := NFO.calc_value(pi_asof_dt).gv;
        -->>MD10/0197
        /*--MD10/0197
	        s_trmn_details(WRK.CURR_POL.POL_NUM
	                        ,nfo.calc_value(pi_asof_dt).cv_pol - nfo.calc_value(pi_asof_dt).cv_pua
	                        ,nfo.calc_value(pi_asof_dt).cv_pua
	                        ,WRK.CURR_POL.POL_SUSP
	                        ,WRK.CURR_POL.PMT_SUSP
	                        ,WRK.CURR_AVY.ACUM_BAL
	                        ,NFO.calc_value(pi_asof_dt).div_valu   - WRK.CURR_AVY.ACUM_BAL
	                        ,WRK.CURR_LOAN.LOAN_BAL
	                        ,NFO.calc_value(pi_asof_dt).loan_valu   - WRK.CURR_LOAN.LOAN_BAL
	                        ,wrk.curr_avy.ENDOW_BAL
	                        ,NFO.calc_value(pi_asof_dt).endow_valu   - WRK.CURR_AVY.ENDOW_BAL
	                        ,WRK.CURR_AVY.LUMP_SUM_BAL
	                        ,NFO.calc_value(pi_asof_dt).lump_sum_valu - WRK.CURR_AVY.LUMP_SUM_BAL
	                        ,l_pol_mat_amt
                          ,0
	                        ,'Y'
	                        ,nfo.calc_value(pi_asof_dt).matr_tb_pol
	                        ,WRK.CURR_AVY.INC_BAL
	                        ,NFO.calc_value(pi_asof_dt).inc_valu   - WRK.CURR_AVY.INC_BAL
	                        );
        */--MD10/0197
        -- Prepare data
        MAT_VALUES.CASH_VALUE        := NFO.CALC_VALUE(pi_asof_dt).CV_POL;
        MAT_VALUES.POL_VALUE         := NFO.CALC_VALUE(pi_asof_dt).PV_POL;
        MAT_VALUES.PUA_VALUE         := NFO.CALC_VALUE(pi_asof_dt).CV_PUA;
        MAT_VALUES.UNEARN_PREM       := NFO.CALC_VALUE(pi_asof_dt).UNEARN_PREM;
        MAT_VALUES.SURR_VALU         := NFO.CALC_VALUE(pi_asof_dt).SURR_VALU;
        MAT_VALUES.LAPSE_VALU        := NFO.CALC_VALUE(pi_asof_dt).LAPSE_VALU;
        MAT_VALUES.RSDUE_VALU        := NFO.CALC_VALUE(pi_asof_dt).RSDUE_VALU;
        MAT_VALUES.DIV_BAL           := WRK.CURR_AVY.ACUM_BAL;
        MAT_VALUES.INC_BAL           := NFO.CALC_VALUE(pi_asof_dt).INC_VALU;
        MAT_VALUES.ENDOW_BAL         := NFO.CALC_VALUE(pi_asof_dt).ENDOW_VALU;
        MAT_VALUES.ANTY_BAL          := NFO.CALC_VALUE(pi_asof_dt).ANTY_VALU;
        MAT_VALUES.LUMP_SUM_BAL      := NFO.CALC_VALUE(pi_asof_dt).LUMP_SUM_VALU;
        MAT_VALUES.LOAN_BAL          := NFO.CALC_VALUE(pi_asof_dt).LOAN_VALU;
        MAT_VALUES.MAX_LOAN          := NFO.CALC_VALUE(pi_asof_dt).MAX_LOAN;
        MAT_VALUES.MAX_LOAN_APL      := NFO.CALC_VALUE(pi_asof_dt).MAX_LOAN_APL;
        MAT_VALUES.RFND_RV           := NFO.CALC_VALUE(pi_asof_dt).RFND_RV;
        MAT_VALUES.RFND_PREM         := NFO.CALC_VALUE(pi_asof_dt).RFND_PREM;
        MAT_VALUES.SURR_TB_POL       := NFO.CALC_VALUE(pi_asof_dt).SURR_TB_POL;
        MAT_VALUES.DTH_TB_POL        := NFO.CALC_VALUE(pi_asof_dt).DTH_TB_POL;
        MAT_VALUES.MATR_TB_POL       := NFO.CALC_VALUE(pi_asof_dt).MATR_TB_POL;
        MAT_VALUES.FUND_VALU         := NFO.CALC_VALUE(pi_asof_dt).FUND_VALU;
        MAT_VALUES.CVG_BASE_IDX      := wrk.Srch_base_cvg;
        if wrk.curr_pol.pol_stat_cd = CD.STAT_PREM_PAY then
          --MD10/0197 l_pd_up_to_dt              := adv_years(ByReftoByValue.convert(wrk.curr_cvg(MAT_VALUES.CVG_BASE_IDX).cvg_eff_dt),ByReftoByValue.convert(wrk.curr_cvg(MAT_VALUES.CVG_BASE_IDX).prem_dur)); --PJ6/0086-20060420-DONGTRUONG
          if l_pd_up_to_dt > wrk.curr_pol.pd_to_dt then
            MAT_VALUES.OS_PREM         := wrk.curr_pol.dscnt_prem*round(months_between(l_pd_up_to_dt,wrk.curr_pol.pd_to_dt),0)/to_number(wrk.curr_pol.pmt_mode);
          else
            MAT_VALUES.OS_PREM         := 0;
          end if;
        else
          MAT_VALUES.OS_PREM         := 0;
        end if;
        MAT_VALUES.FACE_AMT_BASE     := wrk.curr_cvg(MAT_VALUES.CVG_BASE_IDX).face_amt;
        MAT_VALUES.FACE_AMT_IPO      := get_face_amt(wrk.curr_pol.pol_num,'IPO');
        MAT_VALUES.MODE_PREM_POL     := get_mode_prem(wrk.curr_pol.pol_num,'POL');
        MAT_VALUES.MODE_PREM_BASE    := wrk.curr_cvg(MAT_VALUES.CVG_BASE_IDX).cvg_prem;
        MAT_VALUES.MODE_PREM_IPO     := get_mode_prem(wrk.curr_pol.pol_num,'IPO');
        MAT_VALUES.DSCNT_PREM_POL    := get_dscnt_prem(wrk.curr_pol.pol_num,'POL');
        MAT_VALUES.DSCNT_PREM_BASE   := wrk.curr_cvg(MAT_VALUES.CVG_BASE_IDX).dscnt_prem;
        MAT_VALUES.DSCNT_PREM_IPO    := get_dscnt_prem(wrk.curr_pol.pol_num,'IPO');
        MAT_VALUES.AVY_DT            := l_curr_avy_dt;
        MAT_VALUES.GV                :=  NFO.CALC_VALUE(pi_asof_dt).GV;--MD10/0197
        -- Process

        for c in c_mat_rule(wrk.curr_pol.plan_code_base,wrk.curr_pol.vers_num_base) loop
          if c.valu_expr is not null then
            l_mat_itm_valu := eval(c.valu_expr);
            l_gen_acct     := TRUE; --PA005-080325
            if l_mat_itm_valu<>0 then
              -- Generate accounting
              if c.dr_acct_mne_cd is not null and c.cr_acct_mne_cd is not null then
                l_dr_acct_mne_cd := replace(c.dr_acct_mne_cd,' ','')||',';
                l_cr_acct_mne_cd := replace(c.cr_acct_mne_cd,' ','')||',';
                loop
                  l_acct_mne_cd := substr(l_dr_acct_mne_cd,1,instr(l_dr_acct_mne_cd,',')-1);
                  --<<PA005-080325
                  if l_acct_mne_cd = 'SUPPOL' and WRK.CURR_POL.POL_SUSP < l_mat_itm_valu then
                    l_gen_acct := FALSE; --PA005-080325
                    exit;
                  else
                  -->>PA005-080325
	                  if l_acct_mne_cd is not null then
	                    WRK.gen_acct_ext(cd.debit, l_acct_mne_cd, l_mat_itm_valu, l_trxn_cd);
	                  end if;

	                  l_acct_mne_cd := substr(l_cr_acct_mne_cd,1,instr(l_cr_acct_mne_cd,',')-1);
	                  if l_acct_mne_cd is not null then
	                    WRK.gen_acct_ext(cd.credit, l_acct_mne_cd, l_mat_itm_valu, l_trxn_cd);
	                  end if;

	                  l_dr_acct_mne_cd := substr(l_dr_acct_mne_cd,instr(l_dr_acct_mne_cd,',')+1);
	                  l_cr_acct_mne_cd := substr(l_cr_acct_mne_cd,instr(l_cr_acct_mne_cd,',')+1);
	                  if l_dr_acct_mne_cd is null or l_cr_acct_mne_cd is null then
	                    exit;
	                  end if;
                  end if; --PA005-080325
                end loop;
              end if;
              -- Call procedure
              if c.xtra_prces is not null
                and l_gen_acct --PA005-080325
              then
                run_proc(c.xtra_prces);
              end if;
              --<<IT6/0173
              if c.trxn_desc is not null then
                WRK.gen_trxn_hist(get_trxn_seq
                           ,c.trxn_desc
                           ,l_trxn_cd
                           ,l_mat_itm_valu
                           ,pi_asof_dt
                           ,pi_asof_dt
                           ,NULL ,'N'
                           );
              end if;
              -->>IT6/0173
              if c.sum_ind = 'Y' then
                if c.sign='+' then
                  l_pol_mat_amt := l_pol_mat_amt + l_mat_itm_valu;
                else
                  l_pol_mat_amt := l_pol_mat_amt - l_mat_itm_valu;
                end if;
              end if;
            end if;
          end if;
        end loop;

        --<APP_160344
        transfer_matu_amt_to_new_pol(wrk.curr_pol.pol_num);
        -->APP_160344
        if (WRK.CURR_POL.POL_SUSP - nvl(wrk.curr_pol.resv_dnr_amt,0)) > 0 then
           l_payo_amt := WRK.CURR_POL.POL_SUSP - nvl(wrk.curr_pol.resv_dnr_amt,0);
		   --<<APP_160344
			if WRK.CURR_POL.plan_code_base='MI007' then
				l_payo_typ :='PO';
			else
				l_payo_typ := null;
			end if;
		    -->>APP_160344
           WRK.Gen_DNR_Dtls('926'
                           ,l_payo_amt
                           ,pi_asof_dt
						   ,null		--APP_160344
						   ,l_payo_typ	--APP_160344
						   );
        else
           l_payo_amt := 0;
        end if;
      --<<MD10/0197
        l_r_trmn_dtl.trmn_payo_amt  := l_payo_amt;
        s_trmn_details(l_r_trmn_dtl.pol_num     ,
                        l_r_trmn_dtl.trmn_bnft_cvg  ,
                        l_r_trmn_dtl.trmn_bnft_pua  ,
                        l_r_trmn_dtl.trmn_pol_susp  ,
                        l_r_trmn_dtl.trmn_pmt_susp  ,
                        l_r_trmn_dtl.trmn_acum_bal  ,
                        l_r_trmn_dtl.trmn_acum_int  ,
                        l_r_trmn_dtl.trmn_loan_bal  ,
                        l_r_trmn_dtl.trmn_loan_int  ,
                        l_r_trmn_dtl.trmn_endow_bal ,
                        l_r_trmn_dtl.trmn_endow_int ,
                        l_r_trmn_dtl.trmn_lsp_bal   ,
                        l_r_trmn_dtl.trmn_lsp_int   ,
                        l_r_trmn_dtl.trmn_payo_amt  ,
                        l_r_trmn_dtl.trmn_rfnd_amt  ,
                        l_r_trmn_dtl.payo_ind  ,
                        l_r_trmn_dtl.tb_amt    ,
                        l_r_trmn_dtl.trmn_inc_bal   ,
                        l_r_trmn_dtl.trmn_inc_int   ,
                        l_r_trmn_dtl.trmn_gv
                        );
        -->>MD10/0197
        WRK.CURR_AVY.PREV_YR_INC_BAL := 0;
        if MAT_VALUES.OS_PREM > 0
          and l_pol_mat_amt >= 0 --PA005-080325
        then
          --<< VN-RPUL2-NGHIANGUYEN001
          if wrk.curr_pol.pd_to_dt = wrk.curr_pol.last_pd_to_dt then
            wrk.curr_pol.last_pd_to_dt := l_pd_up_to_dt;
          end if;
          -->> VN-RPUL2-NGHIANGUYEN001
          wrk.curr_pol.pd_to_dt := l_pd_up_to_dt;
        end if;

        WRK.gen_trxn_hist(get_trxn_seq
                        ,S_MESSAGE.GET_MESSAGE(36524)
                        ,l_trxn_cd
                        ,l_payo_amt
                        ,null
                        ,pi_asof_dt
                        ,NULL ,'N'
                        );
      END IF;
    END IF;
  EXCEPTION
    when others then
      WRK.gen_query_reg(substr(sqlcode||'-'||sqlerrm,1,100),'MAT');
  END;
-->>MAT20060327
  procedure FUND_REALLOC(pi_cur_avy_dt in date)
is
    l_dur               number(2);
    l_idx               number(3);
    l_exist             varchar2(1) := 'N' ;

  cursor c_tplan_fund_mappings(pi_plan_code in varchar2, pi_vers_num in varchar2, pi_dur
                               in number, pi_date in date) is
    select a.fnd_id, b.fnd_vers, a.to_dur, a.alloc_pct, b.eff_fr_dt, b.eff_to_dt
     from  tplan_fund_mappings a, tfunds b
     where a.plan_code  = pi_plan_code
     and   a.vers_num   = pi_vers_num
     and   pi_dur between a.fr_dur and a.to_dur
     and   b.fnd_id       = a.fnd_id
     and   a.fnd_avail_cd is null  --VNUVL-PHIB-20060731
     and   pi_date between b.eff_fr_dt and nvl(b.eff_to_dt,pi_date)
     and   b.eff_fr_dt         = ( select max(c.eff_fr_dt)
                                from  tfunds c
                                where c.fnd_id = a.fnd_id
                                and   pi_date between c.eff_fr_dt
                                                and     nvl(c.eff_to_dt,pi_date) ) ;
BEGIN

      l_exist := 'N' ;
      for i in 1 .. WRK.CURR_FND_ALLOC.count loop
          if WRK.CURR_FND_ALLOC(i).CLI_NUM = wrk.curr_cvg(WRK.SRCH_BASE_CVG).cli_num and
             WRK.CURR_FND_ALLOC(i).PLAN_CODE = wrk.curr_cvg(WRK.SRCH_BASE_CVG).plan_code and
         WRK.CURR_FND_ALLOC(i).VERS_NUM = wrk.curr_cvg(WRK.SRCH_BASE_CVG).vers_num and
         WRK.CURR_FND_ALLOC(i).CVG_EFF_DT = wrk.curr_cvg(WRK.SRCH_BASE_CVG).cvg_eff_dt and
             WRK.CURR_FND_ALLOC(i).ALLOC_EFF_DT = pi_cur_avy_dt and
             WRK.CURR_FND_ALLOC(i).ALLOC_STAT_CD = 'A' and
             WRK.CURR_FND_ALLOC(i).ALLOC_TYP = 'B' then
             l_exist := 'Y' ;
          end if;
      end loop;

     if l_exist <> 'Y' then
-- HKUVL-20020221      l_dur := investment.calc_dur(wrk.curr_cvg(WRK.SRCH_BASE_CVG).cvg_eff_dt, pi_cur_avy_dt) ;
--<< HKUVL-20020221
      l_dur := ceil(floor(months_between(pi_cur_avy_dt,
                                         wrk.curr_cvg(WRK.SRCH_BASE_CVG).cvg_eff_dt)+1) / 12);
      if l_dur < 0
      then
         l_dur := 0;
      end if;
-->> HKUVL-20020221
      for c1 in c_tplan_fund_mappings(wrk.curr_cvg(WRK.SRCH_BASE_CVG).plan_code,
                                     wrk.curr_cvg(WRK.SRCH_BASE_CVG).vers_num,
                                     l_dur,
                                     pi_cur_avy_dt)   loop
          if c1.alloc_pct <> 0 then
             l_idx := WRK.CURR_FND_ALLOC.count + 1 ;
             WRK.CURR_FND_ALLOC(l_idx).POL_NUM       := WRK.CURR_POL.POL_NUM ;
         WRK.CURR_FND_ALLOC(l_idx).CLI_NUM       := wrk.curr_cvg(WRK.SRCH_BASE_CVG).cli_num ;
         WRK.CURR_FND_ALLOC(l_idx).PLAN_CODE     := wrk.curr_cvg(WRK.SRCH_BASE_CVG).plan_code ;
           WRK.CURR_FND_ALLOC(l_idx).VERS_NUM      := wrk.curr_cvg(WRK.SRCH_BASE_CVG).vers_num ;
         WRK.CURR_FND_ALLOC(l_idx).CVG_EFF_DT    := wrk.curr_cvg(WRK.SRCH_BASE_CVG).cvg_eff_dt ;
         WRK.CURR_FND_ALLOC(l_idx).FND_ID        := c1.fnd_id ;
         WRK.CURR_FND_ALLOC(l_idx).FND_VERS      := c1.fnd_vers ;
         WRK.CURR_FND_ALLOC(l_idx).ALLOC_EFF_DT  := pi_cur_avy_dt ;
         WRK.CURR_FND_ALLOC(l_idx).ALLOC_STAT_CD := 'A' ;
         WRK.CURR_FND_ALLOC(l_idx).ALLOC_PCT     := c1.alloc_pct ;
         WRK.CURR_FND_ALLOC(l_idx).ALLOC_TYP     := 'B' ;
          end if;
      end loop;
     end if;
END;
-- >> FIP-CH22-03
--<<VN/SH-Align (2005-001)
/*----------------------- Q2CE09 -PL/PP Bonus at 2th AVY ----------------------*/
procedure Gen_PLPP_Bonus is
  c_PLPP_bonus_reasn_cd     varchar2(3) := '925';
  c_cash_bonus_bnft_typ     varchar2(6) :='CSHBNS';

  cursor c_desc (pi_fld_nm in varchar2, pi_fld_valu in varchar2) is
    select fld_valu_desc_eng
      from tfield_values
     where fld_nm = pi_fld_nm
       and fld_valu = pi_fld_valu;
  l_cas_dt                  date;
  l_face_amt                number := 0;
  l_message                 varchar2(200);
  l_old_rsn_cd              TTRXN_HISTORIES.REASN_CODE%TYPE;
  l_cnt                     number(10);
begin
  fcn.set_return(0);
  l_cas_dt := get_cas_sys_dt();
  if WRK.CURR_POL.POL_STAT_CD in ('1','2') then
--<<VN/SH-Align (2005-NAM001)
    select count(*) into l_cnt
      from TFEMALE_BNFTS
     where pol_num = WRK.CURR_POL.POL_NUM
       and bnft_typ=c_cash_bonus_bnft_typ ;
    if l_cnt = 0 then
-->>VN/SH-Align (2005-NAM001)
      l_old_rsn_cd := fcn.reasn_code;
      fcn.set_reasn_code(c_PLPP_bonus_reasn_cd);
      l_face_amt := 150;
      WRK.gen_acct_ext(cd.debit,'CCPOTH',l_face_amt,l_trxn_cd,l_cas_dt);
      WRK.gen_acct_ext(cd.credit,'SUPPOL',l_face_amt,l_trxn_cd,l_cas_dt);
      open c_desc('REASN_CODE',c_PLPP_bonus_reasn_cd);
      fetch c_desc into l_message;
      if c_desc%NOTFOUND then
        l_message := 'Cash bonus for PL/PP at 2nd AVY';
      end if;
      close c_desc;
      WRK.gen_trxn_hist(get_trxn_seq
                       ,l_message
                       ,l_trxn_cd
                       ,l_face_amt
                       ,null
                       ,l_cas_dt
                       ,NULL ,'N'             --CAS001135
                       );
        -- Gen DNR
      WRK.gen_dnr_dtls(c_PLPP_bonus_reasn_cd,l_face_amt,l_cas_dt);

      --Gen FEMALE_BNFT (Cash Bonus)
-->>VN/SH-Align (2005-NAM001)
      WRK.Gen_fml_bnft(l_cas_dt,
                       WRK.CURR_POL.POL_NUM,
                       WRK.CURR_POL.POL_EFF_DT,
                       WRK.CURR_POL.PD_TO_DT,
                       c_cash_bonus_bnft_typ,
                       l_face_amt,
                       user,
                       null ,
                       l_old_rsn_cd);
-->>VN/SH-Align (2005-NAM001)
      fcn.set_reasn_code(l_old_rsn_cd);
    end if;
  end if;
end;
/*----------------------- Q2CE09 -PL/PP Bonus at 2th AVY ----------------------*/

/*--------------------------------VN-New product Premier/Lady -----------------*/
procedure Lady_Bonus(pi_pol_year in NUMBER,pi_face_amt in number) is
    c_no_claim_bonus_reasn_cd    varchar2(3) := '910';
    c_female_program_reasn_cd    varchar2(3) := '911';
    c_female_program_bnft_typ    varchar2(6) :='FEMCAR';
    c_no_claim_bonus_bnft_typ    varchar2(6) :='CLMBNS';
    l_cas_dt                     date;
    l_last_face_amt              number;
    l_message                    varchar2(200);
    l_old_rsn_cd                 TTRXN_HISTORIES.REASN_CODE%TYPE;
    l_cnt                        number;
    cursor c_desc (pi_fld_nm in varchar2, pi_fld_valu in varchar2) is
      select fld_valu_desc_eng
      from tfield_values
      where fld_nm = pi_fld_nm
      and fld_valu = pi_fld_valu;
  begin
    fcn.set_return(0);
    l_cas_dt := get_cas_sys_dt();
    -- No Claim Bonus
    l_cnt := 0;
    if pi_pol_year=10  then
      --IT7/0124 if childbirth_claim(WRK.CURR_POL.POL_NUM)='N' and WRK.CURR_POL.POL_STAT_CD = cd.STAT_PREM_PAY then --Policys status is inforce and not RPU
      --<< IT7/0124
      if childbirth_claim(WRK.CURR_POL.POL_NUM)='N'
      and is_stat_in_force(WRK.CURR_POL.POL_STAT_CD) = 'Y'
      and WRK.CURR_POL.POL_STAT_CD<>cd.STAT_RPU
      then
      -->> IT7/0124
--<<VN/SH-Align (2005-NAM001)
        select count(*) into l_cnt
          from TFEMALE_BNFTS
         where pol_num = WRK.CURR_POL.POL_NUM
           and pol_year = pi_pol_year
           and bnft_typ=c_no_claim_bonus_bnft_typ;
-->>VN/SH-Align (2005-NAM001)
        if l_cnt = 0 then
        l_old_rsn_cd := fcn.reasn_code;
          fcn.set_reasn_code(c_no_claim_bonus_reasn_cd);
          l_last_face_amt := round(5*pi_face_amt/100,0);   -- 5% of FA
          -- Gen Account Extract
          --VNUVL-NGHIANT20061003 WRK.gen_acct_ext(cd.debit, 'CLMFEM',l_last_face_amt,l_trxn_cd,l_cas_dt);
          WRK.gen_acct_ext(cd.debit, 'CCPOTH',l_last_face_amt,l_trxn_cd,l_cas_dt); --VNUVL-NGHIANT20061003
          WRK.gen_acct_ext(cd.credit,'SUPPOL',l_last_face_amt,l_trxn_cd,l_cas_dt);
          -- Gen Transaction History
          open c_desc('REASN_CODE',c_no_claim_bonus_reasn_cd);
          fetch c_desc into l_message;
          if c_desc%NOTFOUND then
            l_message := 'No Claim Bonus';
          end if;
          close c_desc;
          WRK.gen_trxn_hist(get_trxn_seq
                           ,l_message
                           ,l_trxn_cd
                           ,l_last_face_amt
                           ,null
                           ,l_cas_dt
                           ,NULL ,'N'             --CAS001135
                           );
          -- Gen DNR
          WRK.gen_dnr_dtls(c_no_claim_bonus_reasn_cd,l_last_face_amt,l_cas_dt);
--<<VN/SH-Align (2005-NAM001)
          --Gen FEMALE_BNFT (No Claim Bonus)
          WRK.Gen_fml_bnft(l_cas_dt,
                           WRK.CURR_POL.POL_NUM,
                           WRK.CURR_POL.POL_EFF_DT,
                           WRK.CURR_POL.PD_TO_DT,
                           c_no_claim_bonus_bnft_typ,
                           l_last_face_amt,
                           user,
                           pi_pol_year ,
                           l_old_rsn_cd);
-->>VN/SH-Align (2005-NAM001)
          fcn.set_reasn_code(l_old_rsn_cd);
        end if;
      end if;
    end if;
    -- Female Caring Program
    l_cnt := 0;
    if pi_pol_year=3 or pi_pol_year=5 then
      -- IT7/0124 if WRK.CURR_POL.POL_STAT_CD =cd.STAT_PREM_PAY then  --if (policys status is inforce and not RPU) then
      --<< IT7/0124
      if is_stat_in_force(WRK.CURR_POL.POL_STAT_CD) = 'Y'
      and WRK.CURR_POL.POL_STAT_CD<>cd.STAT_RPU
      then
      -->> IT7/0124
--<<VN/SH-Align (2005-NAM001)
        select count(*) into l_cnt
          from TFEMALE_BNFTS
         where pol_num = WRK.CURR_POL.POL_NUM
           and pol_year = pi_pol_year
           and bnft_typ=c_female_program_bnft_typ;
-->>VN/SH-Align (2005-NAM001)
        if l_cnt = 0 then
        l_old_rsn_cd := fcn.reasn_code;
          fcn.set_reasn_code(c_female_program_reasn_cd);
          l_last_face_amt := round(1*pi_face_amt/100,0);  -- 1% of FA --14/09/2004
          -- Gen Account Extract
--MD6/0022  WRK.gen_acct_ext(cd.debit, 'CLMFEM',l_last_face_amt,l_trxn_cd,l_cas_dt);
          WRK.gen_acct_ext(cd.debit, 'CCPOTH',l_last_face_amt,l_trxn_cd,l_cas_dt);  --MD6/0022
          WRK.gen_acct_ext(cd.credit,'SUPPOL',l_last_face_amt,l_trxn_cd,l_cas_dt);
          -- Gen Transaction History
          open c_desc('REASN_CODE',c_female_program_reasn_cd);
          fetch c_desc into l_message;
          if c_desc%NOTFOUND then
            l_message := 'Female Caring Benefit at the end of ' || to_char(pi_pol_year) || 'th year';
          else
            l_message := replace(l_message,'%1',to_char(pi_pol_year));
          end if;
          close c_desc;
          WRK.gen_trxn_hist(get_trxn_seq
                           ,l_message
                           ,l_trxn_cd
                           ,l_last_face_amt
                           ,null
                           ,l_cas_dt
                           ,NULL ,'N'             --CAS001135
                           );
          -- Gen DNR
          WRK.gen_DNR_dtls(c_female_program_reasn_cd,l_last_face_amt,l_cas_dt);
--<<VN/SH-Align (2005-NAM001)
          --Gen FEMALE_BNFT (female caring program)
          WRK.Gen_fml_bnft(l_cas_dt,
                           WRK.CURR_POL.POL_NUM,
                           WRK.CURR_POL.POL_EFF_DT,
                           WRK.CURR_POL.PD_TO_DT,
                           c_female_program_bnft_typ,
                           l_last_face_amt,
                           user,
                           pi_pol_year ,
                           l_old_rsn_cd);
-->>VN/SH-Align (2005-NAM001)
          fcn.set_reasn_code(l_old_rsn_cd);
        end if;
      end if;
    end if;
  end;
  function ChildBirth_Claim(pi_pol_num in TPOLICYS.POL_NUM%TYPE) return VARCHAR2 is
    l_cnt number;
    l_childbirth_claim varchar2(1);
  begin
    fcn.set_return(0);
    select count(*) into l_cnt
      from TCLAIM_DETAILS
     where pol_num=pi_pol_num
       and clm_stat_code in ('A','P')
       and clm_code='09'; -- childbirth claim code
    if l_cnt > 0 then
      l_childbirth_claim:='Y';
    else
      l_childbirth_claim:='N';
    end if;
    return l_childbirth_claim;
  end;
/*--------------------------------VN-New product Premier/Lady -----------------*/

-->>VN/SH-Align (2005-001)
  --<<PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP
/*-------------------------------------------------------------------*/
  function  repay_loan_by_ccp(pi_endow_amt in number
                        ,pi_trxn_cd in varchar2
                        ,pi_asof_dt in date
                        )
  return number
  is
  l_rest_amt number:=pi_endow_amt;
  l_acc_amt number;
  l_repay_amt number;
  l_old_rsn_cd              TTRXN_HISTORIES.REASN_CODE%TYPE; --Thang Ho MD7/0230 31/08/2007
  begin
    /* --MD9/0524
    if (l_rest_amt + WRK.CURR_POL.PMT_SUSP) = 0 or l_cc_prem_ded = 'N' then
      return l_rest_amt;
    end if;
    if WRK.CURR_POL.PMT_SUSP >= WRK.CURR_LOAN.LOAN_BAL then
      goto LBL_REPAY_LOAN;
    end if;

    if (l_rest_amt + WRK.CURR_POL.PMT_SUSP) >= WRK.CURR_LOAN.LOAN_BAL then
      l_acc_amt:=WRK.CURR_LOAN.LOAN_BAL-WRK.CURR_POL.PMT_SUSP;
      l_repay_amt:=WRK.CURR_LOAN.LOAN_BAL;
      l_rest_amt:=l_rest_amt - (WRK.CURR_LOAN.LOAN_BAL-WRK.CURR_POL.PMT_SUSP);
    else
      l_acc_amt:=l_rest_amt;
      l_repay_amt:=l_rest_amt + WRK.CURR_POL.PMT_SUSP;
      l_rest_amt:=0;
    end if;
    */ --MD9/0524

    --<<MD9/0524
    if l_rest_amt = 0 or l_cc_prem_ded = 'N' then
      return l_rest_amt;
    end if;
    if l_rest_amt >= WRK.CURR_LOAN.LOAN_BAL then
      l_acc_amt   := WRK.CURR_LOAN.LOAN_BAL;
      l_repay_amt := WRK.CURR_LOAN.LOAN_BAL;
      l_rest_amt  := l_rest_amt - WRK.CURR_LOAN.LOAN_BAL;
    else
      l_acc_amt   := l_rest_amt;
      l_repay_amt := l_rest_amt;
      l_rest_amt  := 0;
    end if;
    -->>MD9/0524

    if nvl(wrk.curr_pol.endow_ctl, '2') in ('1', '3') then
        WRK.gen_acct_ext(cd.debit,'SUPPOL',l_acc_amt,pi_trxn_cd,pi_asof_dt);
        WRK.gen_acct_ext(cd.credit,'SUPPAY',l_acc_amt,pi_trxn_cd,pi_asof_dt);
    elsif nvl(wrk.curr_pol.endow_ctl, '2') ='2' then
        WRK.gen_acct_ext(cd.debit,'CCPPAYWD',l_acc_amt,l_trxn_cd,pi_asof_dt);
        --WRK.gen_acct_ext(cd.credit,'SUPPOL',l_acc_amt,l_trxn_cd,pi_asof_dt);
        --WRK.gen_acct_ext(cd.debit,'SUPPOL',l_acc_amt,l_trxn_cd,pi_asof_dt);
        WRK.gen_acct_ext(cd.credit,'SUPPAY',l_acc_amt,l_trxn_cd,pi_asof_dt);
    end if;
    <<LBL_REPAY_LOAN>>
     --<< Thang Ho MD7/0230 31/08/2007
       l_old_rsn_cd :=fcn.reasn_code;
       fcn.set_reasn_code('315');
    -->> Thang Ho MD7/0230 31/08/2007
    loan_repay.put(l_repay_amt,
                          'SUPPAY',
                          pi_asof_dt);
   fcn.set_reasn_code(l_old_rsn_cd);--Thang Ho MD7/0230 31/08/2007
    return l_rest_amt;
  end repay_loan_by_ccp;
  -->>PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP

  ------------------------------------------------------------------------------
  --<< VN-RPUL2-CH06
  FUNCTION is_calc_lbs ( pi_asof_dt IN DATE )
    RETURN VARCHAR2
  IS
    c_cmpn_code_oanp   CONSTANT VARCHAR2(10) := 'LBS_ORIGAP';
    l_pol_year                  NUMBER;
    l_bonus_pct                 NUMBER;
    l_cvg_base_idx              number;--VPD-483

    CURSOR is_calc_plan ( pi_dur IN NUMBER )
    IS
      SELECT bonus_pct
      FROM  tcampaign_bonuses
      WHERE plan_code   = wrk.curr_pol.plan_code_base
      AND   plan_vers   = wrk.curr_pol.vers_num_base
      AND   crcy_code   = wrk.curr_pol.crcy_code
      --<<VPD-483
      and (band_fr = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt >= band_fr)
      and (band_to = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt < band_to)
      -->>VPD-483
      AND   cmpn_code   = c_cmpn_code_oanp
      AND   pi_dur BETWEEN dur_fr AND dur_to
      ;
    ----------------------------------------------------------------------------
    FUNCTION exist_withdraw_fndtrxn
      RETURN VARCHAR2
    IS
    BEGIN
      FOR i IN 1 .. wrk.curr_fnd_trxn.count LOOP
        IF wrk.curr_fnd_trxn(i).fnd_trxn_cd = cd.fund_fnd_trxn_cd_psu
        THEN
          wrk.gen_query_reg ( pi_query_desc => s_message.get_message(6508)
                             ,pi_trxn_cd    => l_trxn_cd
                             ,pi_dsp_ind    => get_dsp_ind(6508,'AVY')
                            );
          RETURN 'Y';
        END IF;
      END LOOP;
      RETURN 'N';
    EXCEPTION
      WHEN OTHERS THEN
        fcn.set_return(1);
        wrk.gen_query_reg ( pi_query_desc => substr(sqlcode||'-'||sqlerrm,1,100)
                           ,pi_trxn_cd    => l_trxn_cd
                          );
        RETURN NULL;
    END exist_withdraw_fndtrxn;


    ----------------------------------------------------------------------------
  BEGIN --is_calc_lbs
    l_cvg_base_idx        := wrk.Srch_Base_Cvg;--VPD-483
    --VPD-483 IF  wrk.curr_pol.loyal_bns_ind = 'Y'
    IF  wrk.curr_pol.loyal_bns_ind = 'Y' and wrk.curr_pol.plan_code_base = 'RUV01'--VPD-483
    THEN
      l_pol_year := ROUND(MONTHS_BETWEEN(pi_asof_dt, wrk.curr_pol.pol_eff_dt)/12,0);

      OPEN is_calc_plan ( l_pol_year );
      FETCH is_calc_plan into l_bonus_pct;
      IF is_calc_plan%NOTFOUND THEN
        l_bonus_pct := 0;
      END IF;
      CLOSE is_calc_plan;

      IF l_bonus_pct > 0 THEN
        --<< VN-RPUL2-SIT-26NOV
        -- Will not calculate if there is any ouststanding base premium
        IF wrk.curr_pol.ph_ind IS NULL
         AND wrk.curr_pol.last_pd_to_dt < advance_ptd(wrk.curr_pol.pol_eff_dt, wrk.curr_pol.pol_eff_dt, (12 * l_pol_year)) -- there may be oustading premium
         and wrk.curr_pol.last_pd_to_dt < advance_ptd(wrk.curr_pol.pol_eff_dt,wrk.curr_pol.pol_eff_dt , (12 * wrk.curr_cvg(wrk.srch_base_cvg).prem_dur))  --PJ12/0444 -- base prem is not full paid
        THEN
          RETURN 'N';
        END IF;
        -->> VN-RPUL2-SIT-26NOV

        IF exist_withdraw_fndtrxn = 'Y' THEN
          RETURN 'N';
        END IF;
      END IF;
    END IF;
    RETURN 'Y';
  EXCEPTION
    WHEN OTHERS THEN
      fcn.set_return(99);
      wrk.gen_query_reg ( pi_query_desc => substr(sqlcode||'-'||sqlerrm,1,100)
                         ,pi_trxn_cd    => l_trxn_cd
                        );
      RETURN NULL;
  END is_calc_lbs;
  ------------------------------------------------------------------------------
  FUNCTION is_skip_avy ( pi_asof_dt IN DATE )
    RETURN VARCHAR2
  IS
  BEGIN --is_skip_avy
    IF  is_calc_lbs ( pi_asof_dt ) = 'N' THEN
      RETURN 'Y';
    END IF;
    RETURN 'N';
  EXCEPTION
    WHEN OTHERS THEN
      fcn.set_return(99);
      wrk.gen_query_reg ( pi_query_desc => substr(sqlcode||'-'||sqlerrm,1,100)
                         ,pi_trxn_cd    => l_trxn_cd
                        );
      RETURN NULL;
  END is_skip_avy;
---<<VPD-731_VPD-1030
function chk_pol_exists_lapse(pi_asof_dt      date,
                              pi_dur          number,
                              pi_cvg_base_idx number) return varchar2 is
  l_review_fr_dt date;
  l_bonus_pct    tcampaign_bonuses.bonus_pct%TYPE;
  l_Period_Dur   tcampaign_bonuses.period_dur%TYPE;
  l_pol_lapse    NUMBER;
  l_pol_reins    NUMBER;
  CURSOR c_lapse (p_review_dt date, p_asof_dt date)is
   select count(*)
   -- into l_pol_lapse
    from ttrxn_logs
   where pol_num = wrk.curr_pol.pol_num
     and tbl_nm = 'TPOLICYS'
     and col_nm = 'POL_STAT_CD'
     and /*(new_valu = CD.STAT_LAPSE
   --or old_valu = CD.STAT_LAPSE
   )*/
     is_stat_in_force(new_valu)='N'
     and trxn_id between to_char(p_review_dt, 'yyyymmdd') || '0000000' and
         to_char(p_asof_dt, 'yyyymmdd') || '9999999';
   CURSOR c_reins (p_review_dt date, p_asof_dt date)is
   select count(*)
   -- into l_pol_lapse
    from ttrxn_logs
   where pol_num = wrk.curr_pol.pol_num
     and tbl_nm = 'TPOLICYS'
     and col_nm = 'POL_STAT_CD'
     and /*(new_valu = CD.STAT_LAPSE
   --or old_valu = CD.STAT_LAPSE
   )*/
     is_stat_in_force(old_valu)='N' and is_stat_in_force(new_valu)='Y'
     and trxn_id between to_char(p_review_dt, 'yyyymmdd') || '0000000' and
         to_char(p_asof_dt, 'yyyymmdd') || '9999999';
begin
  l_review_fr_dt := wrk.curr_pol.pol_eff_dt;
  for i in 1 .. pi_dur loop
    open is_calc_loyal_bns(pi_dur - i, pi_cvg_base_idx);

    fetch is_calc_loyal_bns
      into l_bonus_pct, l_period_dur;
    if is_calc_loyal_bns%FOUND then
      l_review_fr_dt := advance_ptd(wrk.curr_pol.pol_eff_dt,
                                    wrk.curr_pol.pol_eff_dt,
                                    12 * (pi_dur - i)) + 1;
    close is_calc_loyal_bns;
      exit;
    end if;
    close is_calc_loyal_bns;
  end loop;
  -- do.pl('pi_dur: '||pi_dur);
  --do.pl('l_review_fr_dt: '||to_char(l_review_fr_dt, 'yyyymmdd') || '0000000');
  --do.pl('pi_asof_dt: '|| to_char(pi_asof_dt, 'yyyymmdd') || '9999999');
  /*select count(*)
    into l_pol_lapse
    from ttrxn_logs
   where pol_num = wrk.curr_pol.pol_num
     and tbl_nm = 'TPOLICYS'
     and col_nm = 'POL_STAT_CD'
     and (new_valu = CD.STAT_LAPSE
   --or old_valu = CD.STAT_LAPSE
   )
     and trxn_id between to_char(l_review_fr_dt, 'yyyymmdd') || '0000000' and
         to_char(pi_asof_dt, 'yyyymmdd') || '9999999';*/
     open c_lapse (l_review_fr_dt, pi_asof_dt);
     fetch c_lapse into l_pol_lapse;
     close c_lapse;
   --  do.pl('l_pol_lapse '||l_pol_lapse);

  IF pi_dur > 5 THEN
    open c_reins (l_review_fr_dt, pi_asof_dt);
     fetch c_reins into l_pol_reins;
     close c_reins;
     --do.pl('l_pol_reins '||l_pol_reins);
     if l_pol_lapse > 0 OR l_pol_reins > 0 then
      return 'Y';
    else
      return 'N';
    end if;
  ELSE

    if l_pol_lapse > 0 then
      return 'Y';
    else
      return 'N';
    end if;
  END IF;

end chk_pol_exists_lapse;
--<<VNS-400
function chk_pol_exists_trxn(pi_pol_num varchar2,
                             pi_start_dt date,
                             pi_end_dt date,
                             pi_fnd_trxn_cd varchar2 default 'ALL',
                             pi_prem_grp   varchar2 default 'ALL') return varchar2 is
l_count_trxn      NUMBER;
begin
  select count(*)
    into l_count_trxn
    from (select 1
            from tfund_trxn_histories
           where pol_num = pi_pol_num
             and (fnd_trxn_cd = pi_fnd_trxn_cd or pi_fnd_trxn_cd = 'ALL')
             and trxn_dt between pi_start_dt and pi_end_dt
             and (prem_grp = pi_prem_grp or pi_prem_grp = 'ALL')
          union all
          select 1
            from tfund_trxn
           where pol_num = pi_pol_num
             and (fnd_trxn_cd = pi_fnd_trxn_cd or pi_fnd_trxn_cd = 'ALL')
             and trxn_dt between pi_start_dt and pi_end_dt
             and (prem_grp = pi_prem_grp or pi_prem_grp = 'ALL'));
  if l_count_trxn > 0 then
    return 'Y';
  else
    return 'N';
  end if;

end chk_pol_exists_trxn;

function chk_pol_exists_lapse_trxn_logs(pi_pol_num varchar2,
                             pi_start_dt date,
                             pi_end_dt date) return varchar2 is
l_count_trxn      NUMBER;
begin
  select count(*)
    into l_count_trxn
    from ttrxn_logs
   where POL_NUM = pi_pol_num
     AND tbl_nm = 'TPOLICYS'
     and col_nm = 'POL_STAT_CD'
     and is_stat_in_force(old_valu)='Y' and new_valu='B'
     and trxn_id between to_char(pi_start_dt, 'yyyymmdd') || '0000000'
                     and to_char(pi_end_dt, 'yyyymmdd') || '9999999';
  if l_count_trxn > 0 then
    return 'Y';
  else
    return 'N';
  end if;

end chk_pol_exists_lapse_trxn_logs;
-->>VNS-400
function chk_pol_exists_psu(pi_asof_dt date

                           ,
                            pi_dur          number default null,
                            pi_prem_grp     varchar2 default 'ALL',
                            pi_cvg_base_idx number) return varchar2 is
  l_review_fr_dt date;
  l_pol_psu      NUMBER;
  l_bonus_pct    tcampaign_bonuses.bonus_pct%TYPE;
  l_Period_Dur   tcampaign_bonuses.period_dur%TYPE;
begin
  l_review_fr_dt := wrk.curr_pol.pol_eff_dt;
  if pi_dur is not null then
    for i in 1 .. pi_dur loop
      open is_calc_loyal_bns(pi_dur - i, pi_cvg_base_idx);

      fetch is_calc_loyal_bns
        into l_bonus_pct, l_period_dur;
      if is_calc_loyal_bns%FOUND then
        l_review_fr_dt := advance_ptd(wrk.curr_pol.pol_eff_dt,
                                      wrk.curr_pol.pol_eff_dt,
                                      12 * (pi_dur - i)) + 1;
     /*  do.pl('pi_dur= '||pi_dur);
       do.pl('i= '||i);
       do.pl('wrk.curr_pol.pol_eff_dt= '||wrk.curr_pol.pol_eff_dt);*/
     close is_calc_loyal_bns;
     -- do.pl('wrk.curr_pol.pol_eff_dt= '||wrk.curr_pol.pol_eff_dt);
      /*do.pl('l_bonus_pct= '||l_bonus_pct);
       do.pl('l_period_dur= '||l_period_dur);
        do.pl('l_review_fr_dt= '||l_review_fr_dt);*/
        exit;
      end if;
      close is_calc_loyal_bns;
    end loop;
  end if;
  /*do.pl('pi_asof_dt= '||pi_asof_dt);
   do.pl('l_review_fr_dt= '||l_review_fr_dt);
   do.pl('pi_prem_grp= '||pi_prem_grp);*/
  select count(*)
    into l_pol_psu
    from (select 1
            from tfund_trxn_histories
           where pol_num = wrk.curr_pol.pol_num
             and fnd_trxn_cd = 'PSU'
             and trxn_dt between l_review_fr_dt and pi_asof_dt - 1
             and (prem_grp = pi_prem_grp or pi_prem_grp = 'ALL')
          union all
          select 1
            from tfund_trxn
           where pol_num = wrk.curr_pol.pol_num
             and fnd_trxn_cd = 'PSU'
             and trxn_dt between l_review_fr_dt and pi_asof_dt - 1
             and (prem_grp = pi_prem_grp or pi_prem_grp = 'ALL'));
  if l_pol_psu > 0 then
    return 'Y';
  else
    return 'N';
  end if;

end chk_pol_exists_psu;
function chk_pol_exists_loan(pi_asof_dt      date,
                             pi_dur          number,
                             pi_cvg_base_idx number) return varchar2 is
  l_review_fr_dt date;
  l_bonus_pct    tcampaign_bonuses.bonus_pct%TYPE;
  l_Period_Dur   tcampaign_bonuses.period_dur%TYPE;
  l_pol_loan     NUMBER;
begin
  l_review_fr_dt := wrk.curr_pol.pol_eff_dt;
  for i in 1 .. pi_dur loop
    open is_calc_loyal_bns(pi_dur - i, pi_cvg_base_idx);
    fetch is_calc_loyal_bns
      into l_bonus_pct, l_period_dur;
    if is_calc_loyal_bns%FOUND then
      l_review_fr_dt := advance_ptd(wrk.curr_pol.pol_eff_dt,
                                    wrk.curr_pol.pol_eff_dt,
                                    12 * (pi_dur - i)) + 1;
     close is_calc_loyal_bns;
      exit;
    end if;
    close is_calc_loyal_bns;
  end loop;
  --do.pl('chk_pol_exists_loan --- l_review_fr_dt '||l_review_fr_dt);
  --do.pl('chk_pol_exists_loan --- pi_asof_dt '||pi_asof_dt);
  select count(*)
    into l_pol_loan
    from ttrxn_histories
   where pol_num = wrk.curr_pol.pol_num
     and trxn_cd = 'NFOACT'
     and reasn_code = '602'
     and trxn_dt between l_review_fr_dt and pi_asof_dt - 1;
  if l_pol_loan > 0 then
    return 'Y';
  else
    return 'N';
  end if;

end chk_pol_exists_loan;
procedure calc_loyaty_bonus(pi_bns_typ   in VARCHAR2 default CD.LOYAL_BNS_NEW_UL,
                          pi_dur       IN NUMBER,
                          pi_asof_dt   IN DATE,
                          po_bonus_amt out NUMBER,
                          po_result    out varchar,
              pi_chk_date  in  varchar default 'N')

 IS

  l_cvg_base_idx       number;
  l_bonus_pct          tcampaign_bonuses.bonus_pct%TYPE;
  l_Period_Dur         tcampaign_bonuses.period_dur%TYPE;
  l_Strt_Yr_Dt         date;
  l_End_Yr_Dt          date;
  l_Rp_Required        number;
  l_Rp_Paid            number;
  l_Topup_Paid         number;
  l_Plan_Tol_Prem      number;
  l_min_dur            number(3);
  l_fnd_valu_mth       NUMBER;
  l_orig_face_amt_base tpolicys_vn.pol_valu%TYPE;
  c_cmpn_code_oanp CONSTANT VARCHAR2(10) := 'LBS_ORIGAP';
  l_Pol_Yr_Fr number;
  l_Pol_Yr_To number;
  l_Cas_Dt    date := get_cas_sys_dt;
  l_bp_row    INTEGER := wrk.srch_base_cvg;

  l_last_fm_avy NUMBER;
  l_last_mth    NUMBER;
  l_result varchar2(500);
  CURSOR c_get_fm_last_avy(p_pol_num varchar, p_month number) is
    select f.face_amt
      from ttot_fnd_values f
     where f.pol_num = p_pol_num
       and f.rec_typ = 'M'
       and f.stat_cd = 'A'
       and f.mth = p_month;
    CURSOR c_min_dur
    IS
      SELECT min(dur_fr)
      FROM  tcampaign_bonuses
      WHERE plan_code   = wrk.curr_pol.plan_code_base
      AND   plan_vers   = wrk.curr_pol.vers_num_base
      AND   crcy_code   = wrk.curr_pol.crcy_code
      --<<VPD-483
      and (band_fr = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt >= band_fr)
      and (band_to = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt < band_to)
      -->>VPD-483
      AND   cmpn_code   = c_cmpn_code_oanp
      ;

       CURSOR C_CURRENCY_MASTER IS
       SELECT M.PREM_TOL_AMT FROM TCURRENCY_MASTER M WHERE M.CRCY_CODE='78';

       CURSOR C_ORIG_FACE_AMT_BASE(p_pol_num varchar) IS
       SELECT C.BAND_FACE_AMT FROM TCOVERAGES C
       WHERE C.POL_NUM =p_pol_num AND C.CVG_TYP='B';
  /*function pol_exists_lapse(pi_asof_dt date,pi_dur number) return varchar2
   is
     l_review_fr_dt date;
   begin
     l_review_fr_dt  := wrk.curr_pol.pol_eff_dt;
     for i in 1..pi_dur loop
       open is_calc_plan(pi_dur-i);

       fetch is_calc_plan into l_bonus_pct,l_period_dur;
       if is_calc_plan%FOUND then
         l_review_fr_dt := advance_ptd(wrk.curr_pol.pol_eff_dt, wrk.curr_pol.pol_eff_dt, 12 * (pi_dur-i))+1;
         exit;
        end if;
        close is_calc_plan;
     end loop;
     select count(*)
     into l_pol_lapse
     from ttrxn_logs
     where pol_num=wrk.curr_pol.pol_num
       and tbl_nm='TPOLICYS'
       and col_nm='POL_STAT_CD'
       and (new_valu = CD.STAT_LAPSE or old_valu = CD.STAT_LAPSE)
       and trxn_id between to_char(l_review_fr_dt,'yyyymmdd')||'0000000' and to_char(pi_asof_dt,'yyyymmdd')||'9999999';
     if l_pol_lapse>0 then
       return 'Y';
     else
       return 'N';
     end if;

  end pol_exists_lapse;

  function pol_exists_psu(pi_asof_dt date

                         ,pi_dur number default null
                         ,pi_prem_grp varchar2 default 'ALL'
                         ) return varchar2
   is
     l_review_fr_dt date;
     l_pol_psu    NUMBER;
   begin
     l_review_fr_dt  := wrk.curr_pol.pol_eff_dt;
     if pi_dur is not null then
       for i in 1..pi_dur loop
         open is_calc_plan(pi_dur-i);

         fetch is_calc_plan into l_bonus_pct,l_period_dur;
         if is_calc_plan%FOUND then
           l_review_fr_dt := advance_ptd(wrk.curr_pol.pol_eff_dt, wrk.curr_pol.pol_eff_dt, 12 * (pi_dur-i))+1;
           exit;
          end if;
          close is_calc_plan;
       end loop;
     end if;
     select count(*)
     into l_pol_psu
     from
     (
       select 1
       from tfund_trxn_histories
       where pol_num = wrk.curr_pol.pol_num
         and fnd_trxn_cd = 'PSU'
         and trxn_dt between l_review_fr_dt and pi_asof_dt
         and (prem_grp = pi_prem_grp or pi_prem_grp = 'ALL')
       union all
       select 1
       from tfund_trxn
       where pol_num = wrk.curr_pol.pol_num
         and fnd_trxn_cd = 'PSU'
         and trxn_dt between l_review_fr_dt and pi_asof_dt
         and (prem_grp = pi_prem_grp or pi_prem_grp = 'ALL')
      );
     if l_pol_psu > 0 then
       return 'Y';
     else
       return 'N';
     end if;

  end pol_exists_psu;
     function pol_exists_loan(pi_asof_dt date, pi_dur number) return varchar2 is
    l_review_fr_dt date;
  begin
    l_review_fr_dt := wrk.curr_pol.pol_eff_dt;
    for i in 1 .. pi_dur loop
      open is_calc_plan(pi_dur - i);
      fetch is_calc_plan
        into l_bonus_pct, l_period_dur;
      if is_calc_plan%FOUND then
        l_review_fr_dt := advance_ptd(wrk.curr_pol.pol_eff_dt,
                                      wrk.curr_pol.pol_eff_dt,
                                      12 * (pi_dur - i)) + 1;
        exit;
      end if;
      close is_calc_plan;
    end loop;
    select count(*)
      into l_pol_loan
      from ttrxn_histories
     where pol_num = wrk.curr_pol.pol_num
       and trxn_cd = 'NFOACT'
       and reasn_code = '602'
       and trxn_dt between l_review_fr_dt and pi_asof_dt;
    if l_pol_loan > 0 then
      return 'Y';
    else
      return 'N';
    end if;

  end pol_exists_loan;*/

BEGIN
  IF pi_bns_typ = CD.LOYAL_BNS_NEW_UL THEN
    l_cvg_base_idx := wrk.Srch_Base_Cvg;

    OPEN C_ORIG_FACE_AMT_BASE(wrk.curr_pol.pol_num);
    FETCH C_ORIG_FACE_AMT_BASE INTO l_orig_face_amt_base;
    CLOSE C_ORIG_FACE_AMT_BASE;

   -- l_orig_face_amt_base  := GET_POL_PARM('ORIG_FACE_AMT_BASE',wrk.curr_pol.pol_num);
    OPEN c_min_dur;
      FETCH c_min_dur into l_min_dur;
      IF c_min_dur%NOTFOUND THEN
        l_min_dur := 0;
      END IF;
      CLOSE c_min_dur;

    OPEN is_calc_loyal_bns(pi_dur, l_cvg_base_idx);
    FETCH is_calc_loyal_bns
      into l_bonus_pct, l_period_dur;
    IF is_calc_loyal_bns%NOTFOUND THEN
      l_bonus_pct := 0;
    END IF;
    CLOSE is_calc_loyal_bns;

    l_Pol_Yr_Fr := Pi_Dur - NVL(l_Period_Dur,0);

    if Pi_Dur = l_Min_Dur then
      l_Pol_Yr_Fr := 0;
    end if;
    l_Pol_Yr_To   := Pi_Dur;
     -- do.pl('l_Pol_Yr_Fr '||l_Pol_Yr_Fr );
    --do.pl('l_Pol_Yr_To '|| l_Pol_Yr_To);
    -- do.pl('(l_Pol_Yr_Fr) * 12 + 1: '|| to_char((l_Pol_Yr_Fr) * 12 + 1));
    l_Rp_Required := pkg_ul_flexible.Get_Rp_Requied(wrk.curr_pol.pol_num,
                                                    (l_Pol_Yr_Fr) * 12 + 1,
                                                    l_Pol_Yr_To * 12,
                                                    'RP');
    --Calculate paid premium in review date
    l_Strt_Yr_Dt := Advance_Ptd(Wrk.Curr_Pol.Pol_Eff_Dt,
                                Wrk.Curr_Pol.Pol_Eff_Dt,
                                (l_Pol_Yr_Fr ) * 12);
    l_End_Yr_Dt  := Advance_Ptd(l_Strt_Yr_Dt,
                                Wrk.Curr_Pol.Pol_Eff_Dt,
                                l_Pol_Yr_To * 12) - 1;

    /*ctl_parm.get('PLAN_TOL_PREM',
                 Wrk.Curr_Pol.Crcy_Code,
                 Wrk.Curr_Pol.Plan_Code_Base,
                 l_Cas_Dt,
                 l_Plan_Tol_Prem);*/
    OPEN C_CURRENCY_MASTER;
    FETCH C_CURRENCY_MASTER INTO l_Plan_Tol_Prem;
    CLOSE C_CURRENCY_MASTER;
    -- Total regular premium paid in review date
    l_Rp_Paid := pkg_ul_flexible.Get_Premium_Paid(Wrk.Curr_Pol.Pol_Num,
                                                  l_Pol_Yr_Fr + 1,
                                                  l_Pol_Yr_To,
                                                  NULL,
                                                  NULL,
                                                  'RP');

    -- Total topup premium paid in review date
     --do.pl('l_Strt_Yr_Dt'||l_Strt_Yr_Dt);
    --do.pl('l_End_Yr_Dt'|| l_End_Yr_Dt);
    l_Topup_Paid := pkg_ul_flexible.Get_Premium_Paid(Wrk.Curr_Pol.Pol_Num,
                                                     l_Pol_Yr_Fr + 1,
                                                     l_Pol_Yr_To,
                                                     l_Strt_Yr_Dt,
                                                     l_End_Yr_Dt,
                                                     'TUP');
 --do.pl('pi_asof_dt '|| pi_asof_dt);
    l_last_mth := months_between(pi_asof_dt , Wrk.Curr_Pol.Pol_Eff_Dt) -1;
 --do.pl('l_last_mth'|| l_last_mth);
    open c_get_fm_last_avy(Wrk.Curr_Pol.Pol_Num, l_last_mth);
    fetch c_get_fm_last_avy
      into l_last_fm_avy;
    close c_get_fm_last_avy;
    --do.pl('l_Rp_paid + l_Topup_Paid := '||to_char(l_Rp_paid + l_Topup_Paid));
    --do.pl('l_Rp_Required - l_Plan_Tol_Prem * (l_Pol_Yr_To - l_Pol_Yr_Fr):= '||to_char(l_Rp_Required - l_Plan_Tol_Prem * (l_Pol_Yr_To - l_Pol_Yr_Fr)));
     --do.pl('l_Plan_Tol_Prem= '||l_Plan_Tol_Prem);
    if l_Rp_paid + l_Topup_Paid <
       l_Rp_Required - l_Plan_Tol_Prem * (l_Pol_Yr_To - l_Pol_Yr_Fr) -- not full paid to current AVY
     then
      po_bonus_amt := 0;
      l_result    := l_result ||
                       chr(10)||'-Chưa đóng đủ phí';
     end if;
    /*
    --<<VPD-1870
    if GET_WORKING_DATE(l_cas_dt, -1) >= pi_asof_dt and pi_chk_date ='Y'then
      po_bonus_amt := 0;
      l_result    := l_result || '-Invalid date ';

    end if;
    -->>VPD-1870
    */
    --do.pl('l_orig_face_amt_base '||l_orig_face_amt_base);
     --do.pl('l_last_fm_avy '||l_last_fm_avy);
     --do.pl('wrk.curr_cvg(l_bp_row).face_amt '||wrk.curr_cvg(l_bp_row).face_amt);
    if NVL(l_last_fm_avy, wrk.curr_cvg(l_bp_row).face_amt) <
          TO_NUMBER(l_orig_face_amt_base) then
      po_bonus_amt := 0;
     l_result    :=  l_result ||
                       chr(10)||'-Số tiền bảo hiểm hiện tại nhỏ hơn số tiền bảo hiểm lúc cấp hợp đồng,';
    end if;

      if chk_pol_exists_lapse(pi_asof_dt, pi_dur, l_cvg_base_idx) = 'Y' then
        po_bonus_amt := 0;
         l_result    := l_result|| chr(10) || '-Đã từng bị mất hiệu lực,';
      end if;
     -- do.pl(pi_asof_dt'--'||pi_dur||'--'||l_cvg_base_idx);
    if chk_pol_exists_psu(pi_asof_dt      => pi_asof_dt,
                               pi_dur          => pi_dur,
                               pi_cvg_base_idx => l_cvg_base_idx) = 'Y' then
        po_bonus_amt := 0;
        l_result    := l_result ||
                        chr(10)|| '-Đã rút quỹ từng phần, ';
      end if;
      if chk_pol_exists_loan(pi_asof_dt, pi_dur, l_cvg_base_idx) = 'Y' then
        po_bonus_amt := 0;
        l_result    := l_result || chr(10)|| '-Đã vay/tạm ứng, ';
      end if;
      if l_result is null then
        select sum(TOT_FND_VALU)
          into l_fnd_valu_mth
          from ttot_fnd_values
         where pol_num = wrk.curr_pol.pol_num
           and rec_typ = 'M'
           and stat_cd = CD.REC_STATUS_ACTIVE
           and (mth between ((pi_dur - l_Period_Dur) * 12 + 1) and
               pi_dur * 12);

        po_bonus_amt := l_bonus_pct / 100 * l_fnd_valu_mth /
                        (l_Period_Dur * 12);
       else
         po_bonus_amt := 0;
      end if;

  END IF;
  IF po_bonus_amt = 0 THEN
    wrk.gen_query_reg(pi_query_desc => 'Persistency bonus bonus_amt=' ||
                                       po_bonus_amt,
                      pi_trxn_cd    => l_trxn_cd);
   po_result := 'Hợp đồng không thỏa điều kiện thưởng duy trì hợp đồng vì '||l_result;
    return;
  else
     po_result := 'Hợp đồng thỏa điều kiện thưởng duy trì hợp đồng';
  END IF;
END calc_loyaty_bonus;
--<<VNS-400
procedure calc_loyaty_bonus_ruv_2_3(pi_bns_typ   in VARCHAR2,
                          pi_dur       IN NUMBER,
                          pi_asof_dt   IN DATE,
                          po_bonus_amt out NUMBER,
                          po_result    out varchar,
              pi_chk_date  in  varchar default 'N')

 IS

  l_cvg_base_idx       number;
  l_bonus_pct          tcampaign_bonuses.bonus_pct%TYPE;
  l_Period_Dur         tcampaign_bonuses.period_dur%TYPE;
  l_Strt_Yr_Dt         date;
  l_End_Yr_Dt_MVY14    date;
  l_End_Yr_Dt_MVY26    date;
  l_End_Yr_Dt_MVY34    date;
  l_min_dur            number(3);
  l_fnd_valu_mth       NUMBER;
  c_cmpn_code_oanp CONSTANT VARCHAR2(10) := 'LBS_ORIGAP';
  l_Pol_Yr_Fr number;
  l_Pol_Yr_To number;
  l_Cas_Dt    date := get_cas_sys_dt;
  l_bp_row    INTEGER := wrk.srch_base_cvg;
  l_last_mth    NUMBER;
  l_result varchar2(500);
  l_count_mvy14 INTEGER := 0;
  l_count_mvy26 INTEGER := 0;
  l_count_mvy34 INTEGER:= 0;
  l_count_fa INTEGER;
  l_pol_num varchar2(500);
  CURSOR c_min_dur
    IS
      SELECT min(dur_fr)
      FROM  tcampaign_bonuses
      WHERE plan_code   = wrk.curr_pol.plan_code_base
      AND   plan_vers   = wrk.curr_pol.vers_num_base
      AND   crcy_code   = wrk.curr_pol.crcy_code
      and (band_fr = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt >= band_fr)
      and (band_to = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt < band_to)
      AND   cmpn_code   = c_cmpn_code_oanp;

BEGIN
  IF pi_bns_typ = CD.LOYAL_BNS_RUV_02_03 THEN
    --init wrk policy value
     l_pol_num := wrk.curr_pol.pol_num;
    --get index base pol (primary)
    l_cvg_base_idx := wrk.Srch_Base_Cvg;
    -- get min duration for campaign bonus
    OPEN c_min_dur;
      FETCH c_min_dur into l_min_dur;
      IF c_min_dur%NOTFOUND THEN
        l_min_dur := 0;
      END IF;
      CLOSE c_min_dur;
    --check campaign bonus for plan code
    OPEN is_calc_loyal_bns(pi_dur, l_cvg_base_idx);
    FETCH is_calc_loyal_bns
      into l_bonus_pct, l_period_dur;
    IF is_calc_loyal_bns%NOTFOUND THEN
      l_bonus_pct := 0;
    END IF;
    CLOSE is_calc_loyal_bns;
    --set avy number from 0 - 1 - 2
    l_Pol_Yr_Fr := Pi_Dur - NVL(l_Period_Dur,0);
    if Pi_Dur = l_Min_Dur then
      l_Pol_Yr_Fr := 0;
    end if;
    l_Pol_Yr_To   := Pi_Dur;
    --Calculate paid premium in review date
    l_Strt_Yr_Dt := Advance_Ptd(Wrk.Curr_Pol.Pol_Eff_Dt,
                                Wrk.Curr_Pol.Pol_Eff_Dt,
                                (l_Pol_Yr_Fr ) * 12);
    l_End_Yr_Dt_MVY14  := Advance_Ptd(l_Strt_Yr_Dt,
                                Wrk.Curr_Pol.Pol_Eff_Dt,
                                14);
    l_End_Yr_Dt_MVY26  := Advance_Ptd(l_Strt_Yr_Dt,
                                Wrk.Curr_Pol.Pol_Eff_Dt,
                                26);
    l_End_Yr_Dt_MVY34  := Advance_Ptd(l_Strt_Yr_Dt,
                                Wrk.Curr_Pol.Pol_Eff_Dt,
                                34);
    -- Check Base Premium must be paid on time at every AVY during the 3-year bonus review period
    select count(A.Pol_Num )  into l_count_mvy14
           from CAS.TSPECIAL_BONUS A
           Where A.PTD >=  l_End_Yr_Dt_MVY14
                 And A.POL_NUM = Wrk.Curr_Pol.Pol_Num
                 And A.Mth = (l_Pol_Yr_Fr * 12) +14
				 AND plan_code  = wrk.curr_pol.plan_code_base;

    select count(A.Pol_Num )  into l_count_mvy26
           from CAS.TSPECIAL_BONUS A
           Where A.PTD >= l_End_Yr_Dt_MVY26
                 And A.POL_NUM = Wrk.Curr_Pol.Pol_Num
                 And A.Mth = (l_Pol_Yr_Fr * 12) + 26
				 AND plan_code  = wrk.curr_pol.plan_code_base;
	--<<VNS-4890
     /*--VNS-4890
    select count(A.Pol_Num )  into l_count_mvy34
           from CAS.TSPECIAL_BONUS A
           Where A.PTD >=   l_End_Yr_Dt_MVY34
                 And A.POL_NUM = Wrk.Curr_Pol.Pol_Num
                 And A.Mth = (l_Pol_Yr_Fr * 12) + 36
				 AND plan_code  = wrk.curr_pol.plan_code_base;
      */--VNS-4890
        IF  wrk.curr_pol.last_pd_to_dt >=  l_End_Yr_Dt_MVY34 THEN
			l_count_mvy34 := 1;
		END IF;
	-->>VNS-4890
   if NVL(l_count_mvy14,0) < 1 or  NVL(l_count_mvy26,0) < 1 or NVL(l_count_mvy34,0) < 1 -- not full paid to all AVY
     then
      po_bonus_amt := 0;
      l_result    := l_result ||
                       chr(10)||'-Chưa đóng phí ';
     end if;
    -- FA at the time of bonus review is >= FA at the corresponding beginning of bonus review period
    select max( MTH) into l_last_mth from CAS.TSPECIAL_BONUS where POL_NUM = l_pol_num AND plan_code  = wrk.curr_pol.plan_code_base;
    select count(A.Pol_Num )  into l_count_fa
           from CAS.TSPECIAL_BONUS A
           Where A.Pol_Num in (Select A.Pol_Num
                                      from CAS.TSPECIAL_BONUS B
                                      where A.FA <= B.FA
                                            And B.POL_NUM = l_pol_num
                                            and B.MTH = l_last_mth
											AND plan_code  = wrk.curr_pol.plan_code_base)
                 And A.POL_NUM =l_pol_num
                 And A.MTH = (l_Pol_Yr_Fr * 12 + 1)
				 AND plan_code  = wrk.curr_pol.plan_code_base;

    if NVL(l_count_fa,0) = 0 then
      po_bonus_amt := 0;
     l_result    :=  l_result ||
                       chr(10)||'-Số tiền bảo hiểm hiện tại nhỏ hơn số tiền bảo hiểm đầu kỳ xem xét';
    end if;
    -- Policy is in force at the anniversary date and has not been lapsed during the review period
    --Only check no lapse for the Base Plan, no need to consider the Rider Plans
    if chk_pol_exists_lapse_trxn_logs(pi_pol_num      => Wrk.Curr_Pol.Pol_Num,
                               pi_start_dt          => l_Strt_Yr_Dt,
                               pi_end_dt          => l_Cas_Dt) = 'Y' then
       po_bonus_amt := 0;
       l_result    := l_result|| chr(10) || '-Đã từng bị mất hiệu lực ';
    end if;
    --No partial withdrawal from BAV during 3-year period prior to the review date of loyalty bonus, including AFPP process
    --No AFPP on BAV nor TAV
    if chk_pol_exists_trxn(pi_pol_num      => Wrk.Curr_Pol.Pol_Num,
                               pi_start_dt          => l_Strt_Yr_Dt,
                               pi_end_dt          => l_Cas_Dt,
                               pi_fnd_trxn_cd => CD.FUND_FND_TRXN_CD_PSU,
                               pi_prem_grp => CD.PREM_GRP_RBP) = 'Y'
        or chk_pol_exists_trxn(pi_pol_num      => Wrk.Curr_Pol.Pol_Num,
                               pi_start_dt          => l_Strt_Yr_Dt,
                               pi_end_dt          => l_Cas_Dt,
                               pi_fnd_trxn_cd => CD.FUND_TRXN_AFP,
                               pi_prem_grp => CD.PREM_GRP_RBP) = 'Y'
        or chk_pol_exists_trxn(pi_pol_num      => Wrk.Curr_Pol.Pol_Num,
                               pi_start_dt          => l_Strt_Yr_Dt,
                               pi_end_dt          => l_Cas_Dt,
                               pi_fnd_trxn_cd => CD.FUND_TRXN_AFP,
                               pi_prem_grp => CD.PREM_GRP_TUP) = 'Y'
       or chk_pol_exists_trxn(pi_pol_num      => Wrk.Curr_Pol.Pol_Num,
                               pi_start_dt          => l_Strt_Yr_Dt,
                               pi_end_dt          => l_Cas_Dt,
                               pi_fnd_trxn_cd => CD.FUND_TRXN_APPR,
                               pi_prem_grp => CD.PREM_GRP_RBP) = 'Y'
         or chk_pol_exists_trxn(pi_pol_num      => Wrk.Curr_Pol.Pol_Num,
                               pi_start_dt          => l_Strt_Yr_Dt,
                               pi_end_dt          => l_Cas_Dt,
                               pi_fnd_trxn_cd => CD.FUND_TRXN_APPR,
                               pi_prem_grp => CD.PREM_GRP_TUP) = 'Y'
        then
            po_bonus_amt := 0;
            l_result    := l_result ||
                            chr(10)|| '-Đã rút Giá trị tài khoản cơ bản';
      end if;

      --calc bonus
      if l_result is null then
        select sum(TOT_FND_VALU)
          into l_fnd_valu_mth
          from ttot_fnd_values
         where pol_num = l_pol_num
           and rec_typ = 'M'
           and stat_cd = CD.REC_STATUS_ACTIVE
       and prem_grp = cd.PREM_GRP_RBP
           and (mth between ((pi_dur - l_Period_Dur) * 12 + 1) and
               pi_dur * 12);

        po_bonus_amt := l_bonus_pct / 100 * l_fnd_valu_mth /
                        (l_Period_Dur * 12);
       else

         po_bonus_amt := 0;
      end if;

  END IF;
  IF po_bonus_amt = 0 THEN
    wrk.gen_query_reg(pi_query_desc => 'Persistency bonus bonus_amt=' ||
                                       po_bonus_amt,
                      pi_trxn_cd    => l_trxn_cd);
   po_result := 'Hợp đồng không thỏa điều kiện thưởng duy trì hợp đồng vì   '||l_result ;
    return;
  else
     po_result := 'Hợp đồng thỏa điều kiện thưởng duy trì hợp đồng ';
  END IF;
END calc_loyaty_bonus_ruv_2_3;
-->>VNS-400
--<<VNS-5049
Procedure Calc_Loyaty_Bonus_2019UL(Pi_Bns_Typ   In Varchar2 Default Cd.Loyal_Bns_2019UL,
                                   Pi_Dur       In Number,
                                   Pi_Asof_Dt   In Date,
                                   Po_Bonus_Amt Out Number,
                                   Po_Result    Out Varchar,
                                   Pi_Chk_Date  In Varchar Default 'N')
IS

  l_cvg_base_idx       number;
  l_bonus_pct          tcampaign_bonuses.bonus_pct%TYPE;
  l_Period_Dur         tcampaign_bonuses.period_dur%TYPE;
  l_Strt_Yr_Dt         date;
  l_End_Yr_Dt_MVY14    date;
  l_End_Yr_Dt_MVY26    date;
  l_End_Yr_Dt_MVY34    date;
  l_End_Yr_Dt_MVY36    date;
  l_min_dur            number(3);
  l_fnd_valu_mth       NUMBER;
  l_fnd_valu_cap       number;
  l_fnd_valu_ded       number;
  l_count_fnd_ded      number;
  l_count_mth          number;
  c_cmpn_code_oanp CONSTANT VARCHAR2(10) := 'LBS_ORIGAP';
  l_Pol_Yr_Fr number;
  l_Pol_Yr_To number;
  l_Cas_Dt    date := get_cas_sys_dt;
  l_bp_row    INTEGER := wrk.srch_base_cvg;
  l_last_mth    NUMBER;
  l_result varchar2(500);
  l_count_mvy14 INTEGER := 0;
  l_count_mvy26 INTEGER := 0;
  l_count_mvy34 INTEGER := 0;
  l_count_mvy36 INTEGER := 0;
  l_fnd_valu_ded_mvy35       number;
  l_count_fa INTEGER;
  l_Strt_FA number;
  l_pol_num varchar2(500);
  l_old_reasn_cd varchar2(3) := '';

  CURSOR c_min_dur
    IS
      SELECT min(dur_fr)
      FROM  tcampaign_bonuses
      WHERE plan_code   = wrk.curr_pol.plan_code_base
      AND   plan_vers   = wrk.curr_pol.vers_num_base
      AND   crcy_code   = wrk.curr_pol.crcy_code
      and (band_fr = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt >= band_fr)
      and (band_to = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt < band_to)
      AND   cmpn_code   = c_cmpn_code_oanp;

BEGIN
  /*
  l_old_reasn_cd := fcn.Reasn_Code;
  fcn.Set_Reasn_Code('902');

  Do.Pl('Reasn_code= THAO:' || Fcn.Reasn_code);
  */ -- HAI VO
  IF pi_bns_typ = CD.LOYAL_BNS_2019UL THEN
    --init wrk policy value
     l_pol_num := wrk.curr_pol.pol_num;
    --get index base pol (primary)
    l_cvg_base_idx := wrk.Srch_Base_Cvg;
    -- get min duration for campaign bonus
    OPEN c_min_dur;
      FETCH c_min_dur into l_min_dur;
      IF c_min_dur%NOTFOUND THEN
        l_min_dur := 0;
      END IF;
      CLOSE c_min_dur;
    --check campaign bonus for plan code
    OPEN is_calc_loyal_bns(pi_dur, l_cvg_base_idx);
    FETCH is_calc_loyal_bns
      into l_bonus_pct, l_period_dur;
    IF is_calc_loyal_bns%NOTFOUND THEN
      l_bonus_pct := 0;
    END IF;
    CLOSE is_calc_loyal_bns;
    --set avy number from 0 - 1 - 2
    l_Pol_Yr_Fr := Pi_Dur - NVL(l_Period_Dur,0);
    if Pi_Dur = l_Min_Dur then
      l_Pol_Yr_Fr := 0;
    end if;
    l_Pol_Yr_To   := Pi_Dur;
    --Calculate paid premium in review date
    l_Strt_Yr_Dt := Advance_Ptd(Wrk.Curr_Pol.Pol_Eff_Dt,
                                Wrk.Curr_Pol.Pol_Eff_Dt,
                                (l_Pol_Yr_Fr ) * 12);

    l_End_Yr_Dt_MVY14  := Advance_Ptd(l_Strt_Yr_Dt,
                                Wrk.Curr_Pol.Pol_Eff_Dt,
                                14);

    l_End_Yr_Dt_MVY26  := Advance_Ptd(l_Strt_Yr_Dt,
                                Wrk.Curr_Pol.Pol_Eff_Dt,
                                26);

    l_End_Yr_Dt_MVY34  := Advance_Ptd(l_Strt_Yr_Dt,
                                Wrk.Curr_Pol.Pol_Eff_Dt,
                                34);

    l_End_Yr_Dt_MVY36  := Advance_Ptd(l_Strt_Yr_Dt,
                                Wrk.Curr_Pol.Pol_Eff_Dt,
                                36);


    -- Check Base Premium must be paid on time at every AVY during the 3-year bonus review period
    select count(A.Pol_Num )  into l_count_mvy14
           from CAS.TSPECIAL_BONUS A
           Where A.PTD >=  l_End_Yr_Dt_MVY14
                 And A.POL_NUM = Wrk.Curr_Pol.Pol_Num
                 And A.Mth = (l_Pol_Yr_Fr * 12) +14
         AND plan_code  = wrk.curr_pol.plan_code_base;
    if l_count_mvy14 = 0 and l_Pol_Yr_Fr = 0 then
      l_count_mvy14 := 1;
    end if;

    select count(A.Pol_Num )  into l_count_mvy26
           from CAS.TSPECIAL_BONUS A
           Where A.PTD >= l_End_Yr_Dt_MVY26
                 And A.POL_NUM = Wrk.Curr_Pol.Pol_Num
                 And A.Mth = (l_Pol_Yr_Fr * 12) + 26
         AND plan_code  = wrk.curr_pol.plan_code_base;

    /*select count(A.Pol_Num )  into l_count_mvy36
           from CAS.TSPECIAL_BONUS A
           Where A.PTD >=   l_End_Yr_Dt_MVY36
                 And A.POL_NUM = Wrk.Curr_Pol.Pol_Num
                 And A.Mth = (l_Pol_Yr_Fr * 12) + 36
         AND plan_code  = wrk.curr_pol.plan_code_base;*/

    IF  wrk.curr_pol.last_pd_to_dt >=  l_End_Yr_Dt_MVY34 THEN
      l_count_mvy34 := 1;
    END IF;
   if NVL(l_count_mvy14,0) < 1 or  NVL(l_count_mvy26,0) < 1 /*or NVL(l_count_mvy36,0) < 1*/or NVL(l_count_mvy34,0) < 1 -- not full paid to all AVY
     then
      po_bonus_amt := 0;
      l_result    := l_result ||
                       chr(10)||'-Chưa đóng phí ';
     end if;

    -- FA at the time of bonus review is >= FA at the corresponding beginning of bonus review period
    Begin
      l_Strt_Fa := 0;
      Select get_pol_parm('ORIG_FACE_AMT_BASE',l_Pol_Num)
        Into l_Strt_Fa
        From dual;
      If l_Strt_Fa is null Then
          l_Strt_Fa := 0;
      End If;
    Exception when others then
      l_Strt_Fa := 0;
    end;

    /*For i in (Select a.FA
               From Cas.Tspecial_Bonus a
               Where a.Pol_Num = l_Pol_Num
               And a.Mth between  (l_Pol_Yr_Fr * 12 + 1) and (l_Pol_Yr_Fr * 12 + 36)
               And Plan_Code = Wrk.Curr_Pol.Plan_Code_Base)
    Loop*/
    /*For i in (Select a.Trxn_Amt FA
                 From Ttrxn_Histories a
                Where Pol_Num = l_Pol_Num
                  And Trxn_Cd = 'POLCHG'
                  And Fcn_Id = 'PCLALA306'
                  And Trxn_dt between l_Strt_Yr_Dt and l_End_Yr_Dt_MVY36)
    Loop*/
    For i in (Select Distinct Pol_Num,
                              Change_Date,
                              First_Value(Face_Amt) Over(Partition By Change_Date Order By Trxn_Dt Desc) Fa
                From Tpclala306
               Where Pol_Num = l_Pol_Num
                 And Chg_Mode In ('FA_DECREASE', 'FA_INCREASE')
                 And Change_Date between l_Strt_Yr_Dt and l_End_Yr_Dt_MVY36)
    Loop

      If l_Strt_Fa > i.FA then

        l_count_fa:=1;
        Exit;
      End if;
    End loop;

    if NVL(l_count_fa,0) > 0 then
      po_bonus_amt := 0;
     l_result    :=  l_result ||
                       chr(10)||'-Số tiền bảo hiểm hiện tại nhỏ hơn số tiền bảo hiểm đầu kỳ xem xét';
    end if;

    -- Policy is in force at the anniversary date and has not been lapsed during the review period
    --Only check no lapse for the Base Plan, no need to consider the Rider Plans
    if chk_pol_exists_lapse_trxn_logs(pi_pol_num      => Wrk.Curr_Pol.Pol_Num,
                               pi_start_dt          => l_Strt_Yr_Dt,
                               pi_end_dt          => l_Cas_Dt) = 'Y' then
       po_bonus_amt := 0;
       l_result    := l_result|| chr(10) || '-Đã từng bị mất hiệu lực ';
    end if;

    --No partial withdrawal from BAV during 3-year period prior to the review date of loyalty bonus, including AFPP process
    --No AFPP on BAV nor TAV
    if chk_pol_exists_trxn(pi_pol_num      => Wrk.Curr_Pol.Pol_Num,
                               pi_start_dt          => l_Strt_Yr_Dt,
                               pi_end_dt          => l_Cas_Dt,
                               pi_fnd_trxn_cd => CD.FUND_FND_TRXN_CD_PSU,
                               pi_prem_grp => CD.PREM_GRP_RBP) = 'Y'
        or chk_pol_exists_trxn(pi_pol_num      => Wrk.Curr_Pol.Pol_Num,
                               pi_start_dt          => l_Strt_Yr_Dt,
                               pi_end_dt          => l_Cas_Dt,
                               pi_fnd_trxn_cd => CD.FUND_TRXN_AFP,
                               pi_prem_grp => CD.PREM_GRP_RBP) = 'Y'
        or chk_pol_exists_trxn(pi_pol_num      => Wrk.Curr_Pol.Pol_Num,
                               pi_start_dt          => l_Strt_Yr_Dt,
                               pi_end_dt          => l_Cas_Dt,
                               pi_fnd_trxn_cd => CD.FUND_TRXN_AFP,
                               pi_prem_grp => CD.PREM_GRP_TUP) = 'Y'
       or chk_pol_exists_trxn(pi_pol_num      => Wrk.Curr_Pol.Pol_Num,
                               pi_start_dt          => l_Strt_Yr_Dt,
                               pi_end_dt          => l_Cas_Dt,
                               pi_fnd_trxn_cd => CD.FUND_TRXN_APPR,
                               pi_prem_grp => CD.PREM_GRP_RBP) = 'Y'
         or chk_pol_exists_trxn(pi_pol_num      => Wrk.Curr_Pol.Pol_Num,
                               pi_start_dt          => l_Strt_Yr_Dt,
                               pi_end_dt          => l_Cas_Dt,
                               pi_fnd_trxn_cd => CD.FUND_TRXN_APPR,
                               pi_prem_grp => CD.PREM_GRP_TUP) = 'Y'
        then
            po_bonus_amt := 0;
            l_result    := l_result ||
                            chr(10)|| '-Đã rút Giá trị tài khoản cơ bản';
      end if;

      --calc bonus
      if l_result is null then
        l_fnd_valu_mth := 0;
        l_count_mth := 0;
        /*For i in (Select Distinct Pol_Num, Vers_Num, trunc(valn_dt,'MM') valn_dt
                    From Tfund_Trxn_Histories
                   Where Pol_Num = l_pol_num
                     And Prem_Grp = cd.PREM_GRP_RBP
                     And Reasn_Cd = 805
                     And Fnd_Trxn_Cd In (cd.FUND_FND_TRXN_CD_DED, cd.FUND_FND_TRXN_CD_CAP)
                     And valn_dt between l_Strt_Yr_Dt and l_End_Yr_Dt_MVY36
                     order by 3)
        Loop
          l_fnd_valu_cap := 0;
          l_fnd_valu_ded := 0;
          l_count_fnd_ded:= 0;

          Begin
            For j in (Select t.To_Fnd_Bal
                        From Tfund_Trxn_Histories t
                       Where Pol_Num = i.Pol_Num
                         And Vers_Num = i.Vers_Num
                         And valn_dt between i.valn_dt and last_day(i.valn_dt)
                         And Reasn_Cd = 805
                         And Fnd_Trxn_Cd = Cd.Fund_Fnd_Trxn_Cd_Ded)
            loop
              l_count_fnd_ded := l_count_fnd_ded + 1;
              l_Fnd_Valu_Ded:=l_Fnd_Valu_Ded + j.To_Fnd_Bal;

            end loop;

          Exception
            When Others Then
              l_Fnd_Valu_Ded := 0;
              l_count_fnd_ded:= 0;
          End;

          if l_fnd_valu_ded = 0 then
            Begin
              Select Sum(t.To_Fnd_Bal)
                Into l_Fnd_Valu_Cap
                From Tfund_Trxn_Histories t
               Where Pol_Num = i.Pol_Num
                 And Vers_Num = i.Vers_Num
                 And valn_dt between i.valn_dt and last_day(i.valn_dt)
                 And Reasn_Cd = 805
                 And Fnd_Trxn_Cd = Cd.Fund_Fnd_Trxn_Cd_Cap;
              l_Fnd_Valu_Cap:=nvl(l_Fnd_Valu_Cap,0);
            Exception
              When Others Then
                l_Fnd_Valu_Cap := 0;
            End;
          end if;

          if l_fnd_valu_ded > 0  or l_fnd_valu_cap > 0 then
            l_count_mth := l_count_mth + greatest(l_count_fnd_ded,1);
            l_fnd_valu_mth := l_fnd_valu_mth + l_fnd_valu_ded + l_fnd_valu_cap;
            if l_count_mth=35 then
              l_fnd_valu_ded_mvy35:=l_fnd_valu_ded;
            end if;
          end if;
        End loop;

        if l_count_mth=35 then
          l_fnd_valu_mth:=l_fnd_valu_mth+l_fnd_valu_ded_mvy35;
          l_count_mth:=l_count_mth+1;
        end if;*/

       Select Sum(Tot_Fnd_Valu)
         Into l_Fnd_Valu_Mth
         From Ttot_Fnd_Values
        Where Pol_Num = l_Pol_Num
          And Rec_Typ = 'M'
          And Stat_Cd = Cd.Rec_Status_Active
          And Prem_Grp = Cd.Prem_Grp_Rbp
          And (Mth Between (Pi_Dur - l_Period_Dur) * 12 And
              ((Pi_Dur * 12) - 1));

        po_bonus_amt := l_bonus_pct / 100 * l_fnd_valu_mth /
                        (l_Period_Dur * 12);

       else
         po_bonus_amt := 0;
      end if;

  END IF;
  IF po_bonus_amt = 0 THEN
    wrk.gen_query_reg(pi_query_desc => 'Persistency bonus bonus_amt=' ||
                                       po_bonus_amt,
                      pi_trxn_cd    => l_trxn_cd);
   po_result := 'Hợp đồng không thỏa điều kiện thưởng duy trì hợp đồng vì   '||l_result ;
    return;
  else
     po_result := 'Hợp đồng thỏa điều kiện thưởng duy trì hợp đồng ';
  END IF;
  --HAI VO fcn.Set_Reasn_Code(l_old_reasn_cd);
End Calc_Loyaty_Bonus_2019UL;
-->>VNS-5049

--->>VPD-731_VPD-1030
  PROCEDURE calc_lbs (
    pi_dur      IN  NUMBER
   ,pi_asof_dt  IN  DATE
  )
  IS
    c_cmpn_code_oanp   CONSTANT VARCHAR2(10) := 'LBS_ORIGAP';
    l_tot_unit                  NUMBER       := 0;
    l_tot_valu                  NUMBER       := 0;
    l_tot_layer                 PLS_INTEGER  := 0;
    l_curr_layer                PLS_INTEGER  := 0;
    l_prop_amt                  NUMBER;
    l_left_bonus_amt            NUMBER;
    l_bonus_amt                 NUMBER;
    l_bonus_pct                 tcampaign_bonuses.bonus_pct%TYPE;
    l_result                    varchar(500);--VPD-731_VPD-1030
    l_orig_mode_prem            tpolicys_vn.pol_valu%TYPE;
    l_orig_pmt_mode             tpolicys_vn.pol_valu%TYPE;
    l_orig_face_amt_base        tpolicys_vn.pol_valu%TYPE;    --PJ10/0400-TUY001
    l_asof_dt                   DATE := pi_asof_dt;
    l_fnd_amt_dec               INTEGER; --VN-RPUL2-NGHIANGUYEN001
    l_bp_row                    INTEGER := wrk.srch_base_cvg; --PJ10/0400-TUY001
    l_fnd_valu_mth              NUMBER;                       --PJ10/0400-TUY001
    l_pol_lapse                 NUMBER;                       --PJ10/0400-TUY001
    l_tt_prem_load              number; --PJ12/0444
    x_prop_amt                  EXCEPTION;
    --<<VPD-22
    l_TUP_fnd_valu         order_fund.tbl_fund;
    l_loan_valu            number := 0;
    l_interest_loan        number := 0;
    -->>VPD-22
    --<<VPD-483
    l_Period_Dur           tcampaign_bonuses.period_dur%TYPE;
    l_Cas_Dt               date := get_cas_sys_dt;
    l_Pol_Yr_Fr            number;
    l_Pol_Yr_To            number;
    l_Strt_Yr_Dt           date;
    l_End_Yr_Dt            date;
    l_Rp_Required          number;
    l_Rp_Paid              number;
    l_Topup_Paid           number;
    l_Plan_Tol_Prem        number;
    l_min_dur              number(3);
    l_cvg_base_idx         number;
    -->>VPD-483
	l_pol_std              varchar2(20); --VNS-5048
    CURSOR is_calc_plan
          (pi_dur number) --PJ10/0400-TUY001
    IS
      --VPD-483 SELECT bonus_pct
      SELECT bonus_pct, period_dur
      FROM  tcampaign_bonuses
      WHERE plan_code   = wrk.curr_pol.plan_code_base
      AND   plan_vers   = wrk.curr_pol.vers_num_base
      AND   crcy_code   = wrk.curr_pol.crcy_code
      --<<VPD-483
      and (band_fr = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt >= band_fr)
      and (band_to = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt < band_to)
      -->>VPD-483
      AND   cmpn_code   = c_cmpn_code_oanp
      AND   pi_dur BETWEEN dur_fr AND dur_to
      ;
    ----------------------------------------------------------------------------
    CURSOR orig_anp ( p_mne_cd IN VARCHAR2 )
    IS
      SELECT pol_valu
      FROM  tpolicys_vn
      WHERE pol_num    = wrk.curr_pol.pol_num
      AND   pol_mne_cd = p_mne_cd
      ;
    --<<VPD-483
    ----------------------------------------------------------------------------
    CURSOR c_min_dur
    IS
      SELECT min(dur_fr)
      FROM  tcampaign_bonuses
      WHERE plan_code   = wrk.curr_pol.plan_code_base
      AND   plan_vers   = wrk.curr_pol.vers_num_base
      AND   crcy_code   = wrk.curr_pol.crcy_code
      --<<VPD-483
      and (band_fr = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt >= band_fr)
      and (band_to = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt < band_to)
      -->>VPD-483
      AND   cmpn_code   = c_cmpn_code_oanp
      ;
    -->>VPD-483
    ----------------------------------------------------------------------------
    FUNCTION get_fnd_valu_by_layer ( pi_fnd_id    IN  VARCHAR2
                                    ,pi_fnd_vers  IN  VARCHAR2
                                    ,pi_fnd_bal   IN  NUMBER
                                   )
      RETURN NUMBER
    IS
      l_fnd_curr         VARCHAR2(10);
      l_fnd_valu         NUMBER;
      l_fnd_pric         NUMBER;
      l_fnd_valu_curr    NUMBER;
      x_fnd_pric         EXCEPTION;
      x_curr_exchg       EXCEPTION;
    BEGIN
      l_fnd_pric := get_fnd_pric ( pi_fnd_id   => pi_fnd_id
                                  ,pi_fnd_vers => pi_fnd_vers
                                  ,pi_pric_ind => 'S'
                                  ,pi_valn_dt  => pi_asof_dt
                                  ,pi_mode     => 'Q'
                                );
      IF fcn.return_code <> 0 THEN
        RAISE x_fnd_pric;
      END IF;

      SELECT crcy_cd
      INTO  l_fnd_curr
      FROM  tfunds
      WHERE fnd_id   = pi_fnd_id
      AND   fnd_vers = pi_fnd_vers
      ;

      l_fnd_valu := l_fnd_pric * pi_fnd_bal;

      IF wrk.curr_pol.crcy_code <> l_fnd_curr THEN
        curr_exchg( pi_pol_num         => NULL
                   ,pi_fr_crcy         => l_fnd_curr
                   ,pi_to_crcy         => wrk.curr_pol.crcy_code
                   ,pi_eff_dt          => pi_asof_dt
                   ,pi_fr_amt          => l_fnd_valu
                   ,pi_acct_mne_cd_fr  => NULL
                   ,pi_acct_mne_cd_to  => NULL
                   ,pi_trxn_desc       => NULL
                   ,po_to_amt          => l_fnd_valu_curr
                   );
        IF fcn.return_code <> 0 THEN
          RAISE x_curr_exchg;
        END IF;
      ELSE
        l_fnd_valu_curr := l_fnd_valu;
      END IF;
      --dbms_output.put_line('l_fnd_valu/l_fnd_valu_curr:'||l_fnd_valu||'/'||l_fnd_valu_curr);
      RETURN l_fnd_valu_curr;
    EXCEPTION
      WHEN x_fnd_pric THEN
        fcn.set_return(fcn.return_code,'x_fnd_pric');
        RETURN NULL;
      WHEN x_curr_exchg THEN
        fcn.set_return(fcn.return_code,'x_curr_exchg');
        RETURN NULL;
      WHEN OTHERS THEN
        fcn.set_return(99,sqlcode);
        RETURN NULL;
    END get_fnd_valu_by_layer;
    --<<PJ12/0444
    function pol_exists_lapse(pi_asof_dt date,pi_dur number) return varchar2
    is
      l_review_fr_dt date;
    begin
      l_review_fr_dt  := wrk.curr_pol.pol_eff_dt;
      for i in 1..pi_dur loop
        open is_calc_plan(pi_dur-i);
        --VPD-483 fetch is_calc_plan into l_bonus_pct;
        fetch is_calc_plan into l_bonus_pct,l_period_dur;--VPD-483
        if is_calc_plan%FOUND then
          l_review_fr_dt := advance_ptd(wrk.curr_pol.pol_eff_dt, wrk.curr_pol.pol_eff_dt, 12 * (pi_dur-i))+1;
          exit;
         end if;
         close is_calc_plan;
      end loop;
      select count(*)
      into l_pol_lapse
      from ttrxn_logs
      where pol_num=wrk.curr_pol.pol_num
        and tbl_nm='TPOLICYS'
        and col_nm='POL_STAT_CD'
        and (new_valu = CD.STAT_LAPSE or old_valu = CD.STAT_LAPSE)
        and trxn_id between to_char(l_review_fr_dt,'yyyymmdd')||'0000000' and to_char(pi_asof_dt,'yyyymmdd')||'9999999';
      if l_pol_lapse>0 then
        return 'Y';
      else
        return 'N';
      end if;

   end pol_exists_lapse;
   -->>PJ12/0444
   --<<VPD-109
   function pol_exists_psu(pi_asof_dt date
                          --VPD-22 ,pi_dur number
                          ,pi_dur number default null--VPD-22
                          ,pi_prem_grp varchar2 default 'ALL'--VPD-22
                          ) return varchar2
    is
      l_review_fr_dt date;
      l_pol_psu    NUMBER;
    begin
      l_review_fr_dt  := wrk.curr_pol.pol_eff_dt;
      if pi_dur is not null then--VPD-22
        for i in 1..pi_dur loop
          open is_calc_plan(pi_dur-i);
          --VPD-483 fetch is_calc_plan into l_bonus_pct;
          fetch is_calc_plan into l_bonus_pct,l_period_dur;--VPD-483
          if is_calc_plan%FOUND then
            l_review_fr_dt := advance_ptd(wrk.curr_pol.pol_eff_dt, wrk.curr_pol.pol_eff_dt, 12 * (pi_dur-i))+1;
            exit;
           end if;
           close is_calc_plan;
        end loop;
      end if;--VPD-22
      select count(*)
      into l_pol_psu
      from
      (
        select 1
        from tfund_trxn_histories
        where pol_num = wrk.curr_pol.pol_num
          and fnd_trxn_cd = 'PSU'
          and trxn_dt between l_review_fr_dt and pi_asof_dt
          and (prem_grp = pi_prem_grp or pi_prem_grp = 'ALL')
        union all
        select 1
        from tfund_trxn
        where pol_num = wrk.curr_pol.pol_num
          and fnd_trxn_cd = 'PSU'
          and trxn_dt between l_review_fr_dt and pi_asof_dt
          and (prem_grp = pi_prem_grp or pi_prem_grp = 'ALL')
       );
      if l_pol_psu > 0 then
        return 'Y';
      else
        return 'N';
      end if;

   end pol_exists_psu;
   -->>VPD-109
    ----------------------------------------------------------------------------
  BEGIN --calc_lbs
    --dbms_output.put_line('calc_lbs...pi_dur:'||pi_dur);

    --PJ10/0400-TUY001 OPEN is_calc_plan;
    l_cvg_base_idx        := wrk.Srch_Base_Cvg;--VPD-483
    OPEN is_calc_plan(pi_dur); --PJ10/0400-TUY001
    --VPD-483 FETCH is_calc_plan into l_bonus_pct;
    FETCH is_calc_plan into l_bonus_pct,l_period_dur;--VPD-483
    IF is_calc_plan%NOTFOUND THEN
      l_bonus_pct := 0;
    END IF;
    CLOSE is_calc_plan;

    --MD14/0519 CTL_PARM.get('FUND_AMT_DEC', l_fnd_amt_dec); --VN-RPUL2-NGHIANGUYEN001
    --dbms_output.put_line('l_bonus_pct:'||l_bonus_pct);
    --<<MD14/0519
    ctl_parm.get( 'FUND_AMT_DEC'
                      ,wrk.curr_pol.crcy_code
                      ,wrk.curr_pol.plan_code_base
                      ,wrk.curr_pol.pol_eff_dt
                      ,l_fnd_amt_dec
                     );
    -->>MD14/0519

    IF l_bonus_pct > 0 THEN
      --<<PJ10/0400-TUY001
      l_orig_mode_prem      := GET_POL_PARM('ORIG_MODE_PREM',wrk.curr_pol.pol_num);
      l_orig_pmt_mode       := GET_POL_PARM('ORIG_PMT_MODE',wrk.curr_pol.pol_num);
      l_orig_face_amt_base  := GET_POL_PARM('ORIG_FACE_AMT_BASE',wrk.curr_pol.pol_num);
      -->>PJ10/0400-TUY001
      --<<VPD-483
      OPEN c_min_dur;
      FETCH c_min_dur into l_min_dur;
      IF c_min_dur%NOTFOUND THEN
        l_min_dur := 0;
      END IF;
      CLOSE c_min_dur;
      -->>VPD-483
      IF wrk.curr_plan(l_bp_row).loyal_bns = CD.LOYAL_BNS_ORIG_ANP THEN --PJ10/0400-TUY001
        IF is_over_tp ( wrk.curr_pol.pol_num ) <> 'N' THEN
          RETURN;
        END IF;

        -- Calc total bonus --
        /*--PJ10/0400-TUY001
        OPEN orig_anp ( 'ORIG_MODE_PREM' );
        FETCH orig_anp INTO l_orig_mode_prem;
        CLOSE orig_anp;

        OPEN orig_anp ( 'ORIG_PMT_MODE' );
        FETCH orig_anp INTO l_orig_pmt_mode;
        CLOSE orig_anp;
        */--PJ10/0400-TUY001
        -- VN-RPUL2-SIT-B7-002  l_bonus_amt := l_bonus_pct
        l_bonus_amt := l_bonus_pct / 100  -- VN-RPUL2-SIT-B7-002
                     * TO_NUMBER(l_orig_mode_prem)
                     * 12 / TO_NUMBER(l_orig_pmt_mode)
                     ;
      --<<PJ10/0400-TUY001
      ELSIF wrk.curr_plan(l_bp_row).loyal_bns = CD.LOYAL_BNS_AVG_FND_VALU THEN
        if pi_asof_dt > wrk.curr_pol.last_pd_to_dt -- not full paid to current AVY
          or GET_WORKING_DATE(get_cas_sys_dt,-1)>= pi_asof_dt -- AVY is not today
          or (wrk.curr_cvg(l_bp_row).cvg_prem*GET_PMT_MODE_VAL(wrk.curr_pol.pmt_mode)) < (TO_NUMBER(l_orig_mode_prem) * GET_PMT_MODE_VAL(l_orig_pmt_mode))
          or wrk.curr_cvg(l_bp_row).face_amt < TO_NUMBER(l_orig_face_amt_base)
        then
          l_bonus_amt := 0;
        else
          -- check lapse
          /*--PJ12/0444
          declare
            l_review_fr_dt date := wrk.curr_pol.pol_eff_dt;
          begin
            for i in 1..pi_dur loop
              open is_calc_plan(pi_dur-i);
              fetch is_calc_plan into l_bonus_pct;
              if is_calc_plan%FOUND then
                l_review_fr_dt := advance_ptd(wrk.curr_pol.pol_eff_dt, wrk.curr_pol.pol_eff_dt, 12 * (pi_dur-i))+1;
                exit;
              end if;
              close is_calc_plan;
            end loop;
            select count(*)
              into l_pol_lapse
              from ttrxn_logs
              where pol_num=wrk.curr_pol.pol_num
                  and tbl_nm='TPOLICYS'
                  and col_nm='POL_STAT_CD'
                  --PJ10/0400-PIII and new_valu='B'
                  and (new_valu = CD.STAT_LAPSE or old_valu = CD.STAT_LAPSE) --PJ10/0400-PIII
                  and trxn_id between to_char(l_review_fr_dt,'yyyymmdd')||'0000000' and to_char(pi_asof_dt,'yyyymmdd')||'9999999';
          end;
          if l_pol_lapse>0 then
          */--PJ12/0444
          if pol_exists_lapse(pi_asof_dt,pi_dur)='Y' then
            l_bonus_amt := 0;
          else
            select sum(TOT_FND_VALU)
              into l_fnd_valu_mth
              from ttot_fnd_values
              where pol_num = wrk.curr_pol.pol_num
                and rec_typ = 'M'
                and stat_cd = CD.REC_STATUS_ACTIVE
                and (mth between ((pi_dur-1)*12+1) and pi_dur*12);

            l_bonus_amt := l_bonus_pct / 100*l_fnd_valu_mth/12;
          end if;
        end if;
      --<<PJ12/0444
      ELSIF wrk.curr_plan(l_bp_row).loyal_bns = CD.LOYAL_BNS_BS_PREM_LOAD THEN
        --<<VNS-5048
        Begin
          Select Cvg_Stat_Cd
            Into l_Pol_Std
            From Tcoverages
           Where Pol_Num = Wrk.Curr_Pol.Pol_Num
             And Cli_Num = Wrk.Curr_Cvg(l_Bp_Row).Cli_Num
             And Plan_Code = Wrk.Curr_Cvg(l_Bp_Row).Plan_Code
             And Vers_Num = Wrk.Curr_Cvg(l_Bp_Row).Vers_Num;
        Exception
          When Others Then
            l_Pol_Std := '-1';
        End;

        if wrk.curr_cvg(l_bp_row).cvg_stat_cd not in ( '3','H')  then -- cvg_stat_cd=3 - Trả phí toàn phần, H - Đáo hạn HĐ
          l_bonus_amt := 0;
        elsif (wrk.curr_cvg(l_bp_row).cvg_stat_cd = 'H' and l_pol_std <> '3') then
          l_bonus_amt := 0;
        elsif wrk.curr_cvg(l_bp_row).cvg_stat_cd = '3' or (wrk.curr_cvg(l_bp_row).cvg_stat_cd = 'H' and l_pol_std = '3') then
        -->>VNS-5048
			if GET_WORKING_DATE(get_cas_sys_dt,-1)>= pi_asof_dt -- AVY is not today
			   or wrk.curr_cvg(l_bp_row).face_amt < TO_NUMBER(l_orig_face_amt_base)
			then
			  l_bonus_amt := 0;
			else
			-- check lapse
			  if pol_exists_lapse(pi_asof_dt,pi_dur)='Y' then
				l_bonus_amt := 0;
			  else
				select sum(chrg_amt) into l_tt_prem_load
				from tcharge_histories
				where chrg_cat='FE-LOAD'
				  and undo_trxn_id is null
				  and plan_code = wrk.curr_pol.plan_code_base
				  and plan_vers = wrk.curr_pol.vers_num_base
				  and chrg_lyr<>'A'
				  and pol_num = wrk.curr_pol.pol_num;

				l_bonus_amt := l_bonus_pct*l_tt_prem_load/ 100;
			  end if;
			end if;
		--<<VNS-5048
        end if;
        -->>VNS-5048
      -->>PJ12/0444
      --<<VPD-109
      ELSIF wrk.curr_plan(l_bp_row).loyal_bns = CD.LOYAL_BNS_GRP_UL THEN
        if pi_asof_dt > wrk.curr_pol.last_pd_to_dt -- not full paid to current AVY
          or GET_WORKING_DATE(get_cas_sys_dt,-1)>= pi_asof_dt -- AVY is not today
          or wrk.curr_cvg(l_bp_row).face_amt < TO_NUMBER(l_orig_face_amt_base)
        then
          l_bonus_amt := 0;
        else
          if pol_exists_lapse(pi_asof_dt,pi_dur) = 'Y' or pol_exists_psu(pi_asof_dt,pi_dur) = 'Y' then
            l_bonus_amt := 0;
          else
            select sum(TOT_FND_VALU)
              into l_fnd_valu_mth
              from ttot_fnd_values
              where pol_num = wrk.curr_pol.pol_num
                and rec_typ = 'M'
                and stat_cd = CD.REC_STATUS_ACTIVE
                --VPD-483 and (mth between ((pi_dur-1)*12+1) and pi_dur*12);
                and (mth between ((pi_dur-l_period_dur)*12+1) and pi_dur*12);--VPD-483

            l_bonus_amt := l_bonus_pct / 100*l_fnd_valu_mth/60;
          end if;
        end if;
      -->>VPD-109
      --<<VPD-22
      ELSIF wrk.curr_plan(l_bp_row).loyal_bns = CD.LOYAL_BNS_AUL THEN
        if pol_exists_psu(pi_asof_dt   => pi_asof_dt
                          ,pi_dur      => null
                          ,pi_prem_grp => cd.PREM_GRP_RBP
                         ) = 'Y' then
          l_bonus_amt := 0;
        else
          l_loan_valu := WRK.CURR_LOAN.LOAN_BAL;
          l_TUP_fnd_valu := order_fund.get_fnd_valu(pi_pol_num  => wrk.curr_pol.pol_num
                             ,pi_fnd_id   => NULL
                             ,pi_fnd_vers => NULL
                             ,pi_valn_dt  => wrk.curr_pol.lst_fnd_valn_dt
                             ,pi_mode     => 'Q'
                             ,pi_prem_grp	=>	CD.PREM_GRP_TUP
                             );
          if nvl(l_loan_valu,0) > 0 then
              l_interest_loan := calc_int(cd.int_rt_loan_int
                                          ,WRK.CURR_LOAN.LOAN_BAL
                                          ,WRK.CURR_LOAN.LOAN_ACTV_DT
                                          ,pi_asof_dt
                                          ,NULL
                                          ,wrk.curr_pol.plan_code_base
                                          );
           end if;
           if nvl(l_loan_valu,0) + nvl(l_interest_loan,0) > nvl(l_TUP_fnd_valu(1).tot_fnd_valu,0) then
             l_bonus_amt := 0;
           else
              select sum(TOT_FND_VALU)
                into l_fnd_valu_mth
                from ttot_fnd_values
                where pol_num = wrk.curr_pol.pol_num
                  and rec_typ = 'M'
                  and stat_cd = CD.REC_STATUS_ACTIVE
                  and prem_grp = CD.PREM_GRP_RBP
                  --VPD-483 and (mth between ((pi_dur-1)*12+1) and pi_dur*12);
                  and (mth between ((pi_dur-l_period_dur)*12+1) and pi_dur*12);--VPD-483

              l_bonus_amt := l_bonus_pct / 100*l_fnd_valu_mth/72;
           end if;
        end if;
      -->>VPD-22
      --<<VPD-483
      ELSIF wrk.curr_plan(l_bp_row).loyal_bns = CD.LOYAL_BNS_NEW_UL THEN
        --<<VPD-731_VPD-1030
        /*
        --Calculate require premium in review date
        l_Pol_Yr_Fr := Pi_Dur - l_Period_Dur;
        --Calculate for the first review
        if Pi_Dur = l_Min_Dur then
           l_Pol_Yr_Fr := 0;
        end if;
        l_Pol_Yr_To := Pi_Dur;
        l_Rp_Required := pkg_ul_flexible.Get_Rp_Requied(wrk.curr_pol.pol_num
                                                       ,(l_Pol_Yr_Fr) * 12 + 1
                                                       ,l_Pol_Yr_To * 12
                                                       ,'RP'
                                                       );
        --Calculate paid premium in review date
        l_Strt_Yr_Dt := Advance_Ptd(Wrk.Curr_Pol.Pol_Eff_Dt, Wrk.Curr_Pol.Pol_Eff_Dt, (l_Pol_Yr_Fr + 1) * 12);
        l_End_Yr_Dt  := Advance_Ptd(l_Strt_Yr_Dt, Wrk.Curr_Pol.Pol_Eff_Dt, l_Pol_Yr_To - 12) - 1;

        ctl_parm.get('PLAN_TOL_PREM', Wrk.Curr_Pol.Crcy_Code, Wrk.Curr_Pol.Plan_Code_Base, l_Cas_Dt, l_Plan_Tol_Prem);
        -- Total regular premium paid in review date
        l_Rp_Paid := pkg_ul_flexible.Get_Premium_Paid(Wrk.Curr_Pol.Pol_Num, l_Pol_Yr_Fr + 1, l_Pol_Yr_To, NULL, NULL, 'RP');

        -- Total topup premium paid in review date
        l_Topup_Paid := pkg_ul_flexible.Get_Premium_Paid(Wrk.Curr_Pol.Pol_Num, l_Pol_Yr_Fr + 1, l_Pol_Yr_To, l_Strt_Yr_Dt, l_End_Yr_Dt, 'TUP');

        if l_Rp_paid + l_Topup_Paid >= l_Rp_Required - l_Plan_Tol_Prem * (l_Pol_Yr_To - l_Pol_Yr_Fr) -- not full paid to current AVY
          or GET_WORKING_DATE(l_cas_dt,-1)>= pi_asof_dt -- AVY is not today
          or wrk.curr_cvg(l_bp_row).face_amt < TO_NUMBER(l_orig_face_amt_base)
        then
          l_bonus_amt := 0;
        else
          if pol_exists_lapse(pi_asof_dt,pi_dur) = 'Y' or pol_exists_psu(pi_asof_dt,pi_dur) = 'Y' then
            l_bonus_amt := 0;
          else
            select sum(TOT_FND_VALU)
              into l_fnd_valu_mth
              from ttot_fnd_values
              where pol_num = wrk.curr_pol.pol_num
                and rec_typ = 'M'
                and stat_cd = CD.REC_STATUS_ACTIVE
                and (mth between ((pi_dur-l_Period_Dur)*12+1) and pi_dur*12);

            l_bonus_amt := l_bonus_pct / 100*l_fnd_valu_mth/(l_Period_Dur * 12);
          end if;
        end if;
      -->>VPD-483
      */

      -->>VPD-731_VPD-1030
      calc_loyaty_bonus(wrk.curr_plan(l_bp_row).loyal_bns,pi_dur, pi_asof_dt, l_bonus_amt, l_result,'Y');---VPD-731_VPD-1030
	  --<<VNS-400
      ELSIF wrk.curr_plan(l_bp_row).loyal_bns = CD.LOYAL_BNS_RUV_02_03 THEN
            calc_loyaty_bonus_ruv_2_3(wrk.curr_plan(l_bp_row).loyal_bns,pi_dur, pi_asof_dt, l_bonus_amt, l_result,'Y');
      -->>VNS-400
	  --<<VNS-5049
      ELSIF wrk.curr_plan(l_bp_row).loyal_bns = CD.LOYAL_BNS_2019UL THEN
            calc_loyaty_bonus_2019ul(wrk.curr_plan(l_bp_row).loyal_bns,pi_dur, pi_asof_dt, l_bonus_amt, l_result,'Y');
      -->>VNS-5049
      ELSE
        l_bonus_amt := 0;
      END IF;

      IF l_bonus_amt = 0 THEN
        wrk.gen_query_reg (pi_query_desc => 'Persistency bonus bonus_amt=' || l_bonus_amt,
                           pi_trxn_cd   => l_trxn_cd);
        return;
      END IF;
      -->>PJ10/0400-TUY001
      l_bonus_amt := round(l_bonus_amt, l_fnd_amt_dec); --VN-RPUL2-NGHIANGUYEN001
      --dbms_output.put_line ( 'l_orig_mode_prem/l_orig_pmt_mode/l_bonus_pct:'||l_orig_mode_prem||'/'||l_orig_pmt_mode||'/'||l_bonus_pct);

      -- Calc total unit --
      FOR i IN 1..wrk.curr_fnd_lay.count
      LOOP
        --VPD-22 IF wrk.curr_fnd_lay(i).stat_cd = 'A' THEN
        IF wrk.curr_fnd_lay(i).stat_cd = 'A' and wrk.curr_fnd_lay(i).prem_grp = cd.PREM_GRP_RBP --VPD-22
          and wrk.curr_fnd_lay(i).FNd_BAL <> 0 THEN-->>VPD-731_VPD-1030
          --l_tot_unit := l_tot_unit
          --            + wrk.curr_fnd_lay(i).fnd_bal
          --            ;
          l_tot_valu := l_tot_valu + get_fnd_valu_by_layer (
                                        pi_fnd_id   => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_id)
                                       ,pi_fnd_vers => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_vers)
                                       ,pi_fnd_bal  => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_bal)
                                      );
          l_tot_layer := l_tot_layer + 1;
        END IF;
      END LOOP;
      --dbms_output.put_line ( 'l_tot_unit/l_tot_layer:'||l_tot_unit||'/'||l_tot_layer);

      -- Allocate bonus --
      l_left_bonus_amt := l_bonus_amt;
      FOR i IN 1..wrk.curr_fnd_lay.count
      LOOP
        --VPD-22 IF wrk.curr_fnd_lay(i).stat_cd = 'A' THEN
        IF wrk.curr_fnd_lay(i).stat_cd = 'A' and wrk.curr_fnd_lay(i).prem_grp = cd.PREM_GRP_RBP --VPD-22
          and wrk.curr_fnd_lay(i).FNd_BAL <> 0 THEN-->>VPD-1870
          l_curr_layer := l_curr_layer + 1;
          IF l_curr_layer = l_tot_layer THEN --last layer
            l_prop_amt := l_left_bonus_amt;
          ELSE
            l_prop_amt := l_bonus_amt
                       --*  wrk.curr_fnd_lay(i).fnd_bal
                       --/ l_tot_unit
                         * get_fnd_valu_by_layer (
                              pi_fnd_id   => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_id)
                             ,pi_fnd_vers => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_vers)
                             ,pi_fnd_bal  => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_bal)
                            )
                         / l_tot_valu
                       ;
            l_prop_amt := round(l_prop_amt, l_fnd_amt_dec); --VN-RPUL2-NGHIANGUYEN001
            -- VN-RPUL2-CH05-B7-002  l_left_bonus_amt := l_bonus_amt - l_prop_amt;
            l_left_bonus_amt := l_left_bonus_amt - l_prop_amt;  -- VN-RPUL2-CH05-B7-002
          END IF;
          IF NVL(l_prop_amt,0) <= 0 THEN
            -- dbms_output.put_line('l_prop_amt:'||l_prop_amt);
            RAISE x_prop_amt;
          END IF;

          wrk.gen_fnd_lay_prem_trxn( pi_pol_num      => wrk.curr_pol.pol_num
                                    ,pi_layer_eff_dt => ByReftoByValue.convert(wrk.curr_fnd_lay(i).layer_eff_dt)
                                    ,pi_layer_typ    => ByReftoByValue.convert(wrk.curr_fnd_lay(i).layer_typ)
                                    ,pi_trxn_id      => fcn.trxn_id
                                    ,pi_prem_amt     => l_prop_amt
                                    -- VN-RPUL2-CH05-B7-002  ,pi_prem_acct    => 'LOYLBNSC' --need change later
                                    ,pi_prem_acct    => 'PERBNEXP'  -- VN-RPUL2-CH05-B7-002
                                   );
          --<<VPD-109
          l_pol_mth := floor(months_between(wrk.curr_pol.last_pd_to_dt,wrk.curr_pol.pol_eff_dt)) + 1;
          if is_pol_contribution(wrk.curr_pol.pol_num,wrk.curr_fnd_lay(i).prem_grp,l_pol_mth) = 'Y' then
             for c_map in c_prem_grp_cont_mappings(wrk.curr_pol.pol_num,wrk.curr_fnd_lay(i).prem_grp,l_pol_mth) loop
                 order_fund.fund_order(  pi_pol_num         => wrk.curr_pol.pol_num
                                        ,pi_trxn_cd         => l_trxn_cd
                                        ,pi_valn_dt         => l_asof_dt
                                        ,pi_user_id         => user
                                        ,pi_reasn_cd        => fcn.reasn_code
                                        ,pi_fnd_trxn_code   => cd.fund_fnd_trxn_cd_bns
                                        ,pi_dealing_basis   => 'A'
                                        ,pi_dealing_amount  => l_prop_amt * c_map.cont_valu / 100
                                        ,pi_crcy_code       => wrk.curr_pol.crcy_code
                                        ,pi_trxn_id         => fcn.trxn_id
                                        ,pi_fnd_id          => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_id)
                                        ,pi_fnd_vers        => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_vers)
                                        ,pi_cli_num         => NULL
                                        ,pi_plan_code       => NULL
                                        ,pi_vers_num        => NULL
                                        ,pi_cvg_eff_dt      => NULL
                                        ,pi_trxn_dt         => get_real_cas_dt
                                        ,pi_prem_acct       => 'PERBNEXP'
                                        ,pi_prem_grp        => c_map.prem_grp_map
                                        );
             end loop;
          else
          -->>VPD-109
            order_fund.fund_order( pi_pol_num         => wrk.curr_pol.pol_num
                                  ,pi_trxn_cd         => l_trxn_cd
                                  ,pi_valn_dt         => l_asof_dt
                                  ,pi_user_id         => user
                                  ,pi_reasn_cd        => fcn.reasn_code
                                  ,pi_fnd_trxn_code   => cd.fund_fnd_trxn_cd_bns
                                  ,pi_dealing_basis   => 'A'
                                  ,pi_dealing_amount  => l_prop_amt
                                  ,pi_crcy_code       => wrk.curr_pol.crcy_code
                                  ,pi_trxn_id         => fcn.trxn_id
                                  ,pi_fnd_id          => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_id)
                                  ,pi_fnd_vers        => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_vers)
                                  ,pi_cli_num         => NULL
                                  ,pi_plan_code       => NULL
                                  ,pi_vers_num        => NULL
                                  ,pi_cvg_eff_dt      => NULL
                                  ,pi_trxn_dt         => get_real_cas_dt
                                  -- VN-RPUL2-CH05-B7-002  ,pi_prem_acct       => 'LOYLBNSC' --need change later
                                  ,pi_prem_acct       => 'PERBNEXP'  -- VN-RPUL2-CH05-B7-002
                                  ,pi_prem_grp        => ByReftoByValue.convert(wrk.curr_fnd_lay(i).prem_grp)
                                  );
          end if;--VPD-109
        END IF;
      END LOOP;

      wrk.gen_trxn_hist( pi_trxn_seq   => get_trxn_seq
                        ,pi_trxn_desc  => s_message.get_message(6509,TO_CHAR(l_bonus_amt))
                        ,pi_trxn_cd    => l_trxn_cd
                        ,pi_trxn_amt   => l_bonus_amt
                        ,pi_pd_to_dt   => NULL
                        ,pi_eff_dt     => l_asof_dt
                        ,pi_fcn_id     => NULL
                        ,pi_user_input => 'N'
                       );
    END IF; --l_bonus_pct > 0
  EXCEPTION
    WHEN x_prop_amt THEN
      DBMS_OUTPUT.PUT_LINE('x_prop_amt:'||fcn.return_code);
    WHEN OTHERS THEN
      fcn.set_return(99);
      DBMS_OUTPUT.PUT_LINE(substr(sqlcode||'-'||sqlerrm,1,100));
      wrk.gen_query_reg ( pi_query_desc => substr(sqlcode||'-'||sqlerrm,1,100)
                         ,pi_trxn_cd    => l_trxn_cd
                        );
  END calc_lbs;
  -->> VN-RPUL2-CH06
  --<<VPD-22--VPD-132
  PROCEDURE Medical_Check_Up(pi_asof_dt in DATE
                           )
    is
      l_built_in_count  number := 0;
      l_clm_count       number := 0;
      l_bonus_amt        number := 0;
      l_last_avy_dt     date;
      l_tot_valu                  NUMBER       := 0;
      l_tot_layer                 PLS_INTEGER  := 0;
      l_curr_layer                PLS_INTEGER  := 0;
      l_prop_amt                  NUMBER;
      l_left_bonus_amt            NUMBER;
      l_asof_dt                   DATE := pi_asof_dt;
      l_fnd_amt_dec               INTEGER;
      x_prop_amt                  EXCEPTION;

      FUNCTION get_fnd_valu_by_layer ( pi_fnd_id    IN  VARCHAR2
                                    ,pi_fnd_vers  IN  VARCHAR2
                                    ,pi_fnd_bal   IN  NUMBER
                                   )
      RETURN NUMBER
      IS
        l_fnd_curr         VARCHAR2(10);
        l_fnd_valu         NUMBER;
        l_fnd_pric         NUMBER;
        l_fnd_valu_curr    NUMBER;
        x_fnd_pric         EXCEPTION;
        x_curr_exchg       EXCEPTION;
      BEGIN
        l_fnd_pric := get_fnd_pric ( pi_fnd_id   => pi_fnd_id
                                    ,pi_fnd_vers => pi_fnd_vers
                                    ,pi_pric_ind => 'S'
                                    ,pi_valn_dt  => pi_asof_dt
                                    ,pi_mode     => 'Q'
                                  );
        IF fcn.return_code <> 0 THEN
          RAISE x_fnd_pric;
        END IF;

        SELECT crcy_cd
        INTO  l_fnd_curr
        FROM  tfunds
        WHERE fnd_id   = pi_fnd_id
        AND   fnd_vers = pi_fnd_vers
        ;

        l_fnd_valu := l_fnd_pric * pi_fnd_bal;

        IF wrk.curr_pol.crcy_code <> l_fnd_curr THEN
          curr_exchg( pi_pol_num         => NULL
                     ,pi_fr_crcy         => l_fnd_curr
                     ,pi_to_crcy         => wrk.curr_pol.crcy_code
                     ,pi_eff_dt          => pi_asof_dt
                     ,pi_fr_amt          => l_fnd_valu
                     ,pi_acct_mne_cd_fr  => NULL
                     ,pi_acct_mne_cd_to  => NULL
                     ,pi_trxn_desc       => NULL
                     ,po_to_amt          => l_fnd_valu_curr
                     );
          IF fcn.return_code <> 0 THEN
            RAISE x_curr_exchg;
          END IF;
        ELSE
          l_fnd_valu_curr := l_fnd_valu;
        END IF;
        RETURN l_fnd_valu_curr;
      EXCEPTION
        WHEN x_fnd_pric THEN
          fcn.set_return(fcn.return_code,'x_fnd_pric');
          RETURN NULL;
        WHEN x_curr_exchg THEN
          fcn.set_return(fcn.return_code,'x_curr_exchg');
          RETURN NULL;
        WHEN OTHERS THEN
          fcn.set_return(99,sqlcode);
          RETURN NULL;
      END get_fnd_valu_by_layer;

    begin
      --Check co medical check up khong
      select count(*) into l_built_in_count
      from tpol_bnft_built_in
      where pol_num = wrk.curr_pol.pol_num
      and built_in_cvg_clas = 'D'
      and stat_code = 'A';
      ctl_parm.get( 'FUND_AMT_DEC'
                    ,wrk.curr_pol.crcy_code
                    ,wrk.curr_pol.plan_code_base
                    ,wrk.curr_pol.pol_eff_dt
                    ,l_fnd_amt_dec
                   );
      if l_built_in_count > 0 then
        l_last_avy_dt := advance_ptd(pi_asof_dt, wrk.curr_pol.pol_eff_dt, -12);
        --Check co claim hay khong
         select count(*) into l_clm_count
        from tclaim_details cde
             ,tclient_policy_links cpl--VPD-711--VPD-832
        --VPD-711--VPD-832 where clm_code in ('11')
        --VPD-7634 where clm_code in ('07','11')--VPD-711--VPD-832
		--VPD-7893 where clm_code in ('07','11','38') --VPD-7634
		where clm_code in ('07','11','38','51','50') --VPD-7893
        and cde.pol_num = wrk.curr_pol.pol_num
        --VPD-711--VPD-832 and clm_eff_dt between l_last_avy_dt and l_asof_dt - 1;
        and clm_stat_code = 'A' and clm_aprov_dt between l_last_avy_dt and l_asof_dt - 1--VPD-711--VPD-832
        --<<VPD-711--VPD-832
        and cde.pol_num = cpl.pol_num
        and cde.cli_num = cpl.cli_num
        and cpl.link_typ = 'I'
        -->>VPD-711--VPD-832
        ;
        if l_clm_count <= 0 then
          l_bonus_amt := least(wrk.curr_cvg(wrk.Srch_base_cvg).face_amt * 0.2 / 100,3000);
        end if;
      end if;
      if l_bonus_amt > 0 then
        FOR i IN 1..wrk.curr_fnd_lay.count
        LOOP
          --VPD-483 IF wrk.curr_fnd_lay(i).stat_cd = 'A' and wrk.curr_fnd_lay(i).prem_grp = cd.PREM_GRP_TUP THEN
          IF wrk.curr_fnd_lay(i).stat_cd = 'A' and wrk.curr_fnd_lay(i).prem_grp = cd.PREM_GRP_RBP THEN--VPD-483
            l_tot_valu := l_tot_valu + get_fnd_valu_by_layer (
                                          pi_fnd_id   => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_id)
                                         ,pi_fnd_vers => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_vers)
                                         ,pi_fnd_bal  => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_bal)
                                        );
            l_tot_layer := l_tot_layer + 1;
          END IF;
        END LOOP;
        -- Allocate bonus --
        l_left_bonus_amt := l_bonus_amt;
        FOR i IN 1..wrk.curr_fnd_lay.count
        LOOP
          --VPD-483 IF wrk.curr_fnd_lay(i).stat_cd = 'A' and wrk.curr_fnd_lay(i).prem_grp = cd.PREM_GRP_TUP THEN
          IF wrk.curr_fnd_lay(i).stat_cd = 'A' and wrk.curr_fnd_lay(i).prem_grp = cd.PREM_GRP_RBP THEN--VPD-483
            l_curr_layer := l_curr_layer + 1;
            IF l_curr_layer = l_tot_layer THEN --last layer
              l_prop_amt := l_left_bonus_amt;
            ELSE
              l_prop_amt := l_bonus_amt
                           * get_fnd_valu_by_layer (
                                pi_fnd_id   => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_id)
                               ,pi_fnd_vers => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_vers)
                               ,pi_fnd_bal  => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_bal)
                              )
                           / l_tot_valu
                         ;
              l_prop_amt := round(l_prop_amt, l_fnd_amt_dec);
              l_left_bonus_amt := l_left_bonus_amt - l_prop_amt;
            END IF;
            IF NVL(l_prop_amt,0) <= 0 THEN
              RAISE x_prop_amt;
            END IF;
            wrk.gen_fnd_lay_prem_trxn( pi_pol_num      => wrk.curr_pol.pol_num
                                      ,pi_layer_eff_dt => ByReftoByValue.convert(wrk.curr_fnd_lay(i).layer_eff_dt)
                                      --VPD-483 ,pi_layer_typ    => ByReftoByValue.convert(wrk.curr_fnd_lay(i).layer_typ)
                                      ,pi_layer_typ    => 'A'--VPD-483
                                      ,pi_trxn_id      => fcn.trxn_id
                                      ,pi_prem_amt     => l_prop_amt
                                      ,pi_prem_acct    => 'CLBMCASH'
                                     );

            order_fund.fund_order( pi_pol_num         => wrk.curr_pol.pol_num
                                  ,pi_trxn_cd         => l_trxn_cd
                                  ,pi_valn_dt         => l_asof_dt
                                  ,pi_user_id         => user
                                   --VPD-711--VPD-832 ,pi_reasn_cd        => '508'
                                  ,pi_reasn_cd        => '950' --VPD-711--VPD-832
                                  --VPD-711--VPD-832 ,pi_fnd_trxn_code   => cd.fund_fnd_trxn_cd_bns
                                  ,pi_fnd_trxn_code   => cd.fund_fnd_trxn_cd_med--VPD-711--VPD-832
                                  ,pi_dealing_basis   => 'A'
                                  ,pi_dealing_amount  => l_prop_amt
                                  ,pi_crcy_code       => wrk.curr_pol.crcy_code
                                  ,pi_trxn_id         => fcn.trxn_id
                                  ,pi_fnd_id          => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_id)
                                  ,pi_fnd_vers        => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_vers)
                                  ,pi_cli_num         => NULL
                                  ,pi_plan_code       => NULL
                                  ,pi_vers_num        => NULL
                                  ,pi_cvg_eff_dt      => NULL
                                  ,pi_trxn_dt         => l_asof_dt
                                  ,pi_prem_acct       => 'CLBMCASH'
                                  --VPD-483 ,pi_prem_grp        => ByReftoByValue.convert(wrk.curr_fnd_lay(i).prem_grp)
                                  ,pi_prem_grp        => cd.PREM_GRP_TUP--VPD-483
                                  );
          END IF;
        END LOOP;
        wrk.gen_trxn_hist( pi_trxn_seq   => get_trxn_seq
                        ,pi_trxn_desc  => 'Medical check up will be paid'
                        ,pi_trxn_cd    => l_trxn_cd
                        ,pi_trxn_amt   => l_bonus_amt
                        ,pi_pd_to_dt   => NULL
                        ,pi_eff_dt     => l_asof_dt
                        ,pi_fcn_id     => NULL
                        ,pi_user_input => 'N'
                       );
      end if;
    EXCEPTION
      WHEN x_prop_amt THEN
        null;
      WHEN OTHERS THEN
        fcn.set_return(99);
        wrk.gen_query_reg ( pi_query_desc => substr(sqlcode||'-'||sqlerrm,1,100)
                           ,pi_trxn_cd    => l_trxn_cd
                          );
    end Medical_Check_Up;
  -->>VPD-22--VPD-132
  --<<VPD-22--VPD-131
  PROCEDURE calc_sbs (
    pi_dur      IN  NUMBER
   ,pi_asof_dt  IN  DATE
  )
  IS
    c_cmpn_code_sps   CONSTANT VARCHAR2(10) := 'SBS_ORIGAP';
    l_tot_valu                  NUMBER       := 0;
    l_tot_layer                 PLS_INTEGER  := 0;
    l_curr_layer                PLS_INTEGER  := 0;
    l_prop_amt                  NUMBER;
    l_left_bonus_amt            NUMBER;
    l_bonus_amt                 NUMBER;
    l_bonus_pct                 tcampaign_bonuses.bonus_pct%TYPE;
    l_asof_dt                   DATE := pi_asof_dt;
    l_fnd_amt_dec               INTEGER;
    l_special_bns               varchar2(3);
    l_bp_row                    INTEGER := wrk.srch_base_cvg;
    l_pol_lapse                 NUMBER;
    x_prop_amt                  EXCEPTION;
    l_TUP_fnd_valu         order_fund.tbl_fund;
    l_loan_valu            number := 0;
    l_interest_loan        number := 0;
    l_cvg_base_idx         number;--VPD-483
    CURSOR is_calc_plan
          (pi_dur number)
    IS
      SELECT bonus_pct
      FROM  tcampaign_bonuses
      WHERE plan_code   = wrk.curr_pol.plan_code_base
      AND   plan_vers   = wrk.curr_pol.vers_num_base
      AND   crcy_code   = wrk.curr_pol.crcy_code
      --<<VPD-483
      and (band_fr = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt >= band_fr)
      and (band_to = -1 or  wrk.curr_cvg(l_cvg_base_idx).face_amt < band_to)
      -->>VPD-483
      AND   cmpn_code   = c_cmpn_code_sps
      AND   pi_dur BETWEEN dur_fr AND dur_to
      ;
    ----------------------------------------------------------------------------
    FUNCTION get_fnd_valu_by_layer ( pi_fnd_id    IN  VARCHAR2
                                    ,pi_fnd_vers  IN  VARCHAR2
                                    ,pi_fnd_bal   IN  NUMBER
                                   )
      RETURN NUMBER
    IS
      l_fnd_curr         VARCHAR2(10);
      l_fnd_valu         NUMBER;
      l_fnd_pric         NUMBER;
      l_fnd_valu_curr    NUMBER;
      x_fnd_pric         EXCEPTION;
      x_curr_exchg       EXCEPTION;
    BEGIN
      l_fnd_pric := get_fnd_pric ( pi_fnd_id   => pi_fnd_id
                                  ,pi_fnd_vers => pi_fnd_vers
                                  ,pi_pric_ind => 'S'
                                  ,pi_valn_dt  => pi_asof_dt
                                  ,pi_mode     => 'Q'
                                );
      IF fcn.return_code <> 0 THEN
        RAISE x_fnd_pric;
      END IF;

      SELECT crcy_cd
      INTO  l_fnd_curr
      FROM  tfunds
      WHERE fnd_id   = pi_fnd_id
      AND   fnd_vers = pi_fnd_vers
      ;

      l_fnd_valu := l_fnd_pric * pi_fnd_bal;

      IF wrk.curr_pol.crcy_code <> l_fnd_curr THEN
        curr_exchg( pi_pol_num         => NULL
                   ,pi_fr_crcy         => l_fnd_curr
                   ,pi_to_crcy         => wrk.curr_pol.crcy_code
                   ,pi_eff_dt          => pi_asof_dt
                   ,pi_fr_amt          => l_fnd_valu
                   ,pi_acct_mne_cd_fr  => NULL
                   ,pi_acct_mne_cd_to  => NULL
                   ,pi_trxn_desc       => NULL
                   ,po_to_amt          => l_fnd_valu_curr
                   );
        IF fcn.return_code <> 0 THEN
          RAISE x_curr_exchg;
        END IF;
      ELSE
        l_fnd_valu_curr := l_fnd_valu;
      END IF;
      RETURN l_fnd_valu_curr;
    EXCEPTION
      WHEN x_fnd_pric THEN
        fcn.set_return(fcn.return_code,'x_fnd_pric');
        RETURN NULL;
      WHEN x_curr_exchg THEN
        fcn.set_return(fcn.return_code,'x_curr_exchg');
        RETURN NULL;
      WHEN OTHERS THEN
        fcn.set_return(99,sqlcode);
        RETURN NULL;
    END get_fnd_valu_by_layer;
    function pol_exists_lapse(pi_asof_dt date,pi_dur number) return varchar2
    is
      l_review_fr_dt date;
    begin
      l_review_fr_dt  := wrk.curr_pol.pol_eff_dt;
      for i in 1..pi_dur loop
        open is_calc_plan(pi_dur-i);
        fetch is_calc_plan into l_bonus_pct;
        if is_calc_plan%FOUND then
          l_review_fr_dt := advance_ptd(wrk.curr_pol.pol_eff_dt, wrk.curr_pol.pol_eff_dt, 12 * (pi_dur-i))+1;
          exit;
         end if;
         close is_calc_plan;
      end loop;
      select count(*)
      into l_pol_lapse
      from ttrxn_logs
      where pol_num=wrk.curr_pol.pol_num
        and tbl_nm='TPOLICYS'
        and col_nm='POL_STAT_CD'
        and (new_valu = CD.STAT_LAPSE or old_valu = CD.STAT_LAPSE)
        and trxn_id between to_char(l_review_fr_dt,'yyyymmdd')||'0000000' and to_char(pi_asof_dt,'yyyymmdd')||'9999999';
      if l_pol_lapse>0 then
        return 'Y';
      else
        return 'N';
      end if;

   end pol_exists_lapse;
   function pol_exists_psu(pi_asof_dt date
                          ,pi_dur number default null
                          ,pi_prem_grp varchar2 default 'ALL'
                          ) return varchar2
    is
      l_review_fr_dt date;
      l_pol_psu    NUMBER;
    begin
      l_review_fr_dt  := wrk.curr_pol.pol_eff_dt;
      if pi_dur is not null then
        for i in 1..pi_dur loop
          open is_calc_plan(pi_dur-i);
          fetch is_calc_plan into l_bonus_pct;
          if is_calc_plan%FOUND then
            l_review_fr_dt := advance_ptd(wrk.curr_pol.pol_eff_dt, wrk.curr_pol.pol_eff_dt, 12 * (pi_dur-i))+1;
            exit;
           end if;
           close is_calc_plan;
        end loop;
      end if;
      select count(*)
      into l_pol_psu
      from
      (
        select 1
        from tfund_trxn_histories
        where pol_num = wrk.curr_pol.pol_num
          and fnd_trxn_cd = 'PSU'
          and trxn_dt between l_review_fr_dt and pi_asof_dt
          and (prem_grp = pi_prem_grp or pi_prem_grp = 'ALL')
        union all
        select 1
        from tfund_trxn
        where pol_num = wrk.curr_pol.pol_num
          and fnd_trxn_cd = 'PSU'
          and trxn_dt between l_review_fr_dt and pi_asof_dt
          and (prem_grp = pi_prem_grp or pi_prem_grp = 'ALL')
       );
      if l_pol_psu > 0 then
        return 'Y';
      else
        return 'N';
      end if;

   end pol_exists_psu;
    ----------------------------------------------------------------------------
  BEGIN --calc_lbs
    l_cvg_base_idx        := wrk.Srch_Base_Cvg;--VPD-483
    OPEN is_calc_plan(pi_dur);
    FETCH is_calc_plan into l_bonus_pct;
    IF is_calc_plan%NOTFOUND THEN
      l_bonus_pct := 0;
    END IF;
    CLOSE is_calc_plan;

    ctl_parm.get( 'FUND_AMT_DEC'
                      ,wrk.curr_pol.crcy_code
                      ,wrk.curr_pol.plan_code_base
                      ,wrk.curr_pol.pol_eff_dt
                      ,l_fnd_amt_dec
                     );
    ctl_parm.get( 'SPECIAL_BNS'
                      ,wrk.curr_pol.crcy_code
                      ,wrk.curr_pol.plan_code_base
                      ,wrk.curr_pol.pol_eff_dt
                      ,l_special_bns
                     );
    IF l_bonus_pct > 0 THEN
      IF nvl(l_special_bns,'0') = CD.LOYAL_BNS_AUL THEN
        if pol_exists_psu(pi_asof_dt            => pi_asof_dt
                          ,pi_dur               => null
                          ,pi_prem_grp          => cd.PREM_GRP_RBP
                          ) = 'Y' then
          l_bonus_amt := 0;
        else
          l_loan_valu := WRK.CURR_LOAN.LOAN_BAL;
          l_TUP_fnd_valu := order_fund.get_fnd_valu(pi_pol_num  => wrk.curr_pol.pol_num
                             ,pi_fnd_id   => NULL
                             ,pi_fnd_vers => NULL
                             ,pi_valn_dt  => wrk.curr_pol.lst_fnd_valn_dt
                             ,pi_mode     => 'Q'
                             ,pi_prem_grp	=>	CD.PREM_GRP_TUP
                             );
          if nvl(l_loan_valu,0) > 0 then
              l_interest_loan := calc_int(cd.int_rt_loan_int
                                          ,WRK.CURR_LOAN.LOAN_BAL
                                          ,WRK.CURR_LOAN.LOAN_ACTV_DT
                                          ,pi_asof_dt
                                          ,NULL
                                          ,wrk.curr_pol.plan_code_base
                                          );
           end if;
           if nvl(l_loan_valu,0) + nvl(l_interest_loan,0) > nvl(l_TUP_fnd_valu(1).tot_fnd_valu,0) then
             l_bonus_amt := 0;
           else
              l_bonus_amt := l_bonus_pct / 100 * wrk.curr_cvg(l_bp_row).face_amt;
           end if;
        end if;
      ELSE
        l_bonus_amt := 0;
      END IF;

      IF l_bonus_amt = 0 THEN
        wrk.gen_query_reg (pi_query_desc => 'Persistency bonus bonus_amt=' || l_bonus_amt,
                           pi_trxn_cd   => l_trxn_cd);
        return;
      END IF;
      l_bonus_amt := round(l_bonus_amt, l_fnd_amt_dec);
      -- Calc total unit --
      FOR i IN 1..wrk.curr_fnd_lay.count
      LOOP
        IF wrk.curr_fnd_lay(i).stat_cd = 'A' and wrk.curr_fnd_lay(i).prem_grp = cd.PREM_GRP_RBP THEN
          l_tot_valu := l_tot_valu + get_fnd_valu_by_layer (
                                        pi_fnd_id   => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_id)
                                       ,pi_fnd_vers => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_vers)
                                       ,pi_fnd_bal  => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_bal)
                                      );
          l_tot_layer := l_tot_layer + 1;
        END IF;
      END LOOP;
      -- Allocate bonus --
      l_left_bonus_amt := l_bonus_amt;
      FOR i IN 1..wrk.curr_fnd_lay.count
      LOOP
        IF wrk.curr_fnd_lay(i).stat_cd = 'A' and wrk.curr_fnd_lay(i).prem_grp = cd.PREM_GRP_RBP THEN
          l_curr_layer := l_curr_layer + 1;
          IF l_curr_layer = l_tot_layer THEN --last layer
            l_prop_amt := l_left_bonus_amt;
          ELSE
            l_prop_amt := l_bonus_amt
                         * get_fnd_valu_by_layer (
                              pi_fnd_id   => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_id)
                             ,pi_fnd_vers => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_vers)
                             ,pi_fnd_bal  => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_bal)
                            )
                         / l_tot_valu
                       ;
            l_prop_amt := round(l_prop_amt, l_fnd_amt_dec);
            l_left_bonus_amt := l_left_bonus_amt - l_prop_amt;
          END IF;
          IF NVL(l_prop_amt,0) <= 0 THEN
            RAISE x_prop_amt;
          END IF;

          wrk.gen_fnd_lay_prem_trxn( pi_pol_num      => wrk.curr_pol.pol_num
                                    ,pi_layer_eff_dt => ByReftoByValue.convert(wrk.curr_fnd_lay(i).layer_eff_dt)
                                    ,pi_layer_typ    => ByReftoByValue.convert(wrk.curr_fnd_lay(i).layer_typ)
                                    ,pi_trxn_id      => fcn.trxn_id
                                    ,pi_prem_amt     => l_prop_amt
                                    --VPD-483 ,pi_prem_acct    => 'PERBNEXP'
                                    ,pi_prem_acct    => 'PERBNEST'--VPD-483
                                   );

            order_fund.fund_order( pi_pol_num         => wrk.curr_pol.pol_num
                                  ,pi_trxn_cd         => l_trxn_cd
                                  ,pi_valn_dt         => l_asof_dt
                                  ,pi_user_id         => user
                                  ,pi_reasn_cd        => fcn.reasn_code
                                  ,pi_fnd_trxn_code   => cd.fund_fnd_trxn_cd_bns
                                  ,pi_dealing_basis   => 'A'
                                  ,pi_dealing_amount  => l_prop_amt
                                  ,pi_crcy_code       => wrk.curr_pol.crcy_code
                                  ,pi_trxn_id         => fcn.trxn_id
                                  ,pi_fnd_id          => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_id)
                                  ,pi_fnd_vers        => ByReftoByValue.convert(wrk.curr_fnd_lay(i).fnd_vers)
                                  ,pi_cli_num         => NULL
                                  ,pi_plan_code       => NULL
                                  ,pi_vers_num        => NULL
                                  ,pi_cvg_eff_dt      => NULL
                                  ,pi_trxn_dt         => get_real_cas_dt
                                  --VPD-483 ,pi_prem_acct       => 'PERBNEXP'
                                  ,pi_prem_acct       => 'PERBNEST'--VPD-483
                                  ,pi_prem_grp        => ByReftoByValue.convert(wrk.curr_fnd_lay(i).prem_grp)
                                  );
        END IF;
      END LOOP;

      wrk.gen_trxn_hist( pi_trxn_seq   => get_trxn_seq
                        ,pi_trxn_desc  => s_message.get_message(6509,TO_CHAR(l_bonus_amt))
                        ,pi_trxn_cd    => l_trxn_cd
                        ,pi_trxn_amt   => l_bonus_amt
                        ,pi_pd_to_dt   => NULL
                        ,pi_eff_dt     => l_asof_dt
                        ,pi_fcn_id     => NULL
                        ,pi_user_input => 'N'
                       );
    END IF; --l_bonus_pct > 0
  EXCEPTION
    WHEN x_prop_amt THEN
      DBMS_OUTPUT.PUT_LINE('x_prop_amt:'||fcn.return_code);
    WHEN OTHERS THEN
      fcn.set_return(99);
      DBMS_OUTPUT.PUT_LINE(substr(sqlcode||'-'||sqlerrm,1,100));
      wrk.gen_query_reg ( pi_query_desc => substr(sqlcode||'-'||sqlerrm,1,100)
                         ,pi_trxn_cd    => l_trxn_cd
                        );
  END calc_sbs;
  -->>VPD-22--VPD-131
  -->> VN-RPUL2-CH06
--<<PJ12/0445
  procedure Big_Case_Bonus(pi_avy_dt date) is

        c_big_case_bonus_reasn_cd    varchar2(3) := '925';
        l_cas_dt                     date;
        l_message                    varchar2(200);
        l_cnt                        number;
        l_pol_year                   number;
        l_bonus_amt                  number;

          cursor cr_rate(p_plan_code  varchar2,
                         p_vers_num   varchar2,
                         p_face_amt   number,
                         p_cvg_eff_age  number,
                         p_sex_code   varchar2,
                         p_pol_yr     number
                      ) is
          select *
       	 from tpolicy_values_enhance
       	 where plan_code = p_plan_code
       	      AND (vers_num = p_vers_num or vers_num = CD.WILDCARD_CHAR)
       	      AND p_face_amt between face_amt_low and face_amt_high
       	      and (eff_age =-1 or eff_age = p_cvg_eff_age )
       	      and (sex_code='*' or sex_code = p_sex_code )
       	      AND p_pol_yr between fr_pol_yr and to_pol_yr
       	      AND enh_nm = 'BIG_CASE_SIZE_BNS'
       	 order by rate desc;

        l_rec_rate cr_rate%rowtype;

      begin
        fcn.set_return(0);
        l_cas_dt := get_cas_sys_dt();
        l_cnt := 0;
        for i in 1 .. WRK.CURR_CVG.COUNT loop
            l_pol_year := round(months_between(pi_avy_dt,WRK.CURR_CVG(i).CVG_EFF_DT)/12,0);
            l_cnt := 0;
            open cr_rate(WRK.CURR_CVG(i).plan_code,
                         WRK.CURR_CVG(i).vers_num,
                         WRK.CURR_CVG(i).face_amt,
                         WRK.CURR_CVG(i).cvg_eff_age,
                         WRK.CURR_CVG(i).sex_code,
                         l_pol_year
                         );

            fetch cr_rate into l_rec_rate;
            if cr_rate%found then
                  select count(*) into l_cnt
                    from tcov_avy_value_histories
                   where pol_num   = WRK.CURR_POL.POL_NUM
                     and avy_dt   = pi_avy_dt
                     and avy_typ  = CD.AVY_TYP_ENDOW
                     and plan_code = WRK.CURR_CVG(i).plan_code
                     and vers_num  = WRK.CURR_CVG(i).vers_num
                     and cli_num   = WRK.CURR_CVG(i).cli_num
                     and cvg_eff_dt = WRK.CURR_CVG(i).cvg_eff_dt
                     and trxn_desc  = 'Big Case Size Bonus';

                  if l_cnt = 0 then
                    l_bonus_amt := round(l_bonus_amt*l_rec_rate.rate/100,0);   -- 5% of FA

                    -- Gen Account Extract
                    WRK.gen_acct_ext(cd.debit,
                                     'CCPOTH',
                                     l_bonus_amt,
                                     l_trxn_cd,
                                     l_cas_dt,
                                     WRK.CURR_CVG(i).plan_code,
                                     WRK.CURR_CVG(i).vers_num,
                                     WRK.CURR_CVG(i).cli_num
                                     );
                    WRK.gen_acct_ext(cd.credit,
                                     'SUPPOL',
                                     l_bonus_amt,
                                     l_trxn_cd,
                                     l_cas_dt,
                                     WRK.CURR_CVG(i).plan_code,
                                     WRK.CURR_CVG(i).vers_num,
                                     WRK.CURR_CVG(i).cli_num
                                    );
                    -- Gen Transaction History

                    l_message :=  GET_FLD_VALU_DESC('REASN_CODE',c_big_case_bonus_reasn_cd);

                    WRK.gen_trxn_hist(get_trxn_seq
                                     ,l_message
                                     ,l_trxn_cd
                                     ,l_bonus_amt
                                     ,null
                                     ,l_cas_dt
                                     ,NULL
                                     ,'N'
                                     );
                    -- Gen DNR
                    WRK.gen_dnr_dtls(c_big_case_bonus_reasn_cd,l_bonus_amt,l_cas_dt);

                    wrk.gen_cov_avy_hist(l_trxn_cd
                                        ,CD.AVY_TYP_ENDOW
                                        ,l_bonus_amt
                                        ,'Big Case Size Bonus'
                                        ,pi_avy_dt
                                        ,ByReftoByValue.convert(wrk.curr_cvg(i).plan_code)
                                        ,ByReftoByValue.convert(wrk.curr_cvg(i).vers_num)
                                        ,ByReftoByValue.convert(wrk.curr_cvg(i).cvg_eff_dt)
                                        ,ByReftoByValue.convert(wrk.curr_cvg(i).cvg_eff_dt)
                                        ,ByReftoByValue.convert(wrk.curr_cvg(i).cli_num)
                                        );
                end if;

            end if;
            close cr_rate;
          end loop; --End WRK.CURR_CVG

    end Big_Case_Bonus;

    procedure Hosp_fnd_Bonus(pi_avy_dt date) is

        c_Hosp_fnd_bonus_reasn_cd    varchar2(3) := '925';
        l_cas_dt                     date;
        l_message                    varchar2(200);
        l_cnt                        number;
        l_pol_year                   number;
        l_bonus_amt                  number;
        l_clm_paid                   number;

          cursor cr_rate(p_plan_code  varchar2,
                         p_vers_num   varchar2,
                         p_face_amt   number,
                         p_cvg_eff_age  number,
                         p_sex_code   varchar2,
                         p_stat_cd varchar2,
                         p_pol_yr     number
                      ) is
          select *
       	 from tpolicy_values_enhance
       	 where plan_code = p_plan_code
       	      AND (vers_num = p_vers_num or vers_num = CD.WILDCARD_CHAR)
       	      AND p_face_amt between face_amt_low and face_amt_high
       	      and (eff_age =-1 or eff_age = p_cvg_eff_age )
       	      and (sex_code='*' or sex_code = p_sex_code )
       	      AND p_pol_yr between fr_pol_yr and to_pol_yr
       	      AND (instr(STAT_VALID,p_stat_cd)>0 or STAT_VALID='*')
       	      AND enh_nm = 'HOSP_FND_BNS'
       	 order by rate desc;

        l_rec_rate cr_rate%rowtype;

      cursor c_clm_paid(pi_pol_num varchar2,
                        pi_cli_num varchar2
                       ) is
         select sum(clm_aprov_amt) amt
         from tclaim_details
         where pol_num = pi_pol_num
               and cli_num   = pi_cli_num
               and clm_code  in ('11','12')
               and clm_stat_code = CD.CLM_STAT_APROV;

      begin
        fcn.set_return(0);
        l_cas_dt := get_cas_sys_dt();
        l_cnt := 0;
        for i in 1 .. WRK.CURR_CVG.COUNT loop
            l_pol_year := round(months_between(pi_avy_dt,WRK.CURR_CVG(i).CVG_EFF_DT)/12,0);
            l_cnt := 0;
            open cr_rate(WRK.CURR_CVG(i).plan_code,
                         WRK.CURR_CVG(i).vers_num,
                         WRK.CURR_CVG(i).face_amt,
                         WRK.CURR_CVG(i).cvg_eff_age,
                         WRK.CURR_CVG(i).sex_code,
                         WRK.CURR_CVG(i).cvg_stat_cd,
                         l_pol_year
                         );

            fetch cr_rate into l_rec_rate;
            if cr_rate%found then
                  select count(*) into l_cnt
                    from tcov_avy_value_histories
                   where pol_num   = WRK.CURR_POL.POL_NUM
                     and avy_dt   = pi_avy_dt
                     and avy_typ  = CD.AVY_TYP_ENDOW
                     and plan_code = WRK.CURR_CVG(i).plan_code
                     and vers_num  = WRK.CURR_CVG(i).vers_num
                     and cli_num   = WRK.CURR_CVG(i).cli_num
                     and cvg_eff_dt = WRK.CURR_CVG(i).cvg_eff_dt
                     and trxn_desc  = 'Hospital fund Bonus';

                  if l_cnt = 0 then
                    l_bonus_amt := round(l_bonus_amt*l_rec_rate.rate/100,0);   -- 25% of FA

                    open c_clm_paid(WRK.CURR_POL.POL_NUM,WRK.CURR_CVG(i).cli_num);
                    fetch c_clm_paid into l_clm_paid;
                    close c_clm_paid;

                    l_bonus_amt := greatest(0,nvl(l_bonus_amt,0)-nvl(l_clm_paid,0));
                    if l_bonus_amt>0 then
                      -- Gen Account Extract
                      WRK.gen_acct_ext(cd.debit,
                                       'BNHEAD',
                                       l_bonus_amt,
                                       l_trxn_cd,
                                       l_cas_dt,
                                       WRK.CURR_CVG(i).plan_code,
                                       WRK.CURR_CVG(i).vers_num,
                                       WRK.CURR_CVG(i).cli_num
                                       );
                      WRK.gen_acct_ext(cd.credit,
                                       'SUPPOL',
                                       l_bonus_amt,
                                       l_trxn_cd,
                                       l_cas_dt,
                                       WRK.CURR_CVG(i).plan_code,
                                       WRK.CURR_CVG(i).vers_num,
                                       WRK.CURR_CVG(i).cli_num
                                      );
                      -- Gen Transaction History

                      l_message :=  GET_FLD_VALU_DESC('REASN_CODE',c_Hosp_fnd_bonus_reasn_cd);

                      WRK.gen_trxn_hist(get_trxn_seq
                                       ,l_message
                                       ,l_trxn_cd
                                       ,l_bonus_amt
                                       ,null
                                       ,l_cas_dt
                                       ,NULL
                                       ,'N'
                                       );
                      -- Gen DNR
                      WRK.gen_dnr_dtls(c_Hosp_fnd_bonus_reasn_cd,l_bonus_amt,l_cas_dt);

                      wrk.gen_cov_avy_hist(l_trxn_cd
                                          ,CD.AVY_TYP_ENDOW
                                          ,l_bonus_amt
                                          ,'Hospital fund Bonus'
                                          ,pi_avy_dt
                                          ,ByReftoByValue.convert(wrk.curr_cvg(i).plan_code)
                                          ,ByReftoByValue.convert(wrk.curr_cvg(i).vers_num)
                                          ,ByReftoByValue.convert(wrk.curr_cvg(i).cvg_eff_dt)
                                          ,ByReftoByValue.convert(wrk.curr_cvg(i).cvg_eff_dt)
                                          ,ByReftoByValue.convert(wrk.curr_cvg(i).cli_num)
                                          );
                   end if;
                end if;

            end if;
            close cr_rate;
          end loop; --End WRK.CURR_CVG

    end;
    -->>PJ12/0445
    --<<VPD-1175
    procedure update_auto_dscnt_new_iss_pol(p_pol_num     varchar2,
                                   p_return_code number,
                                   p_err_msg     varchar2) is
    begin
        update twrk_auto_dscnt_new_iss_pol
        set return_code = p_return_code, err_msg = p_err_msg
        where pol_num = p_pol_num;
    end;
   procedure Family_Bonus(pi_avy_dt date) is
        l_last_avy_dt                date;
        l_curr_avy_dt                date;
        l_trxn_cd varchar2(10) := 'AVYPRC' ;
        l_cas_dt                     date;
        l_message                    varchar2(200);
        l_acct_mne_cd                    varchar2(20) := 'SUPPAY';
        l_pol_year                  number;
        l_bonus_amt                  ttrxn_histories.trxn_amt%type;
        l_amt_mbr                   number;
        l_old_reasn_cd varchar2(3) := '';
        x_err_apply_pre   exception;
        x_err_apply_topup exception;
        l_pol_num         ttrxn_histories.pol_num%type;
        l_bill_dt                     date;
        l_last_pd_to_dt        date;

		--<< VPD-5540
        l_prd_chg_dt date;
        l_pre_lst_avy_days integer;
        l_pre_cur_avy_days integer;
        -->> VPD-5540

        cursor cr_count_mbr_fml(pi_pol_num varchar2
                    ) is
                    Select Sum(Amt_mbr) from (
                   select Count(c.Cli_Num) Amt_mbr from tcoverages c, tpolicys p
                   where c.pol_num=p.pol_num
                   -- and c.plan_code = 'RHC6I' -- VPD-5540
                   and c.plan_code in ('RHC6I', 'RHC7I') -- VPD-5540
                   and is_stat_grp_in_force( c.Cvg_Stat_Cd)='Y'  and c.Pol_num = pi_pol_num
                   union all
                   select Count(c.Cli_Num) Amt_mbr from tcoverages c, tpolicys p
                   where c.pol_num=p.pol_num
                   -- and c.plan_code = 'RHC6I' -- VPD-5540
                   and c.plan_code in ('RHC6I', 'RHC7I') -- VPD-5540
                   and c.Cvg_Stat_Cd in ('L','B')  and c.Pol_num = pi_pol_num
                   and (CVG_DEL_DT>= pi_avy_dt or CVG_DEL_DT <  l_last_avy_dt ));

      begin
        --fcn.set_return(0);
        l_old_reasn_cd := fcn.Reasn_Code;
        l_cas_dt := get_cas_sys_dt();
        l_amt_mbr := 0;
        l_bonus_amt :=0 ;
        l_last_avy_dt := WRK.CURR_POL.LAST_AVY_DT;
        l_pol_num := WRK.CURR_POL.POL_NUM;
        l_bill_dt := wrk.curr_pol.bill_to_dt;
        l_last_pd_to_dt := wrk.curr_pol.last_pd_to_dt;
        --l_curr_avy_dt := advance_PTD(WRK.CURR_POL.LAST_AVY_DT, WRK.CURR_POL.POL_EFF_DT, 12);
        l_curr_avy_dt := pi_avy_dt;

		--<< VPD-5540
		l_pre_lst_avy_days := 0;
		l_pre_cur_avy_days := 0;

        ctl_parm.get('RHC19_PRD_CHG_DT', l_prd_chg_dt);

        if l_prd_chg_dt is not null then
			ctl_parm.get('RHC19_PRE_LST_AVY_DAYS', l_pre_lst_avy_days);
			ctl_parm.get('RHC19_PRE_CUR_AVY_DAYS', l_pre_cur_avy_days);

            if l_last_avy_dt >= l_prd_chg_dt then
                l_pre_lst_avy_days := nvl(l_pre_lst_avy_days, 15);
			else
				l_pre_lst_avy_days := 0;
            end if;

            l_pre_cur_avy_days := nvl(l_pre_cur_avy_days, 15);
        end if;
        -->> VPD-5540

        open cr_count_mbr_fml(l_pol_num);
        fetch cr_count_mbr_fml into l_amt_mbr;
        close cr_count_mbr_fml;

        if l_amt_mbr >1 then -->= 2 cli_num is to do
          select nvl(sum(decode(cr_or_dr,'C',acct_gen_amt,-acct_gen_amt)),0) trxn_amt
          into l_bonus_amt
          from  tacct_extracts a,tchart_of_accounts coa, tpolicys p,tcoverages c
          where a.pol_num  = l_pol_num
            and a.trxn_cd not in ('PUR')
            and a.pol_num  = p.pol_num
            and a.trxn_dt >= p.pol_iss_dt
            and a.extract_typ in ('N','X')
            --VPD-3407 and a.vers_num=p.vers_num_base
			and a.vers_num=c.vers_num --VPD-3407
            and a.acct_mne_cd = coa.acct_mne_cd
            and coa.acct_typ LIKE 'GEN_INV%'
            -- and a.plan_code like 'RHC6%' -- VPD-5540
            and (a.plan_code like 'RHC6%' or a.plan_code like 'RHC7%') -- VPD-5540
            and p.pol_num=c.pol_num
            and a.plan_code=c.plan_code
            and a.cli_num=c.cli_num
            and a.cvg_eff_dt=c.cvg_eff_dt
			-- and a.trxn_dt between l_last_AVY_dt and l_curr_avy_dt -1 -- VPD-5540
			and a.trxn_dt between (l_last_avy_dt - l_pre_lst_avy_days) and (l_curr_avy_dt - l_pre_cur_avy_days - 1) -- VPD-5540
            and ( is_stat_grp_in_force( c.Cvg_Stat_Cd)='Y' or(c.Cvg_Stat_Cd in ('L','B')  and c.CVG_DEL_DT > = l_curr_avy_dt)) ;

           if l_bonus_amt >0 then
             --dbms_output.put_line('l_prem_amt: ' ||l_bonus_amt);
               if l_amt_mbr = 2 then
                 l_bonus_amt := round(l_bonus_amt*5/100,0) ;
               elsif l_amt_mbr = 3 then
                 l_bonus_amt := round(l_bonus_amt*10/100,0) ;
               else
                 l_bonus_amt := round(l_bonus_amt*15/100,0) ;
               end if;

               fcn.Set_Reasn_Code('951');
               -- Gen Account Extract
                WRK.gen_acct_ext(cd.debit,
                                 'FMLBNS',
                                 l_bonus_amt,
                                 l_trxn_cd,
                                 l_cas_dt,
                                 null,
                                 null,
                                 null
                                 );
                WRK.gen_acct_ext(cd.credit,
                                 'SUPPAY',
                                 l_bonus_amt,
                                 l_trxn_cd,
                                 l_cas_dt,
                                 null,
                                 null,
                                 null
                                );
                  -- Gen Transaction History
                  l_message :=  'Family bonus is paid as shown';

                  WRK.gen_trxn_hist(get_trxn_seq
                                           ,l_message
                                           ,l_trxn_cd
                                           ,l_bonus_amt
                                           ,null
                                           ,l_cas_dt
                                           ,NULL
                                           ,'N'
                                           );

                   -- Gen Premium History
                   WRK.Gen_Prem_Hist(l_cas_dt
                                           ,l_bonus_amt
                                           ,0
                                           ,'N'
                                           ,null
                                           ,null
                                           ,null
                                           );

                 if l_last_pd_to_dt < l_bill_dt then
                    Apply_Premium.Put_Main('SUPPAY',
                                           'NORMAL',
                                           'FULLPAY',
                                           l_bonus_amt,
                                           NULL);
                      --dbms_output.put_line('FMi fcn.return_code: ' ||fcn.return_code);
                      if fcn.return_code > 0 then
                        update_auto_dscnt_new_iss_pol(l_pol_num,
                                                   fcn.return_code,
                                                   'Apply_Premium.Put_Main(SUPPAY, NORMAL, FULLPAY) get error - ' ||
                                                   fcn.Return_Msg);
                        RAISE x_err_apply_pre;
                      end if;
                  else
                    --topup
                    if is_uvl_pol(l_pol_num) then
                       fcn.Set_Reasn_Code('508');
                      Apply_Premium.Apply_Asp(Pi_From_Acct    => 'SUPPAY',
                                              Pi_App_Amt      => l_bonus_amt,
                                              Pi_Layer_Eff_Dt => l_cas_dt,
                                              Pi_Layer_Idx    => NULL,
                                              Pi_Cr_Or_App    => NULL,
                                              Pi_Trxn_Id      => NULL,
                                              Pi_Report_No    => NULL);

                      if fcn.return_code > 0 then
                        update_auto_dscnt_new_iss_pol(l_pol_num,
                                                   fcn.return_code,
                                                   'Apply_Premium.Apply_Asp(SUPPAY) get error - ' ||
                                                   fcn.Return_Msg);
                        RAISE x_err_apply_topup;
                      end if;
                    end if ;
                  end if;

           else
             fcn.Set_Reasn_Code('951');
             l_message :=  'Family bonus is paid as shown';

              WRK.gen_trxn_hist(get_trxn_seq
                                       ,l_message
                                       ,l_trxn_cd
                                       ,l_bonus_amt
                                       ,null
                                       ,l_cas_dt
                                       ,NULL
                                       ,'N'
                                       );
           end if;
        end if;
        fcn.Set_Reasn_Code(l_old_reasn_cd);
        EXCEPTION
        WHEN x_err_apply_pre THEN
             fcn.Set_Reasn_Code(l_old_reasn_cd);
             NULL;
        WHEN x_err_apply_topup THEN
             fcn.Set_Reasn_Code(l_old_reasn_cd);
             NULL;
        WHEN OTHERS THEN
          fcn.set_return(99);
          wrk.gen_query_reg ( pi_query_desc => substr(sqlcode||'-'||sqlerrm,1,100)
                             ,pi_trxn_cd    => l_trxn_cd
                            );
          fcn.Set_Reasn_Code(l_old_reasn_cd);
    end Family_Bonus ;
    -->> VPD-1175
    --<< VPD-1234
    procedure No_Claim_Bonus(pi_avy_dt date) is
        l_last_avy_dt                date;
        l_curr_avy_dt                date;
        l_cas_dt                     date;
        l_message                    varchar2(200);
        l_acct_mne_cd                    varchar2(20) := 'SUPPAY';
        l_trxn_cd varchar2(10) := 'AVYPRC' ;
        l_bonus_amt                  ttrxn_histories.trxn_amt%type;
        l_has_claim                   number;
        l_old_reasn_cd varchar2(3) := '';
        x_err_apply_pre   exception;
        x_err_apply_topup exception;
        l_pol_num         ttrxn_histories.pol_num%type;
        l_bill_dt          date;
        l_last_pd_to_dt          date;

		--<< VPD-5460
        l_prd_chg_dt date;
        l_pre_lst_avy_days integer;
        l_pre_cur_avy_days integer;
        -->> VPD-5460

		--<< VPD-4210
        /*
		cursor cr_rate is
			select rate
			from tpolicy_values_enhance
			where enh_nm = 'NOCLAIM_BONUS' and rownum = 1;
		*/

		l_plan_code varchar2(5);

		cursor c_no_clm_bns_plan(p_pol_num varchar2) is
			select plan_code
			from tcoverages
		    where (plan_code like 'RHC6%' or plan_code like 'RHC7%')
			and pol_num = p_pol_num;

		cursor cr_rate(p_plan_code varchar2) is
			select rate
			from tpolicy_values_enhance
			where enh_nm = 'NOCLAIM_BONUS'
			and ((plan_code like 'RHC6%' and p_plan_code like 'RHC6%')
		         or (plan_code like 'RHC7%' and p_plan_code like 'RHC7%'))
			and rownum = 1;
		-->> VPD-4210

        l_rec_rate cr_rate%rowtype;

		--<< VPD-5460
		/*
        cursor cr_check_claim(pi_pol_num varchar2
                    ) is
                   select Count(*) hasclaim from tcoverages c, tpolicys p, tclaim_details clm
                   where c.pol_num=p.pol_num
                   and clm.Pol_num =p.pol_num
                   and c.cli_num= clm.cli_num
				   --<< VPD-4210
                   -- and c.plan_code like 'RHC6%'
				   and (c.plan_code like 'RHC6%' or c.plan_code like 'RHC7%')
				   -->> VPD-4210
                   and c.Pol_num = pi_pol_num
                   and clm.clm_stat_code ='A'
                   and clm.clm_code in ('27','28','29')
                   and (CLM_APROV_DT between l_last_avy_dt and pi_avy_dt) ;
		*/
		-->> VPD-5460

      begin
        --fcn.set_return(0);
        l_old_reasn_cd := fcn.Reasn_Code;
        l_cas_dt := get_cas_sys_dt();
        l_last_avy_dt := WRK.CURR_POL.LAST_AVY_DT;
        l_bonus_amt := 0;
        l_curr_avy_dt := pi_avy_dt;
        l_pol_num := WRK.CURR_POL.POL_NUM;
        l_bill_dt := wrk.curr_pol.bill_to_dt;
        l_last_pd_to_dt := wrk.curr_pol.last_pd_to_dt ;

		--<< VPD-5460
        l_pre_lst_avy_days := 0;
        l_pre_cur_avy_days := 0;

        ctl_parm.get('RHC19_PRD_CHG_DT', l_prd_chg_dt);

        if l_prd_chg_dt is not null then
			ctl_parm.get('RHC19_PRE_LST_AVY_DAYS', l_pre_lst_avy_days);
			ctl_parm.get('RHC19_PRE_CUR_AVY_DAYS', l_pre_cur_avy_days);

            if l_last_avy_dt >= l_prd_chg_dt then
                l_pre_lst_avy_days := nvl(l_pre_lst_avy_days, 15);
			else
				l_pre_lst_avy_days := 0;
            end if;

            l_pre_cur_avy_days := nvl(l_pre_cur_avy_days, 15);
        end if;

		/*
		open cr_check_claim(l_pol_num);
        fetch cr_check_claim into l_has_claim;
        close cr_check_claim;
        dbms_output.put_line('l_last_AVY_dt: ' ||l_last_AVY_dt);
        dbms_output.put_line('l_curr_avy_dt: ' ||l_curr_avy_dt);
		*/

        -- if l_has_claim =0 then -->= No has claim
        -->> VPD-5460
          select nvl(sum(decode(cr_or_dr,'C',acct_gen_amt,-acct_gen_amt)),0) trxn_amt
          into l_bonus_amt
          from  tacct_extracts a,tchart_of_accounts coa, tpolicys p,tcoverages c
          where a.pol_num  = l_pol_num
            and a.trxn_cd not in ('PUR')
            and a.pol_num  = p.pol_num
            and a.trxn_dt >= p.pol_iss_dt
            and a.extract_typ in ('N','X')
            --VPD-3407 and a.vers_num=p.vers_num_base
			and a.vers_num=c.vers_num --VPD-3407
            and a.acct_mne_cd = coa.acct_mne_cd
            and coa.acct_typ LIKE 'GEN_INV%'
			--<< VPD-4210
            -- and a.plan_code like 'RHC6%'
			and (a.plan_code like 'RHC6%' or a.plan_code like 'RHC7%')
			-->> VPD-4210
            and p.pol_num=c.pol_num
            and a.plan_code=c.plan_code
            and a.cli_num=c.cli_num
            and a.cvg_eff_dt=c.cvg_eff_dt
            --<< VPD-5460
            -- and a.trxn_dt between l_last_AVY_dt and l_curr_avy_dt -1
            and a.trxn_dt between (l_last_avy_dt - l_pre_lst_avy_days) and (l_curr_avy_dt - l_pre_cur_avy_days - 1)
			and a.cli_num not in (
				select clm.cli_num
				from tclaim_details clm
				where clm.pol_num = l_pol_num
				and clm.clm_code in ('27', '28', '29')
				and clm.clm_stat_code = 'A'
				and (clm.clm_aprov_dt between l_last_avy_dt and pi_avy_dt - 1)
			)
            -->> VPD-5460
			and ( is_stat_grp_in_force( c.Cvg_Stat_Cd)='Y' or(c.Cvg_Stat_Cd in ('L','B')  and c.CVG_DEL_DT > = l_curr_avy_dt)) ;

            if l_bonus_amt >0 then

		       --<< VPD-4210
			   /*
               open cr_rate ;
               fetch cr_rate into l_rec_rate ;
               close cr_rate ;
			   */

			   open c_no_clm_bns_plan(l_pol_num);
			   fetch c_no_clm_bns_plan into l_plan_code;
			   close c_no_clm_bns_plan;

			   open cr_rate(l_plan_code);
               fetch cr_rate into l_rec_rate;
               close cr_rate;
			   -->> VPD-4210

               l_bonus_amt := round(l_bonus_amt*l_rec_rate.rate,0) ;
               -- Gen Account Extract
                fcn.Set_Reasn_Code('952');
                WRK.gen_acct_ext(cd.debit,
                                 'NCLMBNS',
                                 l_bonus_amt,
                                 l_trxn_cd,
                                 l_cas_dt,
                                 null,
                                 null,
                                 null
                                 );
                WRK.gen_acct_ext(cd.credit,
                                 'SUPPAY',
                                 l_bonus_amt,
                                 l_trxn_cd,
                                 l_cas_dt,
                                 null,
                                 null,
                                 null
                                );
              l_message :='No claim bonus is paid as shown';
              WRK.gen_trxn_hist(get_trxn_seq
                                       ,l_message
                                       ,l_trxn_cd
                                       ,l_bonus_amt
                                       ,null
                                       ,l_cas_dt
                                       ,NULL
                                       ,'N'
                                       );
               -- Gen Premium History

               WRK.Gen_Prem_Hist(l_cas_dt
                                       ,l_bonus_amt
                                       ,0
                                       ,'N'
                                       ,null
                                       ,null
                                       ,null
                                       );
             if l_last_pd_to_dt < l_bill_dt then
                  Apply_Premium.Put_Main('SUPPAY',
                                         'NORMAL',
                                         'FULLPAY',
                                         l_bonus_amt,
                                         NULL);

                  if fcn.return_code > 0 then
                    update_auto_dscnt_new_iss_pol(l_pol_num,
                                               fcn.return_code,
                                               'Apply_Premium.Put_Main(SUPPAY, NORMAL, FULLPAY) get error - ' ||
                                               fcn.Return_Msg);
                    RAISE x_err_apply_pre;
                  end if;
                else
                  --topup
                  if is_uvl_pol(l_pol_num) then
                     fcn.Set_Reasn_Code('508');
                    Apply_Premium.Apply_Asp(Pi_From_Acct    => 'SUPPAY',
                                            Pi_App_Amt      => l_bonus_amt,
                                            Pi_Layer_Eff_Dt => l_cas_dt,
                                            Pi_Layer_Idx    => NULL,
                                            Pi_Cr_Or_App    => NULL,
                                            Pi_Trxn_Id      => NULL,
                                            Pi_Report_No    => NULL);

                    if fcn.return_code > 0 then
                      update_auto_dscnt_new_iss_pol(l_pol_num,
                                                 fcn.return_code,
                                                 'Apply_Premium.Apply_Asp(SUPPAY) get error - ' ||
                                                 fcn.Return_Msg);
                      RAISE x_err_apply_topup;
                    end if;
                  end if ;
                end if;
           else
            fcn.Set_Reasn_Code('952');
             l_message :=  'No claim bonus is paid as shown';

              WRK.gen_trxn_hist(get_trxn_seq
                                       ,l_message
                                       ,l_trxn_cd
                                       ,l_bonus_amt
                                       ,null
                                       ,l_cas_dt
                                       ,NULL
                                       ,'N'
                                       );
           end if;
        -- end if; -- VPD-5460
        fcn.Set_Reasn_Code(l_old_reasn_cd);
        EXCEPTION
        WHEN x_err_apply_pre THEN
             fcn.Set_Reasn_Code(l_old_reasn_cd);
             null;
        WHEN x_err_apply_topup THEN
             fcn.Set_Reasn_Code(l_old_reasn_cd);
             null;
        WHEN OTHERS THEN
          fcn.set_return(99);
          wrk.gen_query_reg ( pi_query_desc => substr(sqlcode||'-'||sqlerrm,1,100)
                             ,pi_trxn_cd    => l_trxn_cd
                            );
          fcn.Set_Reasn_Code(l_old_reasn_cd);
    end No_Claim_Bonus ;
    -->> VPD-1234
/* ------------------------------- Public Modules ------------------------------------------ */
  procedure process(div_earn in VARCHAR2  default 'Y'  --  HK-1998V2-RN01-C
                   ,pi_pre_avy_ind  in varchar2  default 'N'             -- ID-PRD-20050707
  )

  is
    l_curr_avy_dt            TPOLICYS.LAST_AVY_DT%TYPE;
    l_dscnt_prem             TPOLICYS.DSCNT_PREM%TYPE;
    l_IPO_Total_FA           TCOVERAGES.FACE_AMT%TYPE    := 0;
    l_base                   INTEGER;
    l_base_dur               INTEGER;
    l_base_att_age           TCOVERAGES.CVG_EFF_AGE%TYPE;
--  WCB98040101 Start
    l_annuity_payo_amt       TAVY_VALUE_DTLS.ANTY_PAYO_AMT%TYPE := 0;
--  WCB98040101 End
    l_pol_year number;                                 --Premier/Lady Products Setup
    l_ldybns_ind tplan_mthd_overrides.ovrid_valu%type; --Premier/Lady Products Setup
--<<  Q2CE09 -PL/PP Bonus at 2th AVY - HB modified 04/04/2003
    cursor c_check_tpolicys_vn(pi_pol_num varchar2) is
     select pol_num from tpolicys_vn
      where pol_num = pi_pol_num
        and pol_mne_cd = '01'
      and pol_valu = '01';
    l_pol_temp varchar2(10);
-->>  Q2CE09 -PL/PP Bonus at 2th AVY - HB modified 04/04/2003
    l_div_calc_mthd          TCONTROL_PARAMETERS.PARM_VALU%TYPE;   -- SG-DEV2000-07-A
    l_min_div_mth      number(3);   --LIL2000-158
    l_Avy_Cnv_Start_Dt  date ;      --EDM2000061801
    l_fpu_ind        varchar2(1) := 'N';  --2000-398
    l_pol_expire             VARCHAR2(1) := 'Y';  -- SG-DEV2000-32-A
    l_pol_mat_amt            NUMBER := 0;         -- SG-DEV2000-32-A
    e_Mature_Fail            exception;           -- SG-DEV2000-32-A
    l_wp_mthd                tcontrol_parameters.parm_valu%TYPE;   -- SG-DEV2000-05-A
    l_curr_div_int           number := 0;    -- SG-20001207-01
    l_chk_rslt               number;              --2004-343
    l_fnd_switch_cnt         number;              -- 2004-292-msl-uvl-08-01-sipuat51
    l_fnd_wthdr_cnt          number;              -- 2004-292-msl-uvl-08-01-sipuat51
    l_bns_logic              tcontrol_parameters.parm_valu%TYPE;   --VN/SH-Align (2005-001)
    l_int_cap_dt             DATE;  -- vnuvl-phase2-uat-20060420
    l_endow_amt              number;--PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP
    l_full_paid_dt           DATE;  --EN9/0497
    l_act_fml_bonus number(1); -- VPD-1175
    --l_cas_dt    date ;-- VPD-1175
    l_act_clm_bonus number(1); -- VPD-1234
   begin
    ctl_parm.get('MIN_DIV_MTH',l_min_div_mth);    --LIL2000-158
    ctl_parm.get('AVY_CNV_START_DT',l_Avy_Cnv_Start_Dt) ; --EDM2000061801

    fcn.set_return(0);
    ctl_parm.get('DIV_CALC_MTHD',l_div_calc_mthd);                  -- SG-DEV2000-07-A
    ctl_parm.get('WP_MTHD', l_wp_mthd);  -- SG-DEV2000-05-A

    ctl_parm.get('BNS_LOGIC',l_bns_logic);                  -- VN/SH-Align (2005-001)
    ctl_parm.get('TERR_CD',l_terr_cd);    -- VN/SH-Align (2005-HNAM002)

    l_acum_div_amt := 0;    -- SG-20001207-01
    --PR11/0836 l_curr_avy_dt := add_date(WRK.CURR_POL.LAST_AVY_DT,'YEARS',1);
    l_curr_avy_dt := advance_PTD(WRK.CURR_POL.LAST_AVY_DT, WRK.CURR_POL.POL_EFF_DT, 12); --PR11/0836
    l_base        := wrk.srch_base_cvg;                             --Premier/Lady Products Setup
    ctl_parm.get('CC_PREM_DED',l_cc_prem_ded);

    l_act_fml_bonus := 0; -- VPD-1175
    --l_cas_dt := get_cas_sys_dt ; -- VPD-1175
    l_act_clm_bonus := 0; --VPD-1234
-->> 2004-292-msl-uvl-08-01-sipuat51 begin
    select count(distinct trxn_dt)
    into   l_fnd_switch_cnt
    from   tfund_trxn_histories
    where  pol_num      = wrk.curr_pol.pol_num
    and    trxn_dt      > l_curr_avy_dt
    and    fnd_trxn_cd  = CD.FUND_FND_TRXN_CD_TRO
    ;
    wrk.curr_pol.fnd_switch_ctr := l_fnd_switch_cnt;

    select count(distinct trxn_dt)
    into   l_fnd_wthdr_cnt
    from   tfund_trxn_histories
    where  pol_num      = wrk.curr_pol.pol_num
    and    trxn_dt      > l_curr_avy_dt
    and    fnd_trxn_cd in ( CD.FUND_FND_TRXN_CD_PSU
                           ,CD.FUND_FND_TRXN_CD_FSU
                           ,CD.FUND_FND_TRXN_CD_LAN
                           ,CD.FUND_FND_TRXN_CD_DTH
                           ,CD.FUND_FND_TRXN_CD_LAP
                           ,CD.FUND_FND_TRXN_CD_RCD
                           )
    ;
    wrk.curr_pol.fnd_wthdr_ctr := l_fnd_wthdr_cnt;
--<< 2004-292-msl-uvl-08-01-sipuat51 end
    if is_stat_in_force(WRK.CURR_POL.POL_STAT_CD) = 'Y'
-- TW-UAT8802-04-20       and  ((wrk.curr_pol.apl_laps_dt is null) or (wrk.curr_pol.apl_laps_dt >= l_curr_avy_dt))  -- TW-UAT8802-01-148
    and (not(is_stat_paying(wrk.curr_pol.pol_stat_cd)='Y' and       -- TW-UAT8802-04-20
             nvl(wrk.curr_pol.apl_laps_dt,l_curr_avy_dt) < l_curr_avy_dt))    -- TW-UAT8802-04-20
    then


      --<< VN-RPUL2-CH06
      IF  is_skip_avy ( l_curr_avy_dt ) = 'Y' THEN
        fcn.set_return(98);  -- VN-RPUL2-CH06
        RETURN;
      END IF;
      -->> VN-RPUL2-CH06
      Big_Case_Bonus(l_curr_avy_dt);  --PJ22/0445
      Hosp_fnd_Bonus(l_curr_avy_dt);  --PJ22/0445

      --<< VPD-1175
      if pi_pre_avy_ind = 'N' then
          select count(*) into l_act_fml_bonus from tplan_parameters par, tcoverages cov where Parm_typ = 'FAMILY_BONUS'
          and par.Plan_code = cov.Plan_code and cov.Pol_num = wrk.curr_pol.pol_num;
          if l_act_fml_bonus >0 then
            Family_Bonus(l_curr_avy_dt);
          end if;

          --<< VPD-1234
          --select count(*) into l_act_fml_bonus from tplan_parameters par, tcoverages cov where Parm_typ = 'NO_CLAIM_BONUS' --VIIM-4877
		  select count(*) into l_act_clm_bonus from tplan_parameters par, tcoverages cov where Parm_typ = 'NO_CLAIM_BONUS'  --VIIM-4877
          and par.Plan_code = cov.Plan_code and cov.Pol_num = wrk.curr_pol.pol_num;
          if l_act_clm_bonus >0 then
            No_Claim_Bonus(l_curr_avy_dt);
          end if;
          -->> VPD-1234
      end if;
      -->> VPD-1175
      --<<EN9/0497
      if pi_pre_avy_ind = 'N' and WRK.CURR_POL.DIV_OPT = cd.div_opt_prem_ded then
        l_full_paid_dt := advance_ptd(WRK.CURR_POL.POL_EFF_DT,
                                      WRK.CURR_POL.POL_EFF_DT,
                                      WRK.CURR_CVG(l_base).PREM_DUR*12);
        if (l_full_paid_dt <= WRK.CURR_POL.pd_to_dt) and (l_full_paid_dt < WRK.CURR_CVG(l_base).xpry_dt) then
          WRK.CURR_POL.DIV_OPT := cd.div_opt_acum_div;
          WRK.gen_trxn_hist(get_trxn_seq
                       ,s_message.get_message(12460,
                                              'DIV_OPT',
                                              cd.div_opt_prem_ded,
                                              cd.div_opt_acum_div)
                       ,l_trxn_cd
                       );
        end if;
      end if;
      -->>EN9/0497
      int_cap(l_curr_avy_dt);
      lump_sum_int_cap (l_curr_avy_dt);  -- SH-P-1999029-01
      inc_apply(l_curr_avy_dt);  --V03/0064 DatTran 28/04/2004 BANK COLLECTION
      --<< vnuvl-phase2-uat-20060420
      if wrk.curr_plan(WRK.SRCH_BASE_CVG).prod_cat = CD.PROD_CAT_UVL then
        l_int_cap_dt := Fund_Dealing.calc_fnd_int_for_pol(l_curr_avy_dt);
        fcn.set_return(0);
      end if;
      -->> vnuvl-phase2-uat-20060420

--  << HK-1998V2-AY02-C
/*
       if    WRK.CURR_POL.POL_STAT_CD != cd.stat_prem_pay
          or (   WRK.CURR_POL.POL_STAT_CD = cd.stat_prem_pay
             and WRK.CURR_POL.PD_TO_DT >= l_curr_avy_dt
             ) then
*/
      if is_stat_paying(WRK.CURR_POL.POL_STAT_CD) = 'N'
      or (is_stat_paying(WRK.CURR_POL.POL_STAT_CD) = 'Y'
-- FIP-CH14-02          and WRK.CURR_POL.PD_TO_DT >= l_curr_avy_dt) then
-- >> FIP-CH14-02
      and ((wrk.curr_pol.ins_typ_base <> cd.ins_typ_fip and
        --MAT20060327 WRK.CURR_POL.PD_TO_DT >= l_curr_avy_dt)
        (WRK.CURR_POL.PD_TO_DT >= l_curr_avy_dt or l_curr_avy_dt>=wrk.curr_cvg(l_base).xpry_dt)) --MAT20060327
       OR
        (wrk.curr_pol.ins_typ_base = cd.ins_typ_fip
        -- VN-RPUL2-SIT-C6-004  and wrk.curr_pol.mvy_ded_to_dt >= L_CURR_AVY_DT
        )
        )
      )  THEN
-- << FIP-CH14-02
--  >> HK-1998V2-AY02-C
--  << HK-1998V2-RN01-C
-- << FIP-CH22-03
        if wrk.curr_plan(WRK.SRCH_BASE_CVG).realloc_ind = 'Y' then
          avy.fund_realloc(l_curr_avy_dt) ;
        end if;
-- >> FIP-CH22-03
-->> FIP-CH14-02
        if nvl(wrk.curr_pol.rebal_ind,'N') = 'Y' then
          fund_dealing.re_balance;
        end if;
-- 2004-292-msl-uvl-08-01-sipuat51        wrk.curr_pol.fnd_switch_ctr := 0;
-- 2004-292-msl-uvl-08-01-sipuat51        wrk.curr_pol.fnd_wthdr_ctr := 0;
-- << FIP-CH14-02
--        div_apply     (l_curr_avy_dt);
--          if div_earn = 'Y' then      -- LIL2000-158
--<<2000-398
        l_base := wrk.srch_base_cvg;
        if adv_years(ByReftoByValue.convert(wrk.curr_cvg(l_base).cvg_eff_dt),ByReftoByValue.convert(wrk.curr_cvg(l_base).prem_dur)) <= l_curr_avy_dt then --PJ6/0086-20060420-DONGTRUONG
          l_fpu_ind := 'Y';
        end if;
-->>2000-398
        if div_earn = 'Y'
--2000-398       and MONTHS_BETWEEN(WRK.CURR_POL.PD_TO_DT,WRK.CURR_POL.POL_EFF_DT)>=l_min_div_mth then    --LIL2000-158
        and (MONTHS_BETWEEN(WRK.CURR_POL.PD_TO_DT,WRK.CURR_POL.POL_EFF_DT)>=l_min_div_mth
        or l_fpu_ind = 'Y'     --2000-398
        or wrk.curr_pol.pol_stat_cd = cd.stat_rpu ) then    --2003-253
--  << SG-DEV2000-07-A
          if l_div_calc_mthd = 'ARR' then
            if WRK.CURR_POL.DIV_UPTO_DT < WRK.CURR_POL.LAST_AVY_DT then
            --<<VN/SH-Align (2005-Trung001)
              if (get_region_cd = cd.terr_VN and wrk.curr_pol.pol_stat_cd <> cd.stat_rpu) then
                div_apply (WRK.CURR_POL.LAST_AVY_DT);
              elsif get_region_cd <> cd.terr_VN then
            -->>VN/SH-Align (2005-Trung001)
                div_apply (WRK.CURR_POL.LAST_AVY_DT);
              end if;  --VN/SH-Align (2005-Trung001)
--<< SG-20001207-01
              if nvl(l_acum_div_amt,0) <> 0 then
                l_curr_div_int :=  calc_int(cd.int_rt_acum_div_int
                                               ,l_acum_div_amt
                                               ,wrk.curr_pol.last_avy_dt
                                               ,l_curr_avy_dt
                                               ,NULL
                                               ,wrk.curr_pol.plan_code_base
                                               );

                WRK.CURR_AVY.ACUM_ACTV_DT := l_curr_avy_dt;
--                                    WRK.CURR_AVY.ACUM_BAL := WRK.CURR_AVY.ACUM_BAL + l_curr_div_int;
                WRK.gen_acct_ext(cd.credit,'DVDPAYIC',l_curr_div_int,l_trxn_cd,l_curr_avy_dt);
                WRK.gen_acct_ext(cd.debit, 'DVDINT'  ,l_curr_div_int,l_trxn_cd,l_curr_avy_dt);

                WRK.gen_trxn_hist(get_trxn_seq
                                                     ,S_MESSAGE.GET_MESSAGE(3010,to_char(WRK.CURR_AVY.ACUM_BAL))
                                                     ,l_trxn_cd
                                                     ,l_curr_div_int
                                                     ,null
                                                     ,l_curr_avy_dt
                                                     ,NULL ,'N'                            --CAS001135
                                                       );
              end if;
--<< SG-20001207-01

            end if;

          else
                -- If control parameter DIV_CALC_MTHD doesn't set, The following is the default logic
            --<<VN/SH-Align (2005-Trung001)
              if (get_region_cd = cd.terr_VN and wrk.curr_pol.pol_stat_cd <> cd.stat_rpu) then
                div_apply (l_curr_avy_dt);
              elsif get_region_cd <> cd.terr_VN then
            -->>VN/SH-Align (2005-Trung001)
                div_apply (l_curr_avy_dt);
              end if; --VN/SH-Align (2005-Trung001)
            WRK.CURR_POL.DIV_UPTO_DT := l_curr_avy_dt;
          end if;
--  >> SG-DEV2000-07-A
--  SG-DEV2000-07-A             div_apply  (l_curr_avy_dt);
        end if;
--  >> HK-1998V2-RN01-C
        --EN9/0497 endow_apply   (l_curr_avy_dt);
        --<<EN9/0497
        endow_apply(pi_asof_dt => l_curr_avy_dt
                   ,pi_pre_avy_ind => pi_pre_avy_ind
                    );
        -->>EN9/0497
--  WCB98040101 Start
        for i in 1 .. WRK.CURR_CVG.COUNT loop
          l_annuity_payo_amt := l_annuity_payo_amt + annuity_declare(i, l_curr_avy_dt);
        end loop;
        WRK.CURR_AVY.ANTY_PAYO_AMT := l_annuity_payo_amt;
--  WCB98040101 End
        if l_terr_cd='SH' then -- VN/SH-Align (2005-HNAM002)
          calc_jv_dth_bnft(l_curr_avy_dt);     --2003-322
          --<< EDM2000061801 begin
          if l_curr_avy_dt >= l_Avy_Cnv_Start_Dt + 15 then
            Renewable_Convert(l_curr_avy_dt)       ;
            ZCB_generate(l_curr_avy_dt)    ;
            gib_generate(l_curr_avy_dt) ;   --2003-025
          end if ;
          -->> EDM2000061801 end
        end if; --VN/SH-Align (2005-HNAM002)
--sh-fip-01          mat_process  (l_curr_avy_dt);  -- SG-DEV2000-32-A  --??sh
        --EN9/0497-Revise mat_process_vn(l_curr_avy_dt); -- MAT20060327
        mat_process_vn(l_curr_avy_dt, pi_pre_avy_ind);  --EN9/0497-Revise
        l_dscnt_prem := WRK.CURR_POL.DSCNT_PREM;
        -->> vnuvl-phase2-uat-20060420
        WRK.gen_trxn_hist(get_trxn_seq
                            ,S_MESSAGE.GET_MESSAGE(12460, 'LAST_AVY_DT', l_curr_avy_dt, WRK.CURR_POL.LAST_AVY_DT )
                            ,l_trxn_cd
                            ,null
                            ,null
                            ,null
                            ,'ACTV_EXE'
                            );
        --<< vnuvl-phase2-uat-20060420
        WRK.CURR_POL.LAST_AVY_DT := l_curr_avy_dt;
--        l_chk_rslt   := chk_ipo(wrk.curr_pol.last_avy_dt);                     --2004-343
        ipo_generate(wrk.curr_pol.last_avy_dt);      -- TW-UAT9902-01-034
--2004-413        if fcn.return_code = 14 and wrk.curr_pol.ipo_ind = cd.ipo_ind_declne then   --2004-343
--2004-413            wrk.curr_pol.ipo_ind := cd.ipo_ind_yes;                            --2004-343
--2004-413        end if;                                                                --2004-343

          -->> SG-DEV2000-05-A
        IF l_wp_mthd = 'N' THEN
          conv_pb_to_wp(wrk.curr_pol.last_avy_dt);
        END IF;
          --<< SG-DEV2000-05-A
        fcn.set_return(0);     -- TW-UAT9902-01-034
        prem_calc.calculate(l_curr_avy_dt);
        if WRK.CURR_POL.DSCNT_PREM != l_dscnt_prem then
          WRK.gen_trxn_hist(get_trxn_seq
                              ,S_MESSAGE.GET_MESSAGE(3002)
                              ,l_trxn_cd
                              ,WRK.CURR_POL.DSCNT_PREM
                              ,null
                              ,l_curr_avy_dt
                              ,NULL ,'N'                            --CAS001135
                              );
        end if;
--  << HK-1998V2-AY02-C
-- SH-P-1999029-01  Removed   if WRK.CURR_POL.LUMP_SUM_IND = 'Y' then
-- SH-P-1999029-01  Removed    lump_sum_payment (l_curr_avy_dt);
-- SH-P-1999029-01  Removed   end if;
--  >> HK-1998V2-AY02-C
        WRK.CURR_POL.RENW_YR     := prem_calc.calc_att_age(WRK.Srch_base_cvg,l_curr_avy_dt,'N')
                                      - WRK.CURR_CVG(WRK.Srch_base_cvg).CVG_EFF_AGE;
      end if;

/*  --2004-343
      if is_gen_ipo(wrk.curr_pol.ipo_ind) = 'Y' then
        l_base          := wrk.srch_base_cvg;
        l_base_att_age  := prem_calc.calc_att_age(l_base,l_curr_avy_dt,'N');
        l_base_dur      := l_base_att_age - WRK.CURR_CVG(l_base).CVG_EFF_AGE;
        l_IPO_Total_FA  := WRK.CURR_CVG(l_base).FACE_AMT;
        for i in 1 .. WRK.CURR_CVG.COUNT loop
          if is_cvg_ipo(WRK.CURR_CVG(i).CVG_TYP,WRK.CURR_CVG(i).CVG_REASN) = 'Y' then
            l_IPO_Total_FA := l_IPO_Total_FA + WRK.CURR_CVG(i).FACE_AMT;
          end if;
        end loop;
        if (    nvl(WRK.CURR_PLAN(l_base).IPO_MAX_FA,0) > 0
              and WRK.CURR_PLAN(l_base).IPO_MAX_FA   <= l_IPO_Total_FA
                                                        + WRK.CURR_CVG(l_base).FACE_AMT
                                                          * WRK.CURR_PLAN(l_base).IPO_PCT / 100
             ) or
             (    nvl(WRK.CURR_PLAN(l_base).IPO_TRMN_AGE,0) > 0
              and WRK.CURR_PLAN(l_base).IPO_TRMN_AGE <  l_base_att_age + 1
             ) or
             (    nvl(WRK.CURR_PLAN(l_base).IPO_TRMN_YR,0) > 0
--  WCB98050102 Start
--            and WRK.CURR_PLAN(l_base).IPO_TRMN_YR  <  l_base_dur + 1
              and l_base_dur >= WRK.CURR_CVG(l_base).PREM_DUR - WRK.CURR_PLAN(l_base).IPO_TRMN_YR
--  WCB98050102 End
             ) or
             (    nvl(WRK.CURR_PLAN(l_base).IPO_MAX_FA_ME,0) > 0
              and WRK.CURR_PLAN(l_base).IPO_MAX_FA_ME
                  * WRK.CURR_CVG(l_base).BAND_FACE_AMT <= l_IPO_Total_FA
                                                          + WRK.CURR_CVG(l_base).FACE_AMT
                                                            * WRK.CURR_PLAN(l_base).IPO_PCT / 100
             )
        then
          WRK.CURR_POL.IPO_IND := cd.ipo_ind_trmn;
        else
          WRK.CURR_POL.IPO_IND := cd.ipo_ind_yes;
        end if;
      end if;
*/  --2004-343
      --<<PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP-in case non AVY process
      if l_terr_cd='VN' and wrk.curr_avy.endow_bal > 0 and WRK.CURR_LOAN.LOAN_BAL > 0
          and pi_pre_avy_ind = 'N'  --EN9/0497
      then
          l_endow_amt:=repay_loan_by_ccp(wrk.curr_avy.endow_bal,l_trxn_cd,l_curr_avy_dt);
      end if;
      -->>PR7/0110 Dat Tran 01/11/2006 loan repayment by CCP-in case non AVY process

      if wrk.curr_loan.loan_bal > 0 and overloan(l_curr_avy_dt) then -- (DCB98012201)
        WRK.CURR_POL.OVR_LOAN_IND := cd.overloan_yes;
      else
        WRK.CURR_POL.OVR_LOAN_IND := cd.overloan_no;
      end if;

      l_pol_year := round(months_between(l_curr_avy_dt,WRK.CURR_POL.POL_EFF_DT)/12,0);  -- VN-RPUL2-SIT-26NOV-2

--<< Cuong Nguyen 26/09/2003 - Pay PL/PP bonus only if pd_to_dt >= AVY date
      if (  is_stat_paying(WRK.CURR_POL.POL_STAT_CD) = 'Y'
        and WRK.CURR_POL.PD_TO_DT >= l_curr_avy_dt)
        and l_bns_logic = 'VN'    --VN/SH-Align (2005-001)
      then
-->> Cuong Nguyen 26/09/2003 - Pay PL/PP bonus only if pd_to_dt >= AVY date
--<<  VN-New product Premier/Lady
        -- VN-RPUL2-SIT-26NOV-2  l_pol_year := round(months_between(l_curr_avy_dt,WRK.CURR_POL.POL_EFF_DT)/12,0);
        l_ldybns_ind := get_plan_mthd_ovrid(ByReftoByValue.convert(wrk.curr_cvg(l_base).plan_code), ByReftoByValue.convert(wrk.curr_cvg(l_base).vers_num), 'LDYBNS'); --PJ6/0086-200600420-DONGTRUONG
        if l_ldybns_ind = 'Y' and l_pol_year in (3,5,10) then
          Lady_Bonus(l_pol_year,ByReftoByValue.convert(WRK.CURR_CVG(l_base).FACE_AMT)); --PJ6/0086-20060420-DONGTRUONG
        end if;
-->>  VN-New product Premier/Lady
--<<  Q2CE09 -PL/PP Bonus at 2th AVY - HB modified 04/04/2003
        if get_plan_mthd_ovrid(ByReftoByValue.convert(wrk.curr_cvg(l_base).plan_code),'*','PLPP_BNS') = 'Y' and l_pol_year = 2 then --PJ6/0086-20060420-DONGTRUONG
          if wrk.curr_cvg(l_base).vers_num in ('01','02') then
            open c_check_tpolicys_vn(WRK.CURR_POL.POL_NUM);
            fetch c_check_tpolicys_vn into l_pol_temp;
            if c_check_tpolicys_vn%found then
              Gen_PLPP_Bonus;
            end if;
            close c_check_tpolicys_vn;
          else
            Gen_PLPP_Bonus;
          end if;
        end if;
-->>  Q2CE09 -PL/PP Bonus at 2th AVY - HB modified 04/04/2003

        --<< VN-RPUL2-SIT-26NOV-2
        /*
        --<< VN-RPUL2-CH06, Persistency Bonus
        IF wrk.curr_pol.loyal_bns_ind = 'Y'
         AND pi_pre_avy_ind = 'N'  -- VN-RPUL2-CH05-B7-002
        THEN
          calc_lbs ( pi_dur     => l_pol_year
                    ,pi_asof_dt => l_curr_avy_dt
                   );
        END IF;
        -->> VN-RPUL2-CH06
        */
        -->> VN-RPUL2-SIT-26NOV-2

      end if;  -- Cuong Nguyen 26/09/2003 - Pay PL/PP bonus only if pd_to_dt >= AVY date
      --<<MD11/0408

       if wrk.curr_pol.pol_stat_cd = cd.STAT_FPU then
              if wrk.curr_avy.lump_sum_bal > 0 then
                  Lump_Sum_Payment(l_curr_avy_dt ,wrk.curr_pol.pol_stat_cd );
              end if;
        end if;
      -->>MD11/0408

		--<<VNS-5048, VNS-5049
      if pi_pre_avy_ind = 'N' then
        Medical_Check_Up(pi_asof_dt => l_curr_avy_dt
                    );
      end if;
        -->>VNS-5048, VNS-5049

      --<< VN-RPUL2-SIT-26NOV-2, Persistency Bonus
      IF wrk.curr_pol.loyal_bns_ind = 'Y'
       AND pi_pre_avy_ind = 'N'  -- VN-RPUL2-CH05-B7-002
       AND wrk.CURR_POL.plan_code_base ='RUV01'--VPD-731_VPD-1030
      THEN
        calc_lbs ( pi_dur     => l_pol_year
                  ,pi_asof_dt => l_curr_avy_dt
                 );
      --<<VPD-731_VPD-1030
     ELSIF  pi_pre_avy_ind = 'N' THEN
            calc_lbs ( pi_dur     => l_pol_year
                  ,pi_asof_dt => l_curr_avy_dt
                 );
      -->>VPD-731_VPD-1030
      END IF;
      -->> VN-RPUL2-SIT-26NOV-2
	  /*--<<VPD-22--VPD-132
      if pi_pre_avy_ind = 'N' then
        Medical_Check_Up(pi_asof_dt => l_curr_avy_dt
                    );
      end if;
        -->>VPD-22--VPD-132*/--  VNS-5048, VNS-5049
      --<<VPD-22--VPD-131
      if pi_pre_avy_ind = 'N' then
        calc_sbs ( pi_dur     => l_pol_year
                  ,pi_asof_dt => l_curr_avy_dt
                 );
      end if;
        -->>VPD-22--VPD-131
    end if;
  end;
--<<APP_160344
  procedure transfer_matu_amt_to_new_pol(pi_pol_num varchar2) is
    l_trxn_cd varchar2(15):='AVYPRC';
    l_shi_num    tsuspense_histories.shi_num%type;
    l_cas_dt     date := get_cas_sys_dt;
    l_reasn_cd   varchar2(3) := '901';
    l_old_reasn_cd varchar2(3) := '';
    l_amt        number(15,2) := 0;
    x_err_acct_ext exception;
    x_err_susp_hist exception;
    x_err_get_acct_mne exception;
    c_err_unknown constant number := 99;
	l_pol_exists	varchar2(1) := 'N';
    cursor c_pol is
           select *
           from tmi_pol_after_maturities pol
           where pol.old_pol_num = pi_pol_num
           and not exists (
                             select 1
                             from tclaim_details cdt
                             where clm_stat_code = 'A'
                             and pol.old_pol_num = cdt.pol_num
                           )
           ;
    begin
      fcn.set_return(0);
      l_old_reasn_cd := fcn.Reasn_Code;
        --duyet tren cac hop dong maturity trong ngay
        for c in c_pol
          loop
			l_amt := c.mode_prem;-- mode premium
      if wrk.CURR_POL.pol_susp - wrk.CURR_POL.resv_dnr_amt>= l_amt then
              --Old policys
              begin
                fcn.Set_Reasn_Code('901');
                fcn.Set_Trxn_ID();


                WRK.gen_acct_ext(cd.debit,
                                 'SUPPOL',
                                 l_amt,
                                 l_trxn_cd);
                WRK.gen_acct_ext(cd.credit,
                                 'CRENTRY',
                                 l_amt,
                                 l_trxn_cd);
                WRK.gen_trxn_hist(get_trxn_seq,
                                 'Transfer amount from Matured policy to '||c.new_pol_num||', with amount as shown',
                                 l_trxn_cd,
                                 l_amt);

                ---- New policys

                     s_acct_extract.put(l_cas_dt,
                                         'D',
                                         'M',
                                         'CRENTRY',
                                         '78',
                                         l_amt,
                                         l_trxn_cd,
                                         l_reasn_cd,
                                         c.new_pol_num,
                                         null,
                                         null,
                                         NULL,
                                         NULL);
                      s_acct_extract.put(l_cas_dt,
                                         'C',
                                         'M',
                                         'SUPCWA',
                                         '78',
                                         l_amt,
                                         l_trxn_cd,
                                         l_reasn_cd,
                                         c.new_pol_num,
                                         null,
                                         null,
                                         NULL,
                                         NULL);
                      s_acct_extract.generate('N');
                      if fcn.return_code <> 0 then
                          raise x_err_acct_ext;
                      end if;

                      select shi_seq.nextval into l_shi_num from dual;

                      s_susp_histories(c.new_pol_num,
                                       l_shi_num,
                                       'SUPCWA',
                                       l_amt,
                                       '78',
                                       l_trxn_cd,
                                       l_reasn_cd,
                                       l_cas_dt,
                                       l_pol_exists);
                      if fcn.return_code <> 0 then
                          raise x_err_susp_hist;
                      end if;
                      insert_ttrxn_histories(c.new_pol_num,l_trxn_cd,'Transfer from '||c.old_pol_num||'''s policy suspense to , with amount as shown',l_cas_dt,l_reasn_cd,null,l_amt);
                  exception
                    when x_err_acct_ext then
                        fcn.set_msg_tbl(3410,
                                        c.new_pol_num || ',' ||
                                        fcn.return_code);
                        fcn.set_return(1, 3410);
                    when x_err_susp_hist then
                        fcn.set_msg_tbl(3411, c.new_pol_num);
                        fcn.set_return(2, 3411);
                    when others then
                        fcn.set_return(c_err_unknown, sqlcode);
                        dbms_output.put_line('return_code=' || fcn.return_code || '-err=' || SQLERRM);
                  end;
               end if;
            end loop;
             fcn.Set_Reasn_Code(l_old_reasn_cd);
   end transfer_matu_amt_to_new_pol;
-->>APP_160344
end;
